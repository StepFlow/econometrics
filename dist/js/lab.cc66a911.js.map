{"version":3,"sources":["webpack:///./node_modules/moment/locale/uz-latn.js","webpack:///./node_modules/moment/locale/ml.js","webpack:///./node_modules/moment/locale/cv.js","webpack:///./node_modules/moment/locale/is.js","webpack:///./node_modules/moment/locale/fo.js","webpack:///./node_modules/moment/locale/ja.js","webpack:///./node_modules/moment/locale/es-do.js","webpack:///./node_modules/moment/locale/ar-ma.js","webpack:///./node_modules/moment/locale/gom-latn.js","webpack:///./node_modules/moment/locale/fr-ch.js","webpack:///./node_modules/moment/locale/en-au.js","webpack:///./node_modules/moment/locale/tr.js","webpack:///./node_modules/moment/locale/da.js","webpack:///./node_modules/moment/locale/tl-ph.js","webpack:///./node_modules/moment/locale/eu.js","webpack:///./node_modules/moment/locale/th.js","webpack:///./node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/moment/locale/sr-cyrl.js","webpack:///./node_modules/moment/locale/mt.js","webpack:///./node_modules/moment/locale/ar-ly.js","webpack:///./node_modules/moment/locale/be.js","webpack:///./node_modules/moment/locale/ka.js","webpack:///./node_modules/moment/locale/ko.js","webpack:///./node_modules/moment/locale/ku.js","webpack:///./node_modules/moment/locale/bs.js","webpack:///./node_modules/moment/locale/lt.js","webpack:///./node_modules/moment/locale/vi.js","webpack:///./node_modules/moment/locale/me.js","webpack:///./node_modules/moment/locale/af.js","webpack:///./node_modules/moment/locale/uz.js","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./node_modules/core-js/modules/es6.string.includes.js","webpack:///./node_modules/chart.js/dist/Chart.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/moment/locale/en-ca.js","webpack:///./node_modules/moment/locale/en-gb.js","webpack:///./node_modules/moment/locale/mr.js","webpack:///./node_modules/moment/locale/ne.js","webpack:///./node_modules/moment/locale/tg.js","webpack:///./node_modules/moment/locale/cs.js","webpack:///./node_modules/moment/locale/ta.js","webpack:///./node_modules/moment/locale/kn.js","webpack:///./node_modules/decimal.js/decimal.js","webpack:///./node_modules/moment/locale/ar-kw.js","webpack:///./node_modules/moment/locale/lb.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./node_modules/moment/locale/az.js","webpack:///./node_modules/moment/locale/zh-hk.js","webpack:///./node_modules/moment/locale/hr.js","webpack:///./node_modules/moment/locale/id.js","webpack:///./node_modules/moment/locale/ga.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/moment/locale/ur.js","webpack:///./node_modules/moment/locale/ss.js","webpack:///./node_modules/moment/locale/es-us.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./node_modules/moment/locale/tet.js","webpack:///./src/views/Lab1.vue?9534","webpack:///./src/components/Lab.vue?c847","webpack:///src/components/Lab.vue","webpack:///./src/components/Lab.vue?8b6f","webpack:///./src/components/Lab.vue","webpack:///./src/components/VTable.vue?ace3","webpack:///src/components/VTable.vue","webpack:///./src/components/VTable.vue?9cd5","webpack:///./src/components/VTable.vue?e444","webpack:///./node_modules/vue-chartjs/es/mixins/index.js","webpack:///./node_modules/vue-chartjs/es/BaseCharts.js","webpack:///./src/components/charts/IntervalFrequency.vue","webpack:///./src/components/charts/relativeFrequency.vue","webpack:///./src/components/charts/EmpericalDistributionFunction.vue","webpack:///src/components/charts/IntervalFrequency.vue","webpack:///./src/components/charts/IntervalFrequency.vue?71c0","webpack:///src/components/charts/relativeFrequency.vue","webpack:///./src/components/charts/relativeFrequency.vue?1e86","webpack:///src/components/charts/EmpericalDistributionFunction.vue","webpack:///./src/components/charts/EmpericalDistributionFunction.vue?bf46","webpack:///./node_modules/mathjs/src/core/config.js","webpack:///./node_modules/mathjs/src/utils/is.js","webpack:///./node_modules/mathjs/src/utils/object.js","webpack:///./node_modules/mathjs/src/core/function/config.js","webpack:///./node_modules/mathjs/src/entry/configReadonly.js","webpack:///./node_modules/mathjs/src/utils/number.js","webpack:///./node_modules/mathjs/src/utils/bignumber/formatter.js","webpack:///./node_modules/mathjs/src/utils/string.js","webpack:///./node_modules/mathjs/src/error/DimensionError.js","webpack:///./node_modules/mathjs/src/error/IndexError.js","webpack:///./node_modules/mathjs/src/utils/array.js","webpack:///./node_modules/mathjs/src/utils/factory.js","webpack:///./node_modules/mathjs/src/type/complex/Complex.js","webpack:///./node_modules/mathjs/src/utils/function.js","webpack:///./node_modules/mathjs/src/utils/bignumber/constants.js","webpack:///./node_modules/mathjs/src/plain/number/constants.js","webpack:///./node_modules/mathjs/src/type/bignumber/BigNumber.js","webpack:///./node_modules/mathjs/src/type/matrix/Matrix.js","webpack:///./node_modules/mathjs/src/type/unit/physicalConstants.js","webpack:///./node_modules/mathjs/src/type/fraction/Fraction.js","webpack:///./node_modules/mathjs/src/type/matrix/DenseMatrix.js","webpack:///./node_modules/mathjs/src/core/function/typed.js","webpack:///./node_modules/mathjs/src/utils/collection.js","webpack:///./node_modules/mathjs/src/function/utils/isInteger.js","webpack:///./node_modules/mathjs/src/function/utils/isNumeric.js","webpack:///./node_modules/mathjs/src/plain/number/utils.js","webpack:///./node_modules/mathjs/src/function/utils/isPositive.js","webpack:///./node_modules/mathjs/src/function/utils/isNaN.js","webpack:///./node_modules/mathjs/src/utils/bignumber/nearlyEqual.js","webpack:///./node_modules/mathjs/src/utils/complex.js","webpack:///./node_modules/mathjs/src/function/relational/equalScalar.js","webpack:///./node_modules/mathjs/src/type/number.js","webpack:///./node_modules/mathjs/src/plain/number/arithmetic.js","webpack:///./node_modules/mathjs/src/function/arithmetic/cube.js","webpack:///./node_modules/mathjs/src/function/arithmetic/multiplyScalar.js","webpack:///./node_modules/mathjs/src/plain/number/bitwise.js","webpack:///./node_modules/mathjs/src/function/bitwise/bitNot.js","webpack:///./node_modules/mathjs/src/plain/number/logical.js","webpack:///./node_modules/mathjs/src/function/special/erf.js","webpack:///./node_modules/mathjs/src/plain/number/trigonometry.js","webpack:///./node_modules/mathjs/src/utils/product.js","webpack:///./node_modules/mathjs/src/plain/number/combinations.js","webpack:///./node_modules/mathjs/src/utils/log.js","webpack:///./node_modules/mathjs/src/function/probability/randomInt.js","webpack:///./node_modules/mathjs/src/type/fraction/function/fraction.js","webpack:///./node_modules/mathjs/src/function/arithmetic/unaryMinus.js","webpack:///./node_modules/mathjs/src/function/arithmetic/addScalar.js","webpack:///./node_modules/mathjs/src/function/arithmetic/sqrt.js","webpack:///./node_modules/mathjs/src/function/statistics/mode.js","webpack:///./node_modules/mathjs/src/function/trigonometry/acosh.js","webpack:///./node_modules/mathjs/src/type/matrix/SparseMatrix.js","webpack:///./node_modules/mathjs/src/type/matrix/function/matrix.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm01.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm04.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm10.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm13.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm14.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm03.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm05.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm11.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm12.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm07.js","webpack:///./node_modules/mathjs/src/function/matrix/diag.js","webpack:///./node_modules/mathjs/src/function/matrix/identity.js","webpack:///./node_modules/mathjs/src/function/matrix/reshape.js","webpack:///./node_modules/mathjs/src/utils/noop.js","webpack:///./node_modules/mathjs/src/function/matrix/zeros.js","webpack:///./node_modules/mathjs/src/function/arithmetic/round.js","webpack:///./node_modules/mathjs/src/function/relational/compare.js","webpack:///./node_modules/mathjs/src/function/relational/smaller.js","webpack:///./node_modules/mathjs/src/function/relational/larger.js","webpack:///./node_modules/mathjs/src/function/relational/unequal.js","webpack:///./node_modules/mathjs/src/function/statistics/utils/improveErrorMessage.js","webpack:///./node_modules/mathjs/src/function/statistics/max.js","webpack:///./node_modules/mathjs/src/type/matrix/FibonacciHeap.js","webpack:///./node_modules/mathjs/src/function/arithmetic/add.js","webpack:///./node_modules/mathjs/src/function/arithmetic/abs.js","webpack:///./node_modules/mathjs/src/function/arithmetic/multiply.js","webpack:///./node_modules/mathjs/src/error/ArgumentsError.js","webpack:///./node_modules/mathjs/src/function/matrix/resize.js","webpack:///./node_modules/mathjs/src/function/arithmetic/pow.js","webpack:///./node_modules/mathjs/src/function/relational/equalText.js","webpack:///./node_modules/mathjs/src/function/matrix/partitionSelect.js","webpack:///./node_modules/mathjs/src/type/matrix/Spa.js","webpack:///./node_modules/mathjs/src/plain/number/probability.js","webpack:///./node_modules/mathjs/src/type/bignumber/function/bignumber.js","webpack:///./node_modules/mathjs/src/function/matrix/transpose.js","webpack:///./node_modules/mathjs/src/function/utils/numeric.js","webpack:///./node_modules/mathjs/src/function/relational/smallerEq.js","webpack:///./node_modules/mathjs/src/function/arithmetic/ceil.js","webpack:///./node_modules/mathjs/src/function/arithmetic/subtract.js","webpack:///./node_modules/mathjs/src/function/matrix/cross.js","webpack:///./node_modules/mathjs/src/function/relational/equal.js","webpack:///./node_modules/mathjs/src/function/arithmetic/divideScalar.js","webpack:///./node_modules/mathjs/src/function/algebra/solver/lsolve.js","webpack:///./node_modules/mathjs/src/function/algebra/decomposition/lup.js","webpack:///./node_modules/mathjs/src/function/algebra/sparse/csSpsolve.js","webpack:///./node_modules/mathjs/src/function/matrix/det.js","webpack:///./node_modules/mathjs/src/function/matrix/inv.js","webpack:///./node_modules/mathjs/src/function/algebra/solver/lusolve.js","webpack:///./node_modules/mathjs/src/function/arithmetic/divide.js","webpack:///./node_modules/mathjs/src/function/statistics/median.js","webpack:///./node_modules/mathjs/src/entry/pureFunctionsAny.generated.js","webpack:///src/views/Lab1.vue","webpack:///./src/views/Lab1.vue?b843","webpack:///./src/views/Lab1.vue","webpack:///./node_modules/moment/locale/dv.js","webpack:///./node_modules/moment/locale/hu.js","webpack:///./node_modules/moment/locale/zh-cn.js","webpack:///./node_modules/moment/locale/te.js","webpack:///./node_modules/core-js/modules/_inherit-if-required.js","webpack:///./node_modules/moment/locale/sv.js","webpack:///./node_modules/moment/locale/ug-cn.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/moment/locale/ms-my.js","webpack:///./node_modules/moment/locale/eo.js","webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./node_modules/moment/locale/sd.js","webpack:///./node_modules/moment/locale/br.js","webpack:///./node_modules/moment/locale/mi.js","webpack:///./node_modules/moment/locale/mk.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/moment/locale/nb.js","webpack:///./node_modules/moment/locale/kk.js","webpack:///./node_modules/moment/locale/ar-tn.js","webpack:///./node_modules/moment/locale/it.js","webpack:///./node_modules/moment/locale/it-ch.js","webpack:///./node_modules/moment/locale/en-nz.js","webpack:///./node_modules/moment/locale/fy.js","webpack:///./node_modules/moment/locale/en-il.js","webpack:///./node_modules/moment/locale/sw.js","webpack:///./node_modules/typed-function/typed-function.js","webpack:///./node_modules/moment/locale/sk.js","webpack:///./node_modules/moment/locale/yo.js","webpack:///./node_modules/moment/locale/sl.js","webpack:///./node_modules/moment/locale/fi.js","webpack:///./node_modules/moment/locale/ar-sa.js","webpack:///./src/components/Lab.vue?b05a","webpack:///./node_modules/moment/locale/bg.js","webpack:///./node_modules/moment/locale/my.js","webpack:///./node_modules/moment/locale/gl.js","webpack:///./node_modules/moment/locale/es.js","webpack:///./node_modules/core-js/modules/_set-proto.js","webpack:///./node_modules/moment/locale/el.js","webpack:///./node_modules/moment/locale/pl.js","webpack:///./node_modules/moment/locale/fa.js","webpack:///./node_modules/moment/locale/ar.js","webpack:///./node_modules/moment/locale/bn.js","webpack:///./node_modules/core-js/modules/_object-gopn.js","webpack:///./node_modules/moment/locale/zh-tw.js","webpack:///./node_modules/moment/locale/ru.js","webpack:///./node_modules/moment/locale/mn.js","webpack:///./node_modules/moment/locale/ky.js","webpack:///./node_modules/moment/locale/ro.js","webpack:///./node_modules/moment/locale/cy.js","webpack:///./node_modules/moment/locale/fr.js","webpack:///./node_modules/moment/locale/ar-dz.js","webpack:///./src/components/VTable.vue?ab87","webpack:///./node_modules/moment/locale/bm.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/moment/locale/uk.js","webpack:///./node_modules/seed-random/index.js","webpack:///./node_modules/moment/locale/lo.js","webpack:///./node_modules/moment/locale/de-at.js","webpack:///./node_modules/moment/locale/de.js","webpack:///./node_modules/moment/locale/tzm-latn.js","webpack:///./node_modules/moment/locale/jv.js","webpack:///./node_modules/moment/locale/nn.js","webpack:///./node_modules/moment/locale/lv.js","webpack:///./node_modules/moment/locale/de-ch.js","webpack:///./node_modules/moment/locale/tzm.js","webpack:///./node_modules/moment/moment.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./node_modules/moment/locale/he.js","webpack:///./node_modules/moment/locale/sq.js","webpack:///./node_modules/moment/locale/en-SG.js","webpack:///./node_modules/moment/locale/sr.js","webpack:///./node_modules/moment/locale/tzl.js","webpack:///./node_modules/moment/locale/tlh.js","webpack:///./node_modules/moment/locale/bo.js","webpack:///./node_modules/core-js/modules/_string-context.js","webpack:///./node_modules/moment/locale/pt-br.js","webpack:///./node_modules/fraction.js/fraction.js","webpack:///./node_modules/moment/locale/hy-am.js","webpack:///./node_modules/moment/locale/ca.js","webpack:///./node_modules/moment/locale/fr-ca.js","webpack:///./node_modules/moment/locale/nl-be.js","webpack:///./node_modules/moment/locale/hi.js","webpack:///./node_modules/moment/locale/gu.js","webpack:///./node_modules/moment/locale/en-ie.js","webpack:///./node_modules/moment/locale/km.js","webpack:///./node_modules/javascript-natural-sort/naturalSort.js","webpack:///./node_modules/moment/locale/ms.js","webpack:///./node_modules/moment/locale/et.js","webpack:///./node_modules/moment/locale/si.js","webpack:///./node_modules/complex.js/complex.js","webpack:///./node_modules/moment/locale/pt.js","webpack:///./node_modules/moment/locale/pa-in.js","webpack:///./node_modules/moment/locale/gd.js","webpack:///./node_modules/moment/locale/nl.js","webpack:///./node_modules/moment/locale/x-pseudo.js","webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./node_modules/moment/locale/se.js"],"names":["global","factory","__webpack_require__","this","moment","uzLatn","defineLocale","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","week","dow","doy","ml","monthsParseExact","meridiemParse","meridiemHour","hour","meridiem","minute","isLower","cv","output","affix","exec","dayOfMonthOrdinalParse","ordinal","plural","n","translate","number","withoutSuffix","key","isFuture","result","is","fo","ja","l","ll","lll","llll","isPM","input","now","period","monthsShortDot","monthsParse","monthsRegex","esDo","format","test","month","monthsShortRegex","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","weekdaysParseExact","hours","arMa","processRelativeTime","gomLatn","frCh","enAu","b","suffixes","1","5","8","70","80","2","7","20","50","3","4","100","6","9","10","30","60","90","tr","a","c","da","tlPh","eu","th","pIE","createDesc","toIObject","toPrimitive","has","IE8_DOM_DEFINE","gOPD","Object","getOwnPropertyDescriptor","exports","f","O","P","e","call","translator","words","correctGrammaticalCase","wordKey","length","srCyrl","day","lastWeekDays","mt","symbolMap","0","pluralForm","plurals","pluralize","u","string","str","replace","arLy","preparse","postformat","match","word","num","forms","relativeTimeWithPlural","be","standalone","isFormat","ka","ko","token","isUpper","numberMap","١","٢","٣","٤","٥","٦","٧","٨","٩","٠","ku","bs","units","translateSeconds","translateSingular","special","lt","vi","minutes","me","af","uz","fails","module","method","arg","$export","context","INCLUDES","F","includes","searchString","indexOf","arguments","undefined","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","hsl2rgb","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lab2lch","lch2lab","lch2xyz","lch2rgb","rgb","r","g","min","Math","max","delta","v","w","k","reverseKeywords","JSON","stringify","pow","x","z","xyz","args","hsl","t1","t2","t3","val","i","sv","hsv","hi","floor","p","q","t","sl","hwb","wh","bl","ratio","cmyk","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","func","Array","prototype","slice","pair","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","getHsl","getHwb","getAlpha","hexString","rgbString","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","abbr","hex","rgba","per","hexAlpha","parseInt","parseFloat","scale","alpha","isNaN","hsla","hexDouble","reverseNames","toString","toUpperCase","name","Color","obj","valid","lightness","value","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","toJSON","clone","type","source","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","chartjsColor","helpers","noop","uid","id","isNullOrUndef","isArray","substr","isObject","isFinite","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","apply","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","drawImage","beginPath","lineTo","SQRT1_2","fill","stroke","_isPointInArea","point","area","epsilon","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","toFontString","font","family","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","fontSize","fontFamily","lineHeight","fontStyle","resolve","inputs","helpers$1","easing","canvas","interpolate","start","view","model","ease","actual","origin","c0","c1","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","configurable","enumerable","base","res","object","unlistenArrayEvents","stub","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","yRange","mouseY","pointStyle","element_point","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderSkipped","edge","borderSkipped","horizontal","parseBorderWidth","maxW","maxH","boundingRects","bounds","border","outer","inner","skipX","skipY","rectangle","element_rectangle","rects","fillRect","Arc","Line","Point","Rectangle","resolve$1","computeMinSampleSize","pixels","prev","curr","isHorizontal","ticks","getTicks","getPixelForTick","computeFitCategoryTraits","ruler","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","next","percent","end","hover","mode","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","getPixelForValue","imeta","ivalue","getRightValue","minBarLength","controller","range","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controller_scatter","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","findMaxPadding","boxes","box","getPadding","boxPadding","addSizeByPosition","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getMinimumBoxSize","fitBox","finalFitVerticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBoxSize","findNextWhere","minBox","scaleMargin","platform_basic","acquireContext","getContext","platform_dom","platform_dom$1","freeze","default","getCjsExportFromNamespace","stylesheet","EXPANDO_KEY","CSS_PREFIX","CSS_SIZE_MONITOR","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","initCanvas","config","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","supportsEventListenerOptions","supports","addEventListener","eventListenerOptions","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","fromNativeEvent","event","pos","throttled","ticking","createDiv","cls","el","document","createElement","className","createResizer","maxSize","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","unwatchForRender","remove","addResizeListener","container","maintainAspectRatio","parentNode","clientWidth","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","getElementById","releaseContext","removeAttribute","proxies","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getTooltipSize","tooltip","body","combinedBodyLength","reduce","bodyItem","before","lines","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","changed","existingModel","active","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","initConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","Controller","types","configMerge","scaleMerge","core_helpers","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","log","LOG10E","powerOf10","isPowerOf10","toRadians","toDegrees","radians","_decimalPlaces","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","niceFraction","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","paddingTop","paddingRight","paddingBottom","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","longestText","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","color","CanvasGradient","colorValue","CanvasPattern","abstract","DateAdapter","formats","parse","diff","startOf","endOf","_create","override","members","_date","core_adapters","core_ticks","formatters","tickValue","logDelta","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","getPixelForGridLine","lineValue","computeTextSize","tick","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","sinRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","defaultConfig","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","generateTicks","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","MIN_SPACING","stepSize","unit","maxNumSpaces","precision","rmin","rmax","spacing","ceil","scale_linearbase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","fixedStepSize","ticksAsNumbers","defaultConfig$1","scale_linear","DEFAULT_MIN","DEFAULT_MAX","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","generateTicks$1","exp","significand","tickVal","endExp","endSignificand","minNotZero","lastTick","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","textSize","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","drawingArea","getIndexAngle","hLimits","vLimits","setReductions","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","scale_radialLinear","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","yCenterOffset","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","quarter","year","UNITS","sorter","arrayUnique","hash","out","buildLookupTable","timestamps","distribution","time","table","lookup","mid","i0","i1","lo","interpolate$1","skey","tkey","span","toTimestamp","adapter","_adapter","parser","determineStepSize","capacity","interval","milliseconds","determineUnitForAutoTicks","minUnit","determineUnitForFormatting","determineMajorUnit","generate","timeOpts","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","computeOffsets","ticksFromTimestamps","majorUnit","defaultConfig$4","adapters","displayFormat","displayFormats","scale_time","date","warn","timestamp","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","_majorUnit","_offsets","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","category","radialLinear","FORMATS","_id","valueOf","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","plugin_filler","afterDatasetsUpdate","$filler","beforeDatasetDraw","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","drawLegendBox","SQRT2","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","plugin_title","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","toObject","toAbsoluteIndex","toLength","aLen","endPos","enCa","enGb","१","२","३","४","५","६","७","८","९","०","relativeTimeMr","mr","ne","12","13","40","tg","cs","௧","௨","௩","௪","௫","௬","௭","௮","௯","௦","ta","೧","೨","೩","೪","೫","೬","೭","೮","೯","೦","kn","__WEBPACK_AMD_DEFINE_RESULT__","globalScope","Decimal","inexact","quadrant","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","DEFAULTS","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","mathfloor","mathpow","isBinary","isHex","isOctal","isDecimal","BASE","LOG_BASE","LN10_PRECISION","PI_PRECISION","digitsToString","ws","indexOfLastWord","getZeroString","checkInt32","checkRoundingDigits","rm","repeating","di","rd","convertBase","baseIn","baseOut","arrL","arr","strL","cosine","Ctor","tinyPow","taylorSeries","times","cos2x","minus","plus","absoluteValue","finalise","comparedTo","cmp","xdL","ydL","xd","yd","xs","ys","pr","sd","toLessThanHalfPi","neg","cubeRoot","cbrt","rep","t3plusx","isZero","divide","eq","decimalPlaces","dp","dividedBy","div","dividedToIntegerBy","divToInt","equals","greaterThan","gt","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","one","cosh2_x","d8","hyperbolicSine","sinh","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","acos","halfPi","isNeg","getPi","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","atan","inverseTangent","px","isInteger","isInt","isNegative","isPositive","isPos","lessThan","lessThanOrEqualTo","logarithm","isBase10","denominator","inf","guard","naturalLogarithm","getLn10","sub","xe","xLTy","getBase10Exponent","mod","naturalExponential","negated","carry","unshift","getPrecision","sine","squareRoot","tangent","mul","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","finiteToString","toFraction","maxD","d2","n0","n1","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","yn","intPow","toPrecision","toSignificantDigits","toSD","truncated","trunc","multiplyInteger","temp","compare","aL","bL","subtract","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","isTruncated","digits","roundUp","xdi","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","ltgt","sum","numerator","parseDecimal","search","substring","charCodeAt","parseOther","divisor","isFloat","sin2_x","isHyperbolic","pi","useDefaults","ps","getRandomValues","randomBytes","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","isDecimalInstance","hypot","log2","random","Uint32Array","copy","arKw","processFutureTime","eifelerRegelAppliesToNumber","processPastTime","lastDigit","firstDigit","lb","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","az","zhHk","hm","ga","MATCH","KEY","re","days","ur","esUs","aFunction","$sort","comparefn","tet","_vm","_h","$createElement","_c","_self","attrs","main-title","_v","staticClass","cols","initialTableCols","formula","variationRowTableCols","formulas","median","_s","modeFrequency","variationRange","intervalLength","heads","tables","statisticDist","intervalBordersStr","middles","intervalFreq","relFreq","intervalDensity","is-numerated","num-letter","styles","charts","empericalFunctionCommon","empericalFunction","intervalBorders","distributionFunction","sampleAverage","correctedVariance","sampleStandardDeviation","sampleVariationCoefficient","staticRenderFns","Labvue_type_template_id_67aaac32_render","ref","mainTitle","_t","_l","href","Labvue_type_template_id_67aaac32_staticRenderFns","Labvue_type_script_lang_js_","titles","methods","renderLatex","MathJax","Hub","Queue","$refs","mathJaxEl","created","dSlots","$slots","tag","children","mounted","_this","elm","_title","$nextTick","components_Labvue_type_script_lang_js_","component","componentNormalizer","Lab","VTablevue_type_template_id_95e59942_render","domProps","innerHTML","numLetter","_e","VTablevue_type_template_id_95e59942_staticRenderFns","VTablevue_type_script_lang_js_","rowsCount","components_VTablevue_type_script_lang_js_","VTable_component","VTable","dataHandler","newData","oldData","$data","newDatasetLabels","oldDatasetLabels","oldLabels","newLabels","oldDatasetKeys","newDatasetKeys","deletionKeys","attribute","deletionKey","$emit","renderChart","chartData","generateChart","chartId","chartType","class","cssClasses","addPlugin","Chart_default","beforeDestroy","IntervalFrequency_render","IntervalFrequency_staticRenderFns","relativeFrequency_render","relativeFrequency_staticRenderFns","EmpericalDistributionFunction_render","EmpericalDistributionFunction_staticRenderFns","Bar","IntervalFrequencyvue_type_script_lang_js_","extends","chartColors","charts_IntervalFrequencyvue_type_script_lang_js_","IntervalFrequency_component","IntervalFrequency","relativeFrequencyvue_type_script_lang_js_","charts_relativeFrequencyvue_type_script_lang_js_","relativeFrequency_component","relativeFrequency","EmpericalDistributionFunctionvue_type_script_lang_js_","charts_EmpericalDistributionFunctionvue_type_script_lang_js_","EmpericalDistributionFunction_component","EmpericalDistributionFunction","DEFAULT_CONFIG","matrix","predictable","randomSeed","isBigNumber","isComplex","getPrototypeOf","isFraction","isUnit","isString","isMatrix","isCollection","isDenseMatrix","isSparseMatrix","isRange","isIndex","isBoolean","isResultSet","isHelp","isFunction","isDate","isRegExp","RegExp","isNull","isUndefined","isAccessorNode","isNode","isArrayNode","isAssignmentNode","isBlockNode","isConditionalNode","isConstantNode","isFunctionAssignmentNode","isFunctionNode","isIndexNode","isObjectNode","isOperatorNode","isParenthesisNode","isRangeNode","isSymbolNode","isChain","typeOf","TypeError","mapObject","object_hasOwnProperty","deepStrictEqual","pickShallow","properties","MATRIX_OPTIONS","NUMBER_OPTIONS","configReadonly_config","number_isInteger","assign","number_sign","number_log2","LN2","number_log10","number_log1p","log1p","number_cbrt","number_expm1","expm1","number_format","notation","toEngineering","exponential","lower","upper","fixedOptions","lowerExp","upperExp","splitNumber","SyntaxError","dot","coefficients","zeros","roundDigits","newExp","significandsDiff","expDiff","decimalIdx","decimals","decimalVal","splitValue","pp","number_zeros","removed","DBL_EPSILON","nearlyEqual","number_acosh","number_asinh","number_atanh","number_cosh","number_sinh","number_tanh","formatter_format","formatter_toFixed","formatter_toExponential","formatter_toEngineering","valueWithoutExp","valueStr","string_format","looksLikeFraction","formatArray","syntax","entries","DimensionError","expected","relation","message","IndexError","arraySize","array_validate","dim","dimNext","child","utils_array_validate","isScalar","validateIndex","array_resize","_defaultValue","utils_array_resize","elem","oldLen","newLen","minLen","reshape","sizes","flatArray","flatten","newArray","product","totalSize","sizeIndex","_reshape","tmpArray2","tmpArray","unsqueeze","dims","_unsqueeze","ii","flat","getArrayDataType","itemType","factory_factory","dependencies","create","assertAndCreate","deps","stripOptionalNotation","assertDependencies","isFactory","allDefined","dependency","isOptionalDependency","every","missingDependencies","RangeError","isDimensionError","isIndexError","Complex_name","Complex_dependencies","createComplexClass","complex_default","mathjs","im","toPolar","phi","strRe","strIm","fromPolar","hasBase","fromJSON","json","isClass","memoize","hasher","BigNumber","createBigNumberPi","E","BigNumber_name","BigNumber_dependencies","createBigNumberClass","on","decimal_default","Matrix_name","Matrix_dependencies","createMatrixClass","Matrix","storage","datatype","subset","replacement","skipZeros","toArray","numberFactory","Fraction_name","Fraction_dependencies","createFractionClass","fraction_default","DenseMatrix_name","DenseMatrix_dependencies","createDenseMatrixClass","DenseMatrix","_size","_datatype","preprocess","_get","_getSubmatrix","dimension","submatrix","iSize","sSize","_fit","_setSubmatrix","subIndex","_resize","createDenseMatrix","getDataType","indexI","recurse","diagonal","kSuper","kSub","rows","columns","_value","ms","swapRows","_swapRows","_createTyped","typed_function_default","typed_dependencies","typed_createTyped","Complex","Fraction","typed","throwNoBignumber","throwNoComplex","throwNoFraction","err","throwNoMatrix","containsCollections","deepMap","isInteger_name","isInteger_dependencies","createIsInteger","Array | Matrix","isNumeric_name","isNumeric_dependencies","createIsNumeric","isNumeric","number | BigNumber | Fraction | boolean","Complex | Unit | string | null | undefined | Node","isIntegerNumber","isNegativeNumber","isPositiveNumber","isZeroNumber","isNaNNumber","signature","isNaN_name","isNaN_dependencies","createIsNaN","Unit","nearlyEqual_nearlyEqual","complexEquals","equalScalar_name","equalScalar_dependencies","createEqualScalar","equalScalar","boolean, boolean","number, number","BigNumber, BigNumber","Fraction, Fraction","Complex, Complex","Unit, Unit","equalBase","number_name","number_dependencies","createNumber","","null","Unit, string | Unit","valuelessUnit","arithmetic_n1","n2","absNumber","addNumber","subtractNumber","multiplyNumber","divideNumber","unaryMinusNumber","unaryPlusNumber","cbrtNumber","ceilNumber","cubeNumber","expNumber","expm1Number","fixNumber","floorNumber","gcdNumber","lcmNumber","logNumber","log10Number","log2Number","log1pNumber","modNumber","nthRootNumber","root","inv","signNumber","sqrtNumber","squareNumber","xgcdNumber","lastx","lasty","powNumber","roundNumber","normNumber","multiplyScalar_name","multiplyScalar_dependencies","createMultiplyScalar","multiplyScalar","number | Fraction | BigNumber | Complex, Unit","_normalize","Unit, number | Fraction | BigNumber | Complex","multiply","bitwise_n1","bitwise_n2","bitAndNumber","bitNotNumber","bitOrNumber","bitXorNumber","leftShiftNumber","rightArithShiftNumber","rightLogShiftNumber","logical_n1","logical_n2","notNumber","orNumber","xorNumber","andNumber","trigonometry_n1","trigonometry_n2","acosNumber","acoshNumber","acotNumber","acothNumber","acscNumber","acschNumber","xInv","asecNumber","asechNumber","ret","asinNumber","asinhNumber","atanNumber","atan2Number","atanhNumber","cosNumber","coshNumber","cotNumber","cothNumber","cscNumber","cschNumber","secNumber","sechNumber","sinNumber","sinhNumber","tanNumber","tanhNumber","product_product","combinationsNumber","prodrange","nMinusk","messages","fraction_name","fraction_dependencies","createFraction","unaryMinus_name","unaryMinus_dependencies","createUnaryMinus","unaryMinus","addScalar_name","addScalar_dependencies","createAddScalar","addScalar","fixPrefix","sqrt_name","sqrt_dependencies","createSqrt","_sqrtNumber","mode_name","mode_dependencies","createMode","_mode","...","SparseMatrix_name","SparseMatrix_dependencies","createSparseMatrixClass","SparseMatrix","_createFromMatrix","ptr","_values","_ptr","_createFromArray","zero","find","row","_getsubset","kk","mvalues","mindex","mptr","pv","_setsubset","x0","y0","_getValueIndex","_remove","_insert","ins","k0","k1","_map","minRow","maxRow","minColumn","maxColumn","invoke","_toArray","createSparseMatrix","density","colIndex","rowIndex","r1","_forEachRow","kx","ky","vx","vy","matrix_name","matrix_dependencies","createMatrix","string, string","Array | Matrix, string","Array | Matrix, string, string","algorithm01_name","algorithm01_dependencies","createAlgorithm01","denseMatrix","sparseMatrix","inverse","adata","asize","adt","bvalues","bindex","bptr","bsize","bdt","dt","cf","cdata","mark","algorithm04_name","algorithm04_dependencies","createAlgorithm04","avalues","aindex","aptr","cvalues","cindex","cptr","xa","xb","wa","wb","algorithm10_name","algorithm10_dependencies","createAlgorithm10","algorithm13_name","algorithm13_dependencies","createAlgorithm13","bdata","csize","_iterate","av","bv","algorithm14_name","algorithm14_dependencies","createAlgorithm14","algorithm03_name","algorithm03_dependencies","createAlgorithm03","algorithm05_name","algorithm05_dependencies","createAlgorithm05","wai","wbi","va","vb","vc","algorithm11_name","algorithm11_dependencies","createAlgorithm11","algorithm12_name","algorithm12_dependencies","createAlgorithm12","algorithm07_name","algorithm07_dependencies","createAlgorithm07","_scatter","identity_name","identity_dependencies","createIdentity","number | BigNumber","_identity","number | BigNumber, string","number | BigNumber, number | BigNumber","number | BigNumber, number | BigNumber, string","_identityVector","Array, string","Matrix, string","Big","minimum","reshape_name","reshape_dependencies","createReshape","Matrix, Array","Array, Array","noBignumber","noFraction","zeros_name","zeros_dependencies","createZeros","_zeros","...number | BigNumber | string","hasBigNumbers","_validate","NO_INT","round_name","round_dependencies","createRound","algorithm11","algorithm12","algorithm14","roundNumberSignatures","Complex, number","Complex, BigNumber","_n","number, BigNumber","Fraction, number","SparseMatrix, number | BigNumber","DenseMatrix, number | BigNumber","number | Complex | BigNumber, SparseMatrix","number | Complex | BigNumber, DenseMatrix","Array, number | BigNumber","number | Complex | BigNumber, Array","compare_name","compare_dependencies","createCompare","algorithm03","algorithm05","algorithm13","SparseMatrix, SparseMatrix","SparseMatrix, DenseMatrix","DenseMatrix, SparseMatrix","DenseMatrix, DenseMatrix","Array, Matrix","SparseMatrix, any","DenseMatrix, any","any, SparseMatrix","any, DenseMatrix","Array, any","any, Array","smaller_name","smaller_dependencies","createSmaller","algorithm07","smaller","larger_name","larger_dependencies","createLarger","larger","unequal_name","any, any","improveErrorMessage","fnName","details","FibonacciHeap_name","FibonacciHeap_dependencies","createFibonacciHeapClass","oneOverLogPhi","FibonacciHeap","_minimum","_decreaseKey","_cut","_cascadingCut","degree","isFibonacciHeap","insert","isEmpty","extractMinimum","numberOfChildren","tempRight","_findMinimumNode","_linkNodes","numRoots","add_name","add_dependencies","createAdd","algorithm01","algorithm04","algorithm10","any, any, ...any","rest","signatures","abs_name","abs_dependencies","createAbs","multiply_name","multiply_dependencies","createMultiply","_validateMatrixDimensions","Matrix, Matrix","xsize","ysize","_multiplyVectorVector","_multiplyVectorMatrix","_multiplyMatrixVector","_multiplyMatrixMatrix","size1","size2","mf","_multiplyVectorDenseMatrix","alength","bcolumns","_multiplyDenseMatrixVector","_multiplySparseMatrixVector","_multiplyDenseMatrixDenseMatrix","_multiplyDenseMatrixSparseMatrix","_multiplySparseMatrixDenseMatrix","_multiplySparseMatrixSparseMatrix","arows","acolumns","jb","kb0","kb1","cij","kb","ib","brows","vbi","ka0","ka1","ia","ic","vbij","ArgumentsError","isArgumentsError","pow_name","pow_dependencies","createPow","identity","_pow","Array, number","_powArray","Array, BigNumber","Matrix, number","_powMatrix","Matrix, BigNumber","Unit, number | BigNumber","yFrac","yNum","ex","partitionSelect_name","partitionSelect_dependencies","createPartitionSelect","asc","desc","Array | Matrix, number","_partitionSelect","Array | Matrix, number, string","Array | Matrix, number, function","quickSelect","Spa_name","Spa_dependencies","createSpaClass","Spa","_heap","isSpa","accumulate","heap","nodes","nodei","nodej","gammaNumber","twoN","threeN","fourN","fiveN","gammaP","gammaG","bignumber_name","bignumber_dependencies","createBignumber","bignumber","transpose_name","transpose_dependencies","createTranspose","transpose","_denseTranspose","_sparseTranspose","any","transposed","transposedRow","numeric_name","numeric_dependencies","createNumeric","validInputTypes","validOutputTypes","outputType","inputType","smallerEq_name","smallerEq_dependencies","createSmallerEq","smallerEq","subtract_name","subtract_dependencies","createSubtract","checkEqualDimensions","equal_name","divideScalar_name","divideScalar_dependencies","createDivideScalar","numeric","divideScalar","Unit, number | Fraction | BigNumber","number | Fraction | BigNumber, Unit","lup_name","lup_dependencies","createLup","_denseLUP","_sparseLUP","U","ldata","lsize","udata","usize","pabsv","vjj","absv","vij","lvalues","lindex","lptr","uvalues","uindex","uptr","pvCo","pvOc","swapIndeces","spa","vkj","vik","det_name","det_dependencies","createDet","lup","_det","decomp","det","evenCycles","cycleLen","inv_name","inv_dependencies","createInv","_inv","mat","A","B","ABig","rBig","Ac","Bc","Ar","Br","divide_name","divide_dependencies","createDivide","Array | Matrix, Array | Matrix","any, Array | Matrix","median_name","median_dependencies","createMedian","partitionSelect","_median","Array | Matrix, number | BigNumber","middle2","middle","number | BigNumber | Complex | Unit","number | BigNumber | Complex | Unit, number | BigNumber | Complex | Unit","pureFunctionsAny_generated_Complex","pureFunctionsAny_generated_BigNumber","pureFunctionsAny_generated_Matrix","pureFunctionsAny_generated_Fraction","pureFunctionsAny_generated_DenseMatrix","pureFunctionsAny_generated_typed","pureFunctionsAny_generated_isInteger","pureFunctionsAny_generated_isNumeric","pureFunctionsAny_generated_isNaN","pureFunctionsAny_generated_equalScalar","pureFunctionsAny_generated_number","pureFunctionsAny_generated_multiplyScalar","pureFunctionsAny_generated_fraction","pureFunctionsAny_generated_unaryMinus","pureFunctionsAny_generated_addScalar","pureFunctionsAny_generated_sqrt","pureFunctionsAny_generated_mode","pureFunctionsAny_generated_SparseMatrix","pureFunctionsAny_generated_matrix","pureFunctionsAny_generated_identity","pureFunctionsAny_generated_reshape","pureFunctionsAny_generated_zeros","pureFunctionsAny_generated_round","pureFunctionsAny_generated_compare","pureFunctionsAny_generated_smaller","pureFunctionsAny_generated_larger","pureFunctionsAny_generated_add","pureFunctionsAny_generated_abs","pureFunctionsAny_generated_multiply","pureFunctionsAny_generated_pow","pureFunctionsAny_generated_partitionSelect","pureFunctionsAny_generated_Spa","pureFunctionsAny_generated_bignumber","pureFunctionsAny_generated_transpose","pureFunctionsAny_generated_numeric","pureFunctionsAny_generated_smallerEq","pureFunctionsAny_generated_subtract","pureFunctionsAny_generated_divideScalar","pureFunctionsAny_generated_lup","pureFunctionsAny_generated_det","pureFunctionsAny_generated_inv","pureFunctionsAny_generated_divide","pureFunctionsAny_generated_median","Lab1vue_type_script_lang_js_","components","RelativeFrequency","initialRow","intervalsCount","variationRow","freqPolyData","marginBottom","computed","_this2","_i","_i2","currentFreq","_i3","saTop","ef","_i4","views_Lab1vue_type_script_lang_js_","Lab1_component","__webpack_exports__","dv","weekEndings","hu","zhCn","te","setPrototypeOf","that","C","S","ugCn","webpackPolyfill","deprecate","paths","msMy","eo","$includes","relativeTimeWithMutation","mutation","specialMutationForYears","lastNumber","softMutation","mutationTable","br","mi","mk","last2Digits","nb","arTn","it","itCh","enNz","monthsShortWithDots","monthsShortWithoutDots","fy","enIl","sw","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","ok","notOk","undef","_types","anyType","_ignore","_conversions","ignore","findTypeByName","typeName","entry","findInArray","hint","findTypeIndex","findTypeName","trim","conversion","stringifyParams","typeNames","getTypeName","restParam","parseParam","notEmpty","notIgnore","matchingConversions","filterConversions","exactTypes","typeIndex","conversionIndex","convertibleTypes","parseSignature","parsedParam","some","isInvalidParam","hasRestParam","hasConversions","compileTest","test0","test1","tests","compileTests","varIndex","lastTest","testRestParam","getParamAtIndex","getExpectedTypeNames","excludeConversions","isExactType","mergeExpectedParams","uniq","flatMap","createError","_name","matchingSignatures","nextMatchingDefs","actualType","lengths","maxLength","expectedLength","getLowestTypeIndex","getLowestConversionIndex","compareParams","param1","param2","compareSignatures","signature1","signature2","compileArgsPreprocessing","fnConvert","compiledConversions","compileArgConversion","fnPreprocess","conversion0","conversion1","createSignaturesMap","signaturesMap","splitParams","ignoreConversionTypes","_splitParams","typeGroups","filteredTypes","typeGroup","splittedParams","hasConflictingParams","typesNames1","typesNames2","hasOverlap","len2","restParam1","restParam2","createTypedFunction","parsedSignatures","notNull","parsedSignature","conflictingSignature","ok0","ok1","ok2","ok3","ok4","ok5","allOk","test00","test10","test20","test30","test40","test50","test01","test11","test21","test31","test41","test51","fns","fn0","fn1","fn2","fn3","fn4","fn5","len3","len4","len5","iStart","iEnd","generic","arg0","arg1","contains","array1","array2","getName","extractSignatures","validateUnique","_signature","_fn","string, Object","...Function","string, ...Function","addType","beforeObjectTest","addConversion","sk","yo","numbersPast","numbersFuture","verbalNumber","fi","arSa","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Lab_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Lab_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","bg","၁","၂","၃","၄","၅","၆","၇","၈","၉","၀","my","gl","es","anObject","check","proto","buggy","Function","__proto__","monthsNominativeEl","monthsGenitiveEl","momentToFormat","_monthsGenitiveEl","_monthsNominativeEl","calendarEl","mom","_calendarEl","monthsNominative","monthsSubjective","pl","۱","۲","۳","۴","۵","۶","۷","۸","۹","۰","ar","১","২","৩","৪","৫","৬","৭","৮","৯","০","bn","$keys","hiddenKeys","getOwnPropertyNames","zhTw","ru","mn","separator","ro","cy","fr","arDz","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_VTable_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_VTable_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","bm","defined","non","ltrim","rtrim","exporter","ALIAS","FORCE","TYPE","cof","weekdaysCaseReplace","nominative","accusative","genitive","nounCase","processHoursFunction","uk","chunks","pool","GLOBAL","startdenom","significance","overflow","mask","oldRandom","ARC4","keylen","depth","typ","mixkey","seed","smear","stringseed","tostring","autoseed","Uint8Array","navigator","screen","fromCharCode","use_entropy","entropy","arc4","resetGlobal","deAt","de","tzmLatn","jv","nn","relativeTimeWithSingular","relativeSeconds","lv","deCh","tzm","hookCallback","hooks","setHookCallback","isObjectEmpty","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","rfc2822","weekdayMismatch","getParsingFlags","_pf","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_f","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","_config","_dayOfMonthOrdinalParseLenient","_dayOfMonthOrdinalParse","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","defaultCalendar","_calendar","defaultLongDateFormat","_longDateFormat","formatUpper","defaultInvalidDate","invalidDate","_invalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","_ordinal","defaultRelativeTime","_relativeTime","pastFuture","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","getPrioritizedUnits","unitsObj","zeroFill","targetLength","forceSign","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","padded","localeData","removeFormattingTokens","makeFormatFunction","formatMoment","expandFormat","replaceLongDateFormatTokens","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchTimestamp","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","getIsLeapYear","keepTime","set$1","daysInMonth","stringGet","stringSet","prioritized","modMonth","o","MONTHS_IN_FORMAT","defaultLocaleMonths","localeMonths","_months","defaultLocaleMonthsShort","localeMonthsShort","_monthsShort","handleStrictParse","monthName","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","getSetMonth","getDaysInMonth","defaultMonthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsRegex","_monthsStrictRegex","_monthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","createDate","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","defaultLocaleWeek","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","parseIsoWeekday","shiftWeekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","defaultLocaleWeekdays","localeWeekdays","_weekdays","defaultLocaleWeekdaysShort","localeWeekdaysShort","_weekdaysShort","defaultLocaleWeekdaysMin","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","defaultWeekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","kFormat","lowercase","matchMeridiem","_meridiemParse","localeIsPM","seconds","kInput","_isPm","_meridiem","pos1","pos2","defaultLocaleMeridiemParse","localeMeridiem","globalLocale","getSetHour","baseConfig","locales","localeFamilies","normalizeLocale","chooseLocale","names","loadLocale","oldLocale","_abbr","getSetGlobalLocale","getLocale","parentLocale","updateLocale","tmpLocale","listLocales","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","weekYear","weekdayOverflow","GG","W","createLocal","curWeek","gg","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","untruncateYear","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","weekdayProvided","weekdayActual","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","calculateOffset","obsOffset","militaryOffset","numOffset","configFromRFC2822","parsedArray","configFromString","createFromInputFallback","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","meridiemFixWrap","isPm","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","createFromConfig","prepareConfig","configFromInput","isUTC","prototypeMin","other","prototypeMax","pickBy","moments","ordering","isDurationValid","unitHasDecimal","isValid$1","createInvalid$1","createDuration","Duration","years","quarters","weeks","isoWeek","_milliseconds","_days","_bubble","isDuration","absRound","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","setOffsetToParsedOffset","tZone","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","isLocal","isUtcOffset","isUtc","aspNetRegex","isoRegex","diffRes","parseIso","momentsDifference","inp","positiveMomentsDifference","isAfter","isBefore","createAdder","direction","dur","isAdding","invalid","getCalendarFormat","myMoment","calendar$1","sod","calendarFormat","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","keepOffset","toDate","inspect","zone","prefix","suffix","inputString","defaultFormatUtc","defaultFormat","humanize","fromNow","toNow","newLocaleData","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","localStartOfDate","utcStartOfDate","startOfDate","unix","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","isoWeekYear","getSetDayOfMonth","getSetDayOfYear","getSetMinute","getSetSecond","parseMs","getSetMillisecond","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","firstDayOfYear","firstDayOfWeek","langData","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","monthsFromDays","monthsToDays","daysToMonths","valueOf$1","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","clone$1","get$2","makeGetter","thresholds","substituteTimeAgo","relativeTime$1","posNegDuration","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","inheritIfRequired","gOPN","dP","$trim","NUMBER","$Number","Base","BROKEN_COF","TRIM","argument","third","radix","maxCode","he","sq","enSG","sr","tzl","numbersNouns","translateFuture","translatePast","numberNoun","numberAsNoun","hundred","ten","tlh","༡","༢","༣","༤","༥","༦","༧","༨","༩","༠","bo","NAME","ptBr","MAX_CYCLE_LEN","errorConstructor","IntermediateInheritor","DivisionByZero","InvalidParameter","throwInvalidParam","N","modpow","cycleStart","rem1","rem2","gcd","lcm","places","simplify","eps","cont","rec","divisible","excludeWhole","whole","toLatex","toContinued","dec","cycLen","cycOff","hyAm","ca","frCa","nlBe","૧","૨","૩","૪","૫","૬","૭","૮","૯","૦","gu","enIe","១","២","៣","៤","៥","៦","៧","៨","៩","០","km","naturalSort","oFxNcL","oFyNcL","sre","dre","hre","ore","insensitive","xN","yN","xD","yD","cLoc","numS","et","si","cosm1","xx","parser_exit","logHypot","_b","loh","cot","sec","csc","acot","asec","acsc","coth","csch","sech","noIM","oneMinus","onePlus","acoth","acsch","asech","conjugate","toVector","isInfinite","੧","੨","੩","੪","੫","੬","੭","੮","੯","੦","paIn","gd","nl","xPseudo","se"],"mappings":"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ACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,gBAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,O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","file":"js/lab.cc66a911.js","sourcesContent":["//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var uzLatn = moment.defineLocale('uz-latn', {\n        months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),\n        monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),\n        weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),\n        weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),\n        weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'D MMMM YYYY, dddd HH:mm'\n        },\n        calendar : {\n            sameDay : '[Bugun soat] LT [da]',\n            nextDay : '[Ertaga] LT [da]',\n            nextWeek : 'dddd [kuni soat] LT [da]',\n            lastDay : '[Kecha soat] LT [da]',\n            lastWeek : '[O\\'tgan] dddd [kuni soat] LT [da]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'Yaqin %s ichida',\n            past : 'Bir necha %s oldin',\n            s : 'soniya',\n            ss : '%d soniya',\n            m : 'bir daqiqa',\n            mm : '%d daqiqa',\n            h : 'bir soat',\n            hh : '%d soat',\n            d : 'bir kun',\n            dd : '%d kun',\n            M : 'bir oy',\n            MM : '%d oy',\n            y : 'bir yil',\n            yy : '%d yil'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return uzLatn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ml = moment.defineLocale('ml', {\n        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),\n        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),\n        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),\n        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm -നു',\n            LTS : 'A h:mm:ss -നു',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm -നു',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'\n        },\n        calendar : {\n            sameDay : '[ഇന്ന്] LT',\n            nextDay : '[നാളെ] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[ഇന്നലെ] LT',\n            lastWeek : '[കഴിഞ്ഞ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s കഴിഞ്ഞ്',\n            past : '%s മുൻപ്',\n            s : 'അൽപ നിമിഷങ്ങൾ',\n            ss : '%d സെക്കൻഡ്',\n            m : 'ഒരു മിനിറ്റ്',\n            mm : '%d മിനിറ്റ്',\n            h : 'ഒരു മണിക്കൂർ',\n            hh : '%d മണിക്കൂർ',\n            d : 'ഒരു ദിവസം',\n            dd : '%d ദിവസം',\n            M : 'ഒരു മാസം',\n            MM : '%d മാസം',\n            y : 'ഒരു വർഷം',\n            yy : '%d വർഷം'\n        },\n        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'രാത്രി' && hour >= 4) ||\n                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||\n                    meridiem === 'വൈകുന്നേരം') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'രാത്രി';\n            } else if (hour < 12) {\n                return 'രാവിലെ';\n            } else if (hour < 17) {\n                return 'ഉച്ച കഴിഞ്ഞ്';\n            } else if (hour < 20) {\n                return 'വൈകുന്നേരം';\n            } else {\n                return 'രാത്രി';\n            }\n        }\n    });\n\n    return ml;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var cv = moment.defineLocale('cv', {\n        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),\n        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),\n        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),\n        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),\n        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',\n            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'\n        },\n        calendar : {\n            sameDay: '[Паян] LT [сехетре]',\n            nextDay: '[Ыран] LT [сехетре]',\n            lastDay: '[Ӗнер] LT [сехетре]',\n            nextWeek: '[Ҫитес] dddd LT [сехетре]',\n            lastWeek: '[Иртнӗ] dddd LT [сехетре]',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (output) {\n                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';\n                return output + affix;\n            },\n            past : '%s каялла',\n            s : 'пӗр-ик ҫеккунт',\n            ss : '%d ҫеккунт',\n            m : 'пӗр минут',\n            mm : '%d минут',\n            h : 'пӗр сехет',\n            hh : '%d сехет',\n            d : 'пӗр кун',\n            dd : '%d кун',\n            M : 'пӗр уйӑх',\n            MM : '%d уйӑх',\n            y : 'пӗр ҫул',\n            yy : '%d ҫул'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-мӗш/,\n        ordinal : '%d-мӗш',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return cv;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(n) {\n        if (n % 100 === 11) {\n            return true;\n        } else if (n % 10 === 1) {\n            return false;\n        }\n        return true;\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';\n            case 'ss':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');\n                }\n                return result + 'sekúnda';\n            case 'm':\n                return withoutSuffix ? 'mínúta' : 'mínútu';\n            case 'mm':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');\n                } else if (withoutSuffix) {\n                    return result + 'mínúta';\n                }\n                return result + 'mínútu';\n            case 'hh':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');\n                }\n                return result + 'klukkustund';\n            case 'd':\n                if (withoutSuffix) {\n                    return 'dagur';\n                }\n                return isFuture ? 'dag' : 'degi';\n            case 'dd':\n                if (plural(number)) {\n                    if (withoutSuffix) {\n                        return result + 'dagar';\n                    }\n                    return result + (isFuture ? 'daga' : 'dögum');\n                } else if (withoutSuffix) {\n                    return result + 'dagur';\n                }\n                return result + (isFuture ? 'dag' : 'degi');\n            case 'M':\n                if (withoutSuffix) {\n                    return 'mánuður';\n                }\n                return isFuture ? 'mánuð' : 'mánuði';\n            case 'MM':\n                if (plural(number)) {\n                    if (withoutSuffix) {\n                        return result + 'mánuðir';\n                    }\n                    return result + (isFuture ? 'mánuði' : 'mánuðum');\n                } else if (withoutSuffix) {\n                    return result + 'mánuður';\n                }\n                return result + (isFuture ? 'mánuð' : 'mánuði');\n            case 'y':\n                return withoutSuffix || isFuture ? 'ár' : 'ári';\n            case 'yy':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n                }\n                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n        }\n    }\n\n    var is = moment.defineLocale('is', {\n        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),\n        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),\n        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),\n        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] H:mm',\n            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'\n        },\n        calendar : {\n            sameDay : '[í dag kl.] LT',\n            nextDay : '[á morgun kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[í gær kl.] LT',\n            lastWeek : '[síðasta] dddd [kl.] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'eftir %s',\n            past : 'fyrir %s síðan',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : 'klukkustund',\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return is;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var fo = moment.defineLocale('fo', {\n        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),\n        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),\n        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D. MMMM, YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Í dag kl.] LT',\n            nextDay : '[Í morgin kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[Í gjár kl.] LT',\n            lastWeek : '[síðstu] dddd [kl] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'um %s',\n            past : '%s síðani',\n            s : 'fá sekund',\n            ss : '%d sekundir',\n            m : 'ein minuttur',\n            mm : '%d minuttir',\n            h : 'ein tími',\n            hh : '%d tímar',\n            d : 'ein dagur',\n            dd : '%d dagar',\n            M : 'ein mánaður',\n            MM : '%d mánaðir',\n            y : 'eitt ár',\n            yy : '%d ár'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ja = moment.defineLocale('ja', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),\n        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日 dddd HH:mm',\n            l : 'YYYY/MM/DD',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日(ddd) HH:mm'\n        },\n        meridiemParse: /午前|午後/i,\n        isPM : function (input) {\n            return input === '午後';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return '午前';\n            } else {\n                return '午後';\n            }\n        },\n        calendar : {\n            sameDay : '[今日] LT',\n            nextDay : '[明日] LT',\n            nextWeek : function (now) {\n                if (now.week() < this.week()) {\n                    return '[来週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            lastDay : '[昨日] LT',\n            lastWeek : function (now) {\n                if (this.week() < now.week()) {\n                    return '[先週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}日/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                default:\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s後',\n            past : '%s前',\n            s : '数秒',\n            ss : '%d秒',\n            m : '1分',\n            mm : '%d分',\n            h : '1時間',\n            hh : '%d時間',\n            d : '1日',\n            dd : '%d日',\n            M : '1ヶ月',\n            MM : '%dヶ月',\n            y : '1年',\n            yy : '%d年'\n        }\n    });\n\n    return ja;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    var esDo = moment.defineLocale('es-do', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse,\n        longMonthsParse: monthsParse,\n        shortMonthsParse: monthsParse,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY h:mm A',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return esDo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var arMa = moment.defineLocale('ar-ma', {\n        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return arMa;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's': ['thodde secondanim', 'thodde second'],\n            'ss': [number + ' secondanim', number + ' second'],\n            'm': ['eka mintan', 'ek minute'],\n            'mm': [number + ' mintanim', number + ' mintam'],\n            'h': ['eka voran', 'ek vor'],\n            'hh': [number + ' voranim', number + ' voram'],\n            'd': ['eka disan', 'ek dis'],\n            'dd': [number + ' disanim', number + ' dis'],\n            'M': ['eka mhoinean', 'ek mhoino'],\n            'MM': [number + ' mhoineanim', number + ' mhoine'],\n            'y': ['eka vorsan', 'ek voros'],\n            'yy': [number + ' vorsanim', number + ' vorsam']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var gomLatn = moment.defineLocale('gom-latn', {\n        months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),\n        monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\\'var'.split('_'),\n        weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),\n        weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'A h:mm [vazta]',\n            LTS : 'A h:mm:ss [vazta]',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY A h:mm [vazta]',\n            LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',\n            llll: 'ddd, D MMM YYYY, A h:mm [vazta]'\n        },\n        calendar : {\n            sameDay: '[Aiz] LT',\n            nextDay: '[Faleam] LT',\n            nextWeek: '[Ieta to] dddd[,] LT',\n            lastDay: '[Kal] LT',\n            lastWeek: '[Fatlo] dddd[,] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s',\n            past : '%s adim',\n            s : processRelativeTime,\n            ss : processRelativeTime,\n            m : processRelativeTime,\n            mm : processRelativeTime,\n            h : processRelativeTime,\n            hh : processRelativeTime,\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(er)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // the ordinal 'er' only applies to day of the month\n                case 'D':\n                    return number + 'er';\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                case 'w':\n                case 'W':\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        },\n        meridiemParse: /rati|sokalli|donparam|sanje/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'rati') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'sokalli') {\n                return hour;\n            } else if (meridiem === 'donparam') {\n                return hour > 12 ? hour : hour + 12;\n            } else if (meridiem === 'sanje') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'rati';\n            } else if (hour < 12) {\n                return 'sokalli';\n            } else if (hour < 16) {\n                return 'donparam';\n            } else if (hour < 20) {\n                return 'sanje';\n            } else {\n                return 'rati';\n            }\n        }\n    });\n\n    return gomLatn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var frCh = moment.defineLocale('fr-ch', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return frCh;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enAu = moment.defineLocale('en-au', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enAu;\n\n})));\n","\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    var suffixes = {\n        1: '\\'inci',\n        5: '\\'inci',\n        8: '\\'inci',\n        70: '\\'inci',\n        80: '\\'inci',\n        2: '\\'nci',\n        7: '\\'nci',\n        20: '\\'nci',\n        50: '\\'nci',\n        3: '\\'üncü',\n        4: '\\'üncü',\n        100: '\\'üncü',\n        6: '\\'ncı',\n        9: '\\'uncu',\n        10: '\\'uncu',\n        30: '\\'uncu',\n        60: '\\'ıncı',\n        90: '\\'ıncı'\n    };\n\n    var tr = moment.defineLocale('tr', {\n        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[yarın saat] LT',\n            nextWeek : '[gelecek] dddd [saat] LT',\n            lastDay : '[dün] LT',\n            lastWeek : '[geçen] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s önce',\n            s : 'birkaç saniye',\n            ss : '%d saniye',\n            m : 'bir dakika',\n            mm : '%d dakika',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir yıl',\n            yy : '%d yıl'\n        },\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'Do':\n                case 'DD':\n                    return number;\n                default:\n                    if (number === 0) {  // special case for zero\n                        return number + '\\'ıncı';\n                    }\n                    var a = number % 10,\n                        b = number % 100 - a,\n                        c = number >= 100 ? 100 : null;\n                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return tr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var da = moment.defineLocale('da', {\n        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay : '[i dag kl.] LT',\n            nextDay : '[i morgen kl.] LT',\n            nextWeek : 'på dddd [kl.] LT',\n            lastDay : '[i går kl.] LT',\n            lastWeek : '[i] dddd[s kl.] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s siden',\n            s : 'få sekunder',\n            ss : '%d sekunder',\n            m : 'et minut',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dage',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'et år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return da;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var tlPh = moment.defineLocale('tl-ph', {\n        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),\n        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),\n        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'MM/D/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY HH:mm',\n            LLLL : 'dddd, MMMM DD, YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: 'LT [ngayong araw]',\n            nextDay: '[Bukas ng] LT',\n            nextWeek: 'LT [sa susunod na] dddd',\n            lastDay: 'LT [kahapon]',\n            lastWeek: 'LT [noong nakaraang] dddd',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'sa loob ng %s',\n            past : '%s ang nakalipas',\n            s : 'ilang segundo',\n            ss : '%d segundo',\n            m : 'isang minuto',\n            mm : '%d minuto',\n            h : 'isang oras',\n            hh : '%d oras',\n            d : 'isang araw',\n            dd : '%d araw',\n            M : 'isang buwan',\n            MM : '%d buwan',\n            y : 'isang taon',\n            yy : '%d taon'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return tlPh;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var eu = moment.defineLocale('eu', {\n        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),\n        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),\n        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),\n        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY[ko] MMMM[ren] D[a]',\n            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',\n            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',\n            l : 'YYYY-M-D',\n            ll : 'YYYY[ko] MMM D[a]',\n            lll : 'YYYY[ko] MMM D[a] HH:mm',\n            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'\n        },\n        calendar : {\n            sameDay : '[gaur] LT[etan]',\n            nextDay : '[bihar] LT[etan]',\n            nextWeek : 'dddd LT[etan]',\n            lastDay : '[atzo] LT[etan]',\n            lastWeek : '[aurreko] dddd LT[etan]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s barru',\n            past : 'duela %s',\n            s : 'segundo batzuk',\n            ss : '%d segundo',\n            m : 'minutu bat',\n            mm : '%d minutu',\n            h : 'ordu bat',\n            hh : '%d ordu',\n            d : 'egun bat',\n            dd : '%d egun',\n            M : 'hilabete bat',\n            MM : '%d hilabete',\n            y : 'urte bat',\n            yy : '%d urte'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return eu;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var th = moment.defineLocale('th', {\n        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n        monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference\n        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY เวลา H:mm',\n            LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'\n        },\n        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n        isPM: function (input) {\n            return input === 'หลังเที่ยง';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ก่อนเที่ยง';\n            } else {\n                return 'หลังเที่ยง';\n            }\n        },\n        calendar : {\n            sameDay : '[วันนี้ เวลา] LT',\n            nextDay : '[พรุ่งนี้ เวลา] LT',\n            nextWeek : 'dddd[หน้า เวลา] LT',\n            lastDay : '[เมื่อวานนี้ เวลา] LT',\n            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'อีก %s',\n            past : '%sที่แล้ว',\n            s : 'ไม่กี่วินาที',\n            ss : '%d วินาที',\n            m : '1 นาที',\n            mm : '%d นาที',\n            h : '1 ชั่วโมง',\n            hh : '%d ชั่วโมง',\n            d : '1 วัน',\n            dd : '%d วัน',\n            M : '1 เดือน',\n            MM : '%d เดือน',\n            y : '1 ปี',\n            yy : '%d ปี'\n        }\n    });\n\n    return th;\n\n})));\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var translator = {\n        words: { //Different grammatical cases\n            ss: ['секунда', 'секунде', 'секунди'],\n            m: ['један минут', 'једне минуте'],\n            mm: ['минут', 'минуте', 'минута'],\n            h: ['један сат', 'једног сата'],\n            hh: ['сат', 'сата', 'сати'],\n            dd: ['дан', 'дана', 'дана'],\n            MM: ['месец', 'месеца', 'месеци'],\n            yy: ['година', 'године', 'година']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    var srCyrl = moment.defineLocale('sr-cyrl', {\n        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),\n        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),\n        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),\n        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[данас у] LT',\n            nextDay: '[сутра у] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[у] [недељу] [у] LT';\n                    case 3:\n                        return '[у] [среду] [у] LT';\n                    case 6:\n                        return '[у] [суботу] [у] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[у] dddd [у] LT';\n                }\n            },\n            lastDay  : '[јуче у] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[прошле] [недеље] [у] LT',\n                    '[прошлог] [понедељка] [у] LT',\n                    '[прошлог] [уторка] [у] LT',\n                    '[прошле] [среде] [у] LT',\n                    '[прошлог] [четвртка] [у] LT',\n                    '[прошлог] [петка] [у] LT',\n                    '[прошле] [суботе] [у] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past   : 'пре %s',\n            s      : 'неколико секунди',\n            ss     : translator.translate,\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'дан',\n            dd     : translator.translate,\n            M      : 'месец',\n            MM     : translator.translate,\n            y      : 'годину',\n            yy     : translator.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return srCyrl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var mt = moment.defineLocale('mt', {\n        months : 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),\n        monthsShort : 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),\n        weekdays : 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),\n        weekdaysShort : 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),\n        weekdaysMin : 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Illum fil-]LT',\n            nextDay : '[Għada fil-]LT',\n            nextWeek : 'dddd [fil-]LT',\n            lastDay : '[Il-bieraħ fil-]LT',\n            lastWeek : 'dddd [li għadda] [fil-]LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'f’ %s',\n            past : '%s ilu',\n            s : 'ftit sekondi',\n            ss : '%d sekondi',\n            m : 'minuta',\n            mm : '%d minuti',\n            h : 'siegħa',\n            hh : '%d siegħat',\n            d : 'ġurnata',\n            dd : '%d ġranet',\n            M : 'xahar',\n            MM : '%d xhur',\n            y : 'sena',\n            yy : '%d sni'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return mt;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '1',\n        '2': '2',\n        '3': '3',\n        '4': '4',\n        '5': '5',\n        '6': '6',\n        '7': '7',\n        '8': '8',\n        '9': '9',\n        '0': '0'\n    }, pluralForm = function (n) {\n        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n    }, plurals = {\n        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n    }, pluralize = function (u) {\n        return function (number, withoutSuffix, string, isFuture) {\n            var f = pluralForm(number),\n                str = plurals[u][pluralForm(number)];\n            if (f === 2) {\n                str = str[withoutSuffix ? 0 : 1];\n            }\n            return str.replace(/%d/i, number);\n        };\n    }, months = [\n        'يناير',\n        'فبراير',\n        'مارس',\n        'أبريل',\n        'مايو',\n        'يونيو',\n        'يوليو',\n        'أغسطس',\n        'سبتمبر',\n        'أكتوبر',\n        'نوفمبر',\n        'ديسمبر'\n    ];\n\n    var arLy = moment.defineLocale('ar-ly', {\n        months : months,\n        monthsShort : months,\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/\\u200FM/\\u200FYYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'بعد %s',\n            past : 'منذ %s',\n            s : pluralize('s'),\n            ss : pluralize('s'),\n            m : pluralize('m'),\n            mm : pluralize('m'),\n            h : pluralize('h'),\n            hh : pluralize('h'),\n            d : pluralize('d'),\n            dd : pluralize('d'),\n            M : pluralize('M'),\n            MM : pluralize('M'),\n            y : pluralize('y'),\n            yy : pluralize('y')\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return arLy;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n            'dd': 'дзень_дні_дзён',\n            'MM': 'месяц_месяцы_месяцаў',\n            'yy': 'год_гады_гадоў'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвіліна' : 'хвіліну';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'гадзіна' : 'гадзіну';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    var be = moment.defineLocale('be', {\n        months : {\n            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),\n            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')\n        },\n        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n        weekdays : {\n            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),\n            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),\n            isFormat: /\\[ ?[Ууў] ?(?:мінулую|наступную)? ?\\] ?dddd/\n        },\n        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY г., HH:mm'\n        },\n        calendar : {\n            sameDay: '[Сёння ў] LT',\n            nextDay: '[Заўтра ў] LT',\n            lastDay: '[Учора ў] LT',\n            nextWeek: function () {\n                return '[У] dddd [ў] LT';\n            },\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[У мінулую] dddd [ў] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[У мінулы] dddd [ў] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'праз %s',\n            past : '%s таму',\n            s : 'некалькі секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : relativeTimeWithPlural,\n            hh : relativeTimeWithPlural,\n            d : 'дзень',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n        meridiemParse: /ночы|раніцы|дня|вечара/,\n        isPM : function (input) {\n            return /^(дня|вечара)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночы';\n            } else if (hour < 12) {\n                return 'раніцы';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечара';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(і|ы|га)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';\n                case 'D':\n                    return number + '-га';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return be;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ka = moment.defineLocale('ka', {\n        months : {\n            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),\n            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')\n        },\n        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n        weekdays : {\n            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n            isFormat: /(წინა|შემდეგ)/\n        },\n        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[დღეს] LT[-ზე]',\n            nextDay : '[ხვალ] LT[-ზე]',\n            lastDay : '[გუშინ] LT[-ზე]',\n            nextWeek : '[შემდეგ] dddd LT[-ზე]',\n            lastWeek : '[წინა] dddd LT-ზე',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?\n                    s.replace(/ი$/, 'ში') :\n                    s + 'ში';\n            },\n            past : function (s) {\n                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {\n                    return s.replace(/(ი|ე)$/, 'ის წინ');\n                }\n                if ((/წელი/).test(s)) {\n                    return s.replace(/წელი$/, 'წლის წინ');\n                }\n            },\n            s : 'რამდენიმე წამი',\n            ss : '%d წამი',\n            m : 'წუთი',\n            mm : '%d წუთი',\n            h : 'საათი',\n            hh : '%d საათი',\n            d : 'დღე',\n            dd : '%d დღე',\n            M : 'თვე',\n            MM : '%d თვე',\n            y : 'წელი',\n            yy : '%d წელი'\n        },\n        dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n        ordinal : function (number) {\n            if (number === 0) {\n                return number;\n            }\n            if (number === 1) {\n                return number + '-ლი';\n            }\n            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {\n                return 'მე-' + number;\n            }\n            return number + '-ე';\n        },\n        week : {\n            dow : 1,\n            doy : 7\n        }\n    });\n\n    return ka;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ko = moment.defineLocale('ko', {\n        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),\n        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'YYYY.MM.DD.',\n            LL : 'YYYY년 MMMM D일',\n            LLL : 'YYYY년 MMMM D일 A h:mm',\n            LLLL : 'YYYY년 MMMM D일 dddd A h:mm',\n            l : 'YYYY.MM.DD.',\n            ll : 'YYYY년 MMMM D일',\n            lll : 'YYYY년 MMMM D일 A h:mm',\n            llll : 'YYYY년 MMMM D일 dddd A h:mm'\n        },\n        calendar : {\n            sameDay : '오늘 LT',\n            nextDay : '내일 LT',\n            nextWeek : 'dddd LT',\n            lastDay : '어제 LT',\n            lastWeek : '지난주 dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s 후',\n            past : '%s 전',\n            s : '몇 초',\n            ss : '%d초',\n            m : '1분',\n            mm : '%d분',\n            h : '한 시간',\n            hh : '%d시간',\n            d : '하루',\n            dd : '%d일',\n            M : '한 달',\n            MM : '%d달',\n            y : '일 년',\n            yy : '%d년'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(일|월|주)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '일';\n                case 'M':\n                    return number + '월';\n                case 'w':\n                case 'W':\n                    return number + '주';\n                default:\n                    return number;\n            }\n        },\n        meridiemParse : /오전|오후/,\n        isPM : function (token) {\n            return token === '오후';\n        },\n        meridiem : function (hour, minute, isUpper) {\n            return hour < 12 ? '오전' : '오후';\n        }\n    });\n\n    return ko;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    },\n    months = [\n        'کانونی دووەم',\n        'شوبات',\n        'ئازار',\n        'نیسان',\n        'ئایار',\n        'حوزەیران',\n        'تەمموز',\n        'ئاب',\n        'ئەیلوول',\n        'تشرینی یەكەم',\n        'تشرینی دووەم',\n        'كانونی یەکەم'\n    ];\n\n\n    var ku = moment.defineLocale('ku', {\n        months : months,\n        monthsShort : months,\n        weekdays : 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split('_'),\n        weekdaysShort : 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split('_'),\n        weekdaysMin : 'ی_د_س_چ_پ_ه_ش'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ئێواره‌|به‌یانی/,\n        isPM: function (input) {\n            return /ئێواره‌/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'به‌یانی';\n            } else {\n                return 'ئێواره‌';\n            }\n        },\n        calendar : {\n            sameDay : '[ئه‌مرۆ كاتژمێر] LT',\n            nextDay : '[به‌یانی كاتژمێر] LT',\n            nextWeek : 'dddd [كاتژمێر] LT',\n            lastDay : '[دوێنێ كاتژمێر] LT',\n            lastWeek : 'dddd [كاتژمێر] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'له‌ %s',\n            past : '%s',\n            s : 'چه‌ند چركه‌یه‌ك',\n            ss : 'چركه‌ %d',\n            m : 'یه‌ك خوله‌ك',\n            mm : '%d خوله‌ك',\n            h : 'یه‌ك كاتژمێر',\n            hh : '%d كاتژمێر',\n            d : 'یه‌ك ڕۆژ',\n            dd : '%d ڕۆژ',\n            M : 'یه‌ك مانگ',\n            MM : '%d مانگ',\n            y : 'یه‌ك ساڵ',\n            yy : '%d ساڵ'\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12 // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return ku;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    var bs = moment.defineLocale('bs', {\n        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                        return '[prošlu] dddd [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            ss     : translate,\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return bs;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var units = {\n        'ss' : 'sekundė_sekundžių_sekundes',\n        'm' : 'minutė_minutės_minutę',\n        'mm': 'minutės_minučių_minutes',\n        'h' : 'valanda_valandos_valandą',\n        'hh': 'valandos_valandų_valandas',\n        'd' : 'diena_dienos_dieną',\n        'dd': 'dienos_dienų_dienas',\n        'M' : 'mėnuo_mėnesio_mėnesį',\n        'MM': 'mėnesiai_mėnesių_mėnesius',\n        'y' : 'metai_metų_metus',\n        'yy': 'metai_metų_metus'\n    };\n    function translateSeconds(number, withoutSuffix, key, isFuture) {\n        if (withoutSuffix) {\n            return 'kelios sekundės';\n        } else {\n            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n        }\n    }\n    function translateSingular(number, withoutSuffix, key, isFuture) {\n        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n    }\n    function special(number) {\n        return number % 10 === 0 || (number > 10 && number < 20);\n    }\n    function forms(key) {\n        return units[key].split('_');\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        if (number === 1) {\n            return result + translateSingular(number, withoutSuffix, key[0], isFuture);\n        } else if (withoutSuffix) {\n            return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n        } else {\n            if (isFuture) {\n                return result + forms(key)[1];\n            } else {\n                return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n            }\n        }\n    }\n    var lt = moment.defineLocale('lt', {\n        months : {\n            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n            isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n        },\n        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n        weekdays : {\n            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n            isFormat: /dddd HH:mm/\n        },\n        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY [m.] MMMM D [d.]',\n            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n            l : 'YYYY-MM-DD',\n            ll : 'YYYY [m.] MMMM D [d.]',\n            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n        },\n        calendar : {\n            sameDay : '[Šiandien] LT',\n            nextDay : '[Rytoj] LT',\n            nextWeek : 'dddd LT',\n            lastDay : '[Vakar] LT',\n            lastWeek : '[Praėjusį] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'po %s',\n            past : 'prieš %s',\n            s : translateSeconds,\n            ss : translate,\n            m : translateSingular,\n            mm : translate,\n            h : translateSingular,\n            hh : translate,\n            d : translateSingular,\n            dd : translate,\n            M : translateSingular,\n            MM : translate,\n            y : translateSingular,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n        ordinal : function (number) {\n            return number + '-oji';\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return lt;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var vi = moment.defineLocale('vi', {\n        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysParseExact : true,\n        meridiemParse: /sa|ch/i,\n        isPM : function (input) {\n            return /^ch$/i.test(input);\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'sa' : 'SA';\n            } else {\n                return isLower ? 'ch' : 'CH';\n            }\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM [năm] YYYY',\n            LLL : 'D MMMM [năm] YYYY HH:mm',\n            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',\n            l : 'DD/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd, D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hôm nay lúc] LT',\n            nextDay: '[Ngày mai lúc] LT',\n            nextWeek: 'dddd [tuần tới lúc] LT',\n            lastDay: '[Hôm qua lúc] LT',\n            lastWeek: 'dddd [tuần rồi lúc] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s tới',\n            past : '%s trước',\n            s : 'vài giây',\n            ss : '%d giây' ,\n            m : 'một phút',\n            mm : '%d phút',\n            h : 'một giờ',\n            hh : '%d giờ',\n            d : 'một ngày',\n            dd : '%d ngày',\n            M : 'một tháng',\n            MM : '%d tháng',\n            y : 'một năm',\n            yy : '%d năm'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return vi;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var translator = {\n        words: { //Different grammatical cases\n            ss: ['sekund', 'sekunda', 'sekundi'],\n            m: ['jedan minut', 'jednog minuta'],\n            mm: ['minut', 'minuta', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mjesec', 'mjeseca', 'mjeseci'],\n            yy: ['godina', 'godine', 'godina']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    var me = moment.defineLocale('me', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact : true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sjutra u] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[juče u] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[prošle] [nedjelje] [u] LT',\n                    '[prošlog] [ponedjeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srijede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'nekoliko sekundi',\n            ss     : translator.translate,\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'dan',\n            dd     : translator.translate,\n            M      : 'mjesec',\n            MM     : translator.translate,\n            y      : 'godinu',\n            yy     : translator.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return me;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var af = moment.defineLocale('af', {\n        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),\n        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),\n        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),\n        meridiemParse: /vm|nm/i,\n        isPM : function (input) {\n            return /^nm$/i.test(input);\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'vm' : 'VM';\n            } else {\n                return isLower ? 'nm' : 'NM';\n            }\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Vandag om] LT',\n            nextDay : '[Môre om] LT',\n            nextWeek : 'dddd [om] LT',\n            lastDay : '[Gister om] LT',\n            lastWeek : '[Laas] dddd [om] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'oor %s',\n            past : '%s gelede',\n            s : '\\'n paar sekondes',\n            ss : '%d sekondes',\n            m : '\\'n minuut',\n            mm : '%d minute',\n            h : '\\'n uur',\n            hh : '%d ure',\n            d : '\\'n dag',\n            dd : '%d dae',\n            M : '\\'n maand',\n            MM : '%d maande',\n            y : '\\'n jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter\n        },\n        week : {\n            dow : 1, // Maandag is die eerste dag van die week.\n            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n        }\n    });\n\n    return af;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var uz = moment.defineLocale('uz', {\n        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),\n        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),\n        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),\n        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'D MMMM YYYY, dddd HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бугун соат] LT [да]',\n            nextDay : '[Эртага] LT [да]',\n            nextWeek : 'dddd [куни соат] LT [да]',\n            lastDay : '[Кеча соат] LT [да]',\n            lastWeek : '[Утган] dddd [куни соат] LT [да]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'Якин %s ичида',\n            past : 'Бир неча %s олдин',\n            s : 'фурсат',\n            ss : '%d фурсат',\n            m : 'бир дакика',\n            mm : '%d дакика',\n            h : 'бир соат',\n            hh : '%d соат',\n            d : 'бир кун',\n            dd : '%d кун',\n            M : 'бир ой',\n            MM : '%d ой',\n            y : 'бир йил',\n            yy : '%d йил'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return uz;\n\n})));\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function() { try { return require('moment'); } catch(e) { } }()) :\ntypeof define === 'function' && define.amd ? define(['require'], function(require) { return factory(function() { try { return require('moment'); } catch(e) { } }()); }) :\n(global.Chart = factory(global.moment));\n}(this, (function (moment) { 'use strict';\n\nmoment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n\n/* MIT license */\n\nvar conversions = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\nvar convert = function() {\n   return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   };\n});\n\nvar colorConvert = convert;\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n\n\nvar colorString = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n};\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\n       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr),\n       hexAlpha = \"\";\n   if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorName[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgba, a) {\n   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\n   return \"#\" + hexDouble(rgba[0]) \n              + hexDouble(rgba[1])\n              + hexDouble(rgba[2])\n              + (\n                 (a >= 0 && a < 1)\n                 ? hexDouble(Math.round(a * 255))\n                 : \"\"\n              );\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorName) {\n   reverseNames[colorName[name]] = name;\n}\n\n/* MIT license */\n\n\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = colorString.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = colorString.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = colorString.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn colorString.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn colorString.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn colorString.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn colorString.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn colorString.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn colorString.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn colorString.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn colorString.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = colorConvert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nvar chartjsColor = Color;\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array (including typed arrays), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @function\n\t */\n\tisArray: function(value) {\n\t\tif (Array.isArray && Array.isArray(value)) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = Object.prototype.toString.call(value);\n\t\tif (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns true if `value` is a finite number, else returns false\n\t * @param {*} value  - The value to test.\n\t * @returns {boolean}\n\t */\n\tisFinite: function(value) {\n\t\treturn (typeof value === 'number' || value instanceof Number) && isFinite(value);\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {object|Array} loopable - The object or array to be iterated.\n\t * @param {function} fn - The function to call for each item.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see https://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @param {object} [options] - Merging options:\n\t * @param {function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @returns {object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {object} target - The target object in which all objects are merged into.\n\t * @param {object} arg1 - Object containing additional properties to merge in target.\n\t * @param {object} argN - Additional objects containing properties to merge in target.\n\t * @returns {object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nvar helpers_core = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nvar helpers_easing = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.easingEffects = effects;\n\nvar PI = Math.PI;\nvar RAD_PER_DEG = PI / 180;\nvar DOUBLE_PI = PI * 2;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports$1 = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {number} width - The rectangle's width.\n\t * @param {number} height - The rectangle's height.\n\t * @param {number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar r = Math.min(radius, height / 2, width / 2);\n\t\t\tvar left = x + r;\n\t\t\tvar top = y + r;\n\t\t\tvar right = x + width - r;\n\t\t\tvar bottom = y + height - r;\n\n\t\t\tctx.moveTo(x, top);\n\t\t\tif (left < right && top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\n\t\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\n\t\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\n\t\t\t} else if (left < right) {\n\t\t\t\tctx.moveTo(left, y);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\n\t\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n\t\t\t} else if (top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, 0);\n\t\t\t\tctx.arc(left, bottom, r, 0, PI);\n\t\t\t} else {\n\t\t\t\tctx.arc(left, top, r, -PI, PI);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, xOffset, yOffset, size, cornerRadius;\n\t\tvar rad = (rotation || 0) * RAD_PER_DEG;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(x, y, radius, 0, DOUBLE_PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\t// NOTE: the rounded rect implementation changed to use `arc` instead of\n\t\t\t// `quadraticCurveTo` since it generates better results when rect is\n\t\t\t// almost a circle. 0.516 (instead of 0.5) produces results with visually\n\t\t\t// closer proportion to the previous impl and it is inscribed in the\n\t\t\t// circle with `radius`. For more details, see the following PRs:\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5597\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5858\n\t\t\tcornerRadius = radius * 0.516;\n\t\t\tsize = radius - cornerRadius;\n\t\t\txOffset = Math.cos(rad + QUARTER_PI) * size;\n\t\t\tyOffset = Math.sin(rad + QUARTER_PI) * size;\n\t\t\tctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n\t\t\tctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n\t\t\tctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n\t\t\tctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tif (!rotation) {\n\t\t\t\tsize = Math.SQRT1_2 * radius;\n\t\t\t\tctx.rect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'rectRot':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'cross':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\trad += QUARTER_PI;\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t},\n\n\t/**\n\t * Returns true if the point is inside the rectangle\n\t * @param {object} point - The point to test\n\t * @param {object} area - The rectangle\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isPointInArea: function(point, area) {\n\t\tvar epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n\t\treturn point.x > area.left - epsilon && point.x < area.right + epsilon &&\n\t\t\tpoint.y > area.top - epsilon && point.y < area.bottom + epsilon;\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tvar stepped = target.steppedLine;\n\t\tif (stepped) {\n\t\t\tif (stepped === 'middle') {\n\t\t\t\tvar midpoint = (previous.x + target.x) / 2.0;\n\t\t\t\tctx.lineTo(midpoint, flip ? target.y : previous.y);\n\t\t\t\tctx.lineTo(midpoint, flip ? previous.y : target.y);\n\t\t\t} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\nvar helpers_canvas = exports$1;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.clear = exports$1.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports$1.roundedRect.apply(exports$1, arguments);\n};\n\nvar defaults = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers_core.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\ndefaults._set('global', {\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tdefaultLineHeight: 1.2,\n\tshowLines: true\n});\n\nvar core_defaults = defaults;\n\nvar valueOrDefault = helpers_core.valueOrDefault;\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nfunction toFontString(font) {\n\tif (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n\t\treturn null;\n\t}\n\n\treturn (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nvar helpers_options = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {number|object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers_core.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Parses font options and returns the font object.\n\t * @param {object} options - A object that contains font options to be parsed.\n\t * @return {object} The font object.\n\t * @todo Support font.* options and renamed to toFont().\n\t * @private\n\t */\n\t_parseFont: function(options) {\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar font = {\n\t\t\tfamily: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\tlineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n\t\t\tsize: size,\n\t\t\tstyle: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\tweight: null,\n\t\t\tstring: ''\n\t\t};\n\n\t\tfont.string = toFontString(font);\n\t\treturn font;\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array} inputs - An array of values, falling back to the last value.\n\t * @param {object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers_core.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar helpers$1 = helpers_core;\nvar easing = helpers_easing;\nvar canvas = helpers_canvas;\nvar options = helpers_options;\nhelpers$1.easing = easing;\nhelpers$1.canvas = canvas;\nhelpers$1.options = options;\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = chartjsColor(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = chartjsColor(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers$1.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers$1.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers$1.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers$1.inherits;\n\nvar core_element = Element;\n\nvar exports$2 = core_element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\nvar core_animation = exports$2;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\ncore_defaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers$1.noop,\n\t\tonComplete: helpers$1.noop\n\t}\n});\n\nvar core_animations = {\n\tanimations: [],\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {number} duration - The animation duration in ms.\n\t * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\t\tanimation.startTime = Date.now();\n\t\tanimation.duration = duration;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers$1.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\n\t\tme.advance();\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function() {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart, numSteps, nextStep;\n\t\tvar i = 0;\n\n\t\t// 1 animation per chart, so we are looping charts here\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\t\t\tnumSteps = animation.numSteps;\n\n\t\t\t// Make sure that currentStep starts at 1\n\t\t\t// https://github.com/chartjs/Chart.js/issues/6104\n\t\t\tnextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n\t\t\tanimation.currentStep = Math.min(nextStep, numSteps);\n\n\t\t\thelpers$1.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= numSteps) {\n\t\t\t\thelpers$1.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar resolve = helpers$1.options.resolve;\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n */\nfunction listenArrayEvents(array, listener) {\n\tif (array._chartjs) {\n\t\tarray._chartjs.listeners.push(listener);\n\t\treturn;\n\t}\n\n\tObject.defineProperty(array, '_chartjs', {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tvalue: {\n\t\t\tlisteners: [listener]\n\t\t}\n\t});\n\n\tarrayEvents.forEach(function(key) {\n\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\tvar base = array[key];\n\n\t\tObject.defineProperty(array, key, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: function() {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\thelpers$1.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nfunction unlistenArrayEvents(array, listener) {\n\tvar stub = array._chartjs;\n\tif (!stub) {\n\t\treturn;\n\t}\n\n\tvar listeners = stub.listeners;\n\tvar index = listeners.indexOf(listener);\n\tif (index !== -1) {\n\t\tlisteners.splice(index, 1);\n\t}\n\n\tif (listeners.length > 0) {\n\t\treturn;\n\t}\n\n\tarrayEvents.forEach(function(key) {\n\t\tdelete array[key];\n\t});\n\n\tdelete array._chartjs;\n}\n\n// Base class for all dataset controllers (line, bar, etc)\nvar DatasetController = function(chart, datasetIndex) {\n\tthis.initialize(chart, datasetIndex);\n};\n\nhelpers$1.extend(DatasetController.prototype, {\n\n\t/**\n\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t * @type {Chart.core.element}\n\t */\n\tdatasetElementType: null,\n\n\t/**\n\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t * @type {Chart.core.element}\n\t */\n\tdataElementType: null,\n\n\tinitialize: function(chart, datasetIndex) {\n\t\tvar me = this;\n\t\tme.chart = chart;\n\t\tme.index = datasetIndex;\n\t\tme.linkScales();\n\t\tme.addElements();\n\t},\n\n\tupdateIndex: function(datasetIndex) {\n\t\tthis.index = datasetIndex;\n\t},\n\n\tlinkScales: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\n\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t}\n\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t}\n\t},\n\n\tgetDataset: function() {\n\t\treturn this.chart.data.datasets[this.index];\n\t},\n\n\tgetMeta: function() {\n\t\treturn this.chart.getDatasetMeta(this.index);\n\t},\n\n\tgetScaleForId: function(scaleID) {\n\t\treturn this.chart.scales[scaleID];\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScale: function() {\n\t\treturn this.getScaleForId(this._getValueScaleId());\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScale: function() {\n\t\treturn this.getScaleForId(this._getIndexScaleId());\n\t},\n\n\treset: function() {\n\t\tthis.update(true);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroy: function() {\n\t\tif (this._data) {\n\t\t\tunlistenArrayEvents(this._data, this);\n\t\t}\n\t},\n\n\tcreateMetaDataset: function() {\n\t\tvar me = this;\n\t\tvar type = me.datasetElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index\n\t\t});\n\t},\n\n\tcreateMetaData: function(index) {\n\t\tvar me = this;\n\t\tvar type = me.dataElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index\n\t\t});\n\t},\n\n\taddElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data || [];\n\t\tvar metaData = meta.data;\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t}\n\n\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t},\n\n\taddElementAndReset: function(index) {\n\t\tvar element = this.createMetaData(index);\n\t\tthis.getMeta().data.splice(index, 0, element);\n\t\tthis.updateElement(element, index, true);\n\t},\n\n\tbuildOrUpdateElements: function() {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t// the internal meta data accordingly.\n\t\tif (me._data !== data) {\n\t\t\tif (me._data) {\n\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t}\n\n\t\t\tif (data && Object.isExtensible(data)) {\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t}\n\t\t\tme._data = data;\n\t\t}\n\n\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\tme.resyncElements();\n\t},\n\n\tupdate: helpers$1.noop,\n\n\ttransition: function(easingValue) {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].transition(easingValue);\n\t\t}\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.transition(easingValue);\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.draw();\n\t\t}\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].draw();\n\t\t}\n\t},\n\n\tremoveHoverStyle: function(element) {\n\t\thelpers$1.merge(element._model, element.$previousStyle || {});\n\t\tdelete element.$previousStyle;\n\t},\n\n\tsetHoverStyle: function(element) {\n\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\tvar index = element._index;\n\t\tvar custom = element.custom || {};\n\t\tvar model = element._model;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\telement.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth\n\t\t};\n\n\t\tmodel.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n\t\tmodel.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n\t\tmodel.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tresyncElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data;\n\t\tvar numMeta = meta.data.length;\n\t\tvar numData = data.length;\n\n\t\tif (numData < numMeta) {\n\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t} else if (numData > numMeta) {\n\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinsertElements: function(start, count) {\n\t\tfor (var i = 0; i < count; ++i) {\n\t\t\tthis.addElementAndReset(start + i);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPush: function() {\n\t\tvar count = arguments.length;\n\t\tthis.insertElements(this.getDataset().data.length - count, count);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPop: function() {\n\t\tthis.getMeta().data.pop();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataShift: function() {\n\t\tthis.getMeta().data.shift();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataSplice: function(start, count) {\n\t\tthis.getMeta().data.splice(start, count);\n\t\tthis.insertElements(start, arguments.length - 2);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataUnshift: function() {\n\t\tthis.insertElements(0, arguments.length);\n\t}\n});\n\nDatasetController.extend = helpers$1.inherits;\n\nvar core_datasetController = DatasetController;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: core_defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2,\n\t\t\tborderAlign: 'center'\n\t\t}\n\t}\n});\n\nvar element_arc = core_element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\t\tvar pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;\n\t\tvar angleMargin;\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\tctx.closePath();\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth) {\n\t\t\tif (vm.borderAlign === 'inner') {\n\t\t\t\t// Draw an inner border by cliping the arc and drawing a double-width border\n\t\t\t\t// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\t\t\t\tctx.beginPath();\n\t\t\t\tangleMargin = pixelMargin / vm.outerRadius;\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\t\t\t\tif (vm.innerRadius > pixelMargin) {\n\t\t\t\t\tangleMargin = pixelMargin / vm.innerRadius;\n\t\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n\t\t\t\t} else {\n\t\t\t\t\tctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.clip();\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.lineWidth = vm.borderWidth * 2;\n\t\t\t\tctx.lineJoin = 'round';\n\t\t\t} else {\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\t\tctx.lineJoin = 'bevel';\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$1 = helpers$1.valueOrDefault;\n\nvar defaultColor = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nvar element_line = core_element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers$1.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers$1.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$2 = helpers$1.valueOrDefault;\n\nvar defaultColor$1 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor$1,\n\t\t\tborderColor: defaultColor$1,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nvar element_point = core_element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\nvar defaultColor$2 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaultColor$2,\n\t\t\tborderColor: defaultColor$2,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(vm) {\n\treturn vm && vm.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(vm) {\n\tvar x1, x2, y1, y2, half;\n\n\tif (isVertical(vm)) {\n\t\thalf = vm.width / 2;\n\t\tx1 = vm.x - half;\n\t\tx2 = vm.x + half;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\thalf = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - half;\n\t\ty2 = vm.y + half;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nfunction swap(orig, v1, v2) {\n\treturn orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction parseBorderSkipped(vm) {\n\tvar edge = vm.borderSkipped;\n\tvar res = {};\n\n\tif (!edge) {\n\t\treturn res;\n\t}\n\n\tif (vm.horizontal) {\n\t\tif (vm.base > vm.x) {\n\t\t\tedge = swap(edge, 'left', 'right');\n\t\t}\n\t} else if (vm.base < vm.y) {\n\t\tedge = swap(edge, 'bottom', 'top');\n\t}\n\n\tres[edge] = true;\n\treturn res;\n}\n\nfunction parseBorderWidth(vm, maxW, maxH) {\n\tvar value = vm.borderWidth;\n\tvar skip = parseBorderSkipped(vm);\n\tvar t, r, b, l;\n\n\tif (helpers$1.isObject(value)) {\n\t\tt = +value.top || 0;\n\t\tr = +value.right || 0;\n\t\tb = +value.bottom || 0;\n\t\tl = +value.left || 0;\n\t} else {\n\t\tt = r = b = l = +value || 0;\n\t}\n\n\treturn {\n\t\tt: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,\n\t\tr: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,\n\t\tb: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,\n\t\tl: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l\n\t};\n}\n\nfunction boundingRects(vm) {\n\tvar bounds = getBarBounds(vm);\n\tvar width = bounds.right - bounds.left;\n\tvar height = bounds.bottom - bounds.top;\n\tvar border = parseBorderWidth(vm, width / 2, height / 2);\n\n\treturn {\n\t\touter: {\n\t\t\tx: bounds.left,\n\t\t\ty: bounds.top,\n\t\t\tw: width,\n\t\t\th: height\n\t\t},\n\t\tinner: {\n\t\t\tx: bounds.left + border.l,\n\t\t\ty: bounds.top + border.t,\n\t\t\tw: width - border.l - border.r,\n\t\t\th: height - border.t - border.b\n\t\t}\n\t};\n}\n\nfunction inRange(vm, x, y) {\n\tvar skipX = x === null;\n\tvar skipY = y === null;\n\tvar bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nvar element_rectangle = core_element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar rects = boundingRects(vm);\n\t\tvar outer = rects.outer;\n\t\tvar inner = rects.inner;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n\t\tif (outer.w === inner.w && outer.h === inner.h) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(outer.x, outer.y, outer.w, outer.h);\n\t\tctx.clip();\n\t\tctx.fillStyle = vm.borderColor;\n\t\tctx.rect(inner.x, inner.y, inner.w, inner.h);\n\t\tctx.fill('evenodd');\n\t\tctx.restore();\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\treturn inRange(this._view, mouseX, mouseY);\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn isVertical(vm)\n\t\t\t? inRange(vm, mouseX, null)\n\t\t\t: inRange(vm, null, mouseY);\n\t},\n\n\tinXRange: function(mouseX) {\n\t\treturn inRange(this._view, mouseX, null);\n\t},\n\n\tinYRange: function(mouseY) {\n\t\treturn inRange(this._view, null, mouseY);\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(vm)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\n\t\treturn isVertical(vm)\n\t\t\t? vm.width * Math.abs(vm.y - vm.base)\n\t\t\t: vm.height * Math.abs(vm.x - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\nvar elements = {};\nvar Arc = element_arc;\nvar Line = element_line;\nvar Point = element_point;\nvar Rectangle = element_rectangle;\nelements.Arc = Arc;\nelements.Line = Line;\nelements.Point = Point;\nelements.Rectangle = Rectangle;\n\nvar resolve$1 = helpers$1.options.resolve;\n\ncore_defaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers$1.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale size.\n\t\tprev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - (curr - Math.min(prev, next)) / 2 * percent;\n\tsize = Math.abs(next - prev) / 2 * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nvar controller_bar = core_datasetController.extend({\n\n\tdataElementType: elements.Rectangle,\n\n\tinitialize: function() {\n\t\tvar me = this;\n\t\tvar meta;\n\n\t\tcore_datasetController.prototype.initialize.apply(me, arguments);\n\n\t\tmeta = me.getMeta();\n\t\tmeta.stack = me.getDataset().stack;\n\t\tmeta.bar = true;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar rects = me.getMeta().data;\n\t\tvar i, ilen;\n\n\t\tme._ruler = me.getRuler();\n\n\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\tme.updateElement(rects[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\t\tvar options = me._resolveElementOptions(rectangle, index);\n\n\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\trectangle._datasetIndex = me.index;\n\t\trectangle._index = index;\n\t\trectangle._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderSkipped: options.borderSkipped,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tdatasetLabel: dataset.label,\n\t\t\tlabel: me.chart.data.labels[index]\n\t\t};\n\n\t\tme._updateElementGeometry(rectangle, index, reset);\n\n\t\trectangle.pivot();\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateElementGeometry: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar model = rectangle._model;\n\t\tvar vscale = me._getValueScale();\n\t\tvar base = vscale.getBasePixel();\n\t\tvar horizontal = vscale.isHorizontal();\n\t\tvar ruler = me._ruler || me.getRuler();\n\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\tmodel.horizontal = horizontal;\n\t\tmodel.base = reset ? base : vpixels.base;\n\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t},\n\n\t/**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n\t_getStacks: function(last) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stacked = scale.options.stacked;\n\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\tvar stacks = [];\n\t\tvar i, meta;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t(stacked === false ||\n\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\tstacks.push(meta.stack);\n\t\t\t}\n\t\t}\n\n\t\treturn stacks;\n\t},\n\n\t/**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n\tgetStackCount: function() {\n\t\treturn this._getStacks().length;\n\t},\n\n\t/**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n\t * @returns {number} The stack index\n\t * @private\n\t */\n\tgetStackIndex: function(datasetIndex, name) {\n\t\tvar stacks = this._getStacks(datasetIndex);\n\t\tvar index = (name !== undefined)\n\t\t\t? stacks.indexOf(name)\n\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\treturn (index === -1)\n\t\t\t? stacks.length - 1\n\t\t\t: index;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetRuler: function() {\n\t\tvar me = this;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stackCount = me.getStackCount();\n\t\tvar datasetIndex = me.index;\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\tvar pixels = [];\n\t\tvar i, ilen, min;\n\n\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t}\n\n\t\tmin = helpers$1.isNullOrUndef(scale.options.barThickness)\n\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\tmin: min,\n\t\t\tpixels: pixels,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tstackCount: stackCount,\n\t\t\tscale: scale\n\t\t};\n\t},\n\n\t/**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar scale = me._getValueScale();\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar datasets = chart.data.datasets;\n\t\tvar value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\tvar minBarLength = scale.options.minBarLength;\n\t\tvar stacked = scale.options.stacked;\n\t\tvar stack = meta.stack;\n\t\tvar start = 0;\n\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\tif (imeta.bar &&\n\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\timeta.controller._getValueScaleId() === scale.id &&\n\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\tivalue = +scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbase = scale.getPixelForValue(start);\n\t\thead = scale.getPixelForValue(start + value);\n\t\tsize = head - base;\n\n\t\tif (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n\t\t\tsize = minBarLength;\n\t\t\tif (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n\t\t\t\thead = base - minBarLength;\n\t\t\t} else {\n\t\t\t\thead = base + minBarLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tbase: base,\n\t\t\thead: head,\n\t\t\tcenter: head + size / 2\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\tvar me = this;\n\t\tvar options = ruler.scale.options;\n\t\tvar range = options.barThickness === 'flex'\n\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\tvar size = Math.min(\n\t\t\thelpers$1.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\trange.chunk * range.ratio);\n\n\t\treturn {\n\t\t\tbase: center - size / 2,\n\t\t\thead: center + size / 2,\n\t\t\tcenter: center,\n\t\t\tsize: size\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getValueScale();\n\t\tvar rects = me.getMeta().data;\n\t\tvar dataset = me.getDataset();\n\t\tvar ilen = rects.length;\n\t\tvar i = 0;\n\n\t\thelpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\trects[i].draw();\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(rectangle, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = rectangle.custom || {};\n\t\tvar options = chart.options.elements.rectangle;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderSkipped',\n\t\t\t'borderWidth'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$1([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t}\n});\n\nvar valueOrDefault$3 = helpers$1.valueOrDefault;\nvar resolve$2 = helpers$1.options.resolve;\n\ncore_defaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_bubble = core_datasetController.extend({\n\t/**\n\t * @protected\n\t */\n\tdataElementType: elements.Point,\n\n\t/**\n\t * @protected\n\t */\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data;\n\n\t\t// Update Points\n\t\thelpers$1.each(points, function(point, index) {\n\t\t\tme.updateElement(point, index, reset);\n\t\t});\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar options = me._resolveElementOptions(point, index);\n\t\tvar data = me.getDataset().data[index];\n\t\tvar dsIndex = me.index;\n\n\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = dsIndex;\n\t\tpoint._index = index;\n\t\tpoint._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\thitRadius: options.hitRadius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tradius: reset ? 0 : options.radius,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t};\n\n\t\tpoint.pivot();\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = options.radius + options.hoverRadius;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(point, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = point.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar data = dataset.data[index];\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t\t'hoverRadius',\n\t\t\t'hitRadius',\n\t\t\t'pointStyle',\n\t\t\t'rotation'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$2([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\t// Custom radius resolution\n\t\tvalues.radius = resolve$2([\n\t\t\tcustom.radius,\n\t\t\tdata ? data.r : undefined,\n\t\t\tdataset.radius,\n\t\t\toptions.radius\n\t\t], context, index);\n\n\t\treturn values;\n\t}\n});\n\nvar resolve$3 = helpers$1.options.resolve;\nvar valueOrDefault$4 = helpers$1.valueOrDefault;\n\ncore_defaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers$1.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_doughnut = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\tgetRingIndex: function(datasetIndex) {\n\t\tvar ringIndex = 0;\n\n\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t++ringIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn ringIndex;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar availableWidth = chartArea.right - chartArea.left;\n\t\tvar availableHeight = chartArea.bottom - chartArea.top;\n\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\tvar offset = {x: 0, y: 0};\n\t\tvar meta = me.getMeta();\n\t\tvar arcs = meta.data;\n\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\tvar circumference = opts.circumference;\n\t\tvar chartWeight = me._getRingWeight(me.index);\n\t\tvar i, ilen;\n\n\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\tif (circumference < Math.PI * 2.0) {\n\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\tvar endAngle = startAngle + circumference;\n\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t}\n\n\t\tchart.borderWidth = me.getMaxBorderWidth();\n\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\tmeta.total = me.calculateTotal();\n\n\t\tme.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\tvar dataset = me.getDataset();\n\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\tstartAngle: startAngle,\n\t\t\t\tendAngle: endAngle,\n\t\t\t\tcircumference: circumference,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t}\n\t\t});\n\n\t\tvar model = arc._model;\n\n\t\t// Set correct angles if not resetting\n\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\tif (index === 0) {\n\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t} else {\n\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t}\n\n\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t}\n\n\t\tarc.pivot();\n\t},\n\n\tcalculateTotal: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar total = 0;\n\t\tvar value;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tvalue = dataset.data[index];\n\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\ttotal += Math.abs(value);\n\t\t\t}\n\t\t});\n\n\t\t/* if (total === 0) {\n\t\t\ttotal = NaN;\n\t\t}*/\n\n\t\treturn total;\n\t},\n\n\tcalculateCircumference: function(value) {\n\t\tvar total = this.getMeta().total;\n\t\tif (total > 0 && !isNaN(value)) {\n\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// gets the max border or hover width to properly scale pie charts\n\tgetMaxBorderWidth: function(arcs) {\n\t\tvar me = this;\n\t\tvar max = 0;\n\t\tvar chart = me.chart;\n\t\tvar i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n\t\tif (!arcs) {\n\t\t\t// Find the outmost visible dataset\n\t\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tarcs = meta.data;\n\t\t\t\t\tif (i !== me.index) {\n\t\t\t\t\t\tcontroller = meta.controller;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!arcs) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarc = arcs[i];\n\t\t\toptions = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\t\t\tif (options.borderAlign !== 'inner') {\n\t\t\t\tborderWidth = options.borderWidth;\n\t\t\t\thoverWidth = options.hoverBorderWidth;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$3([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n\t_getRingWeightOffset: function(datasetIndex) {\n\t\tvar ringWeightOffset = 0;\n\n\t\tfor (var i = 0; i < datasetIndex; ++i) {\n\t\t\tif (this.chart.isDatasetVisible(i)) {\n\t\t\t\tringWeightOffset += this._getRingWeight(i);\n\t\t\t}\n\t\t}\n\n\t\treturn ringWeightOffset;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getRingWeight: function(dataSetIndex) {\n\t\treturn Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n\t},\n\n\t/**\n\t * Returns the sum of all visibile data set weights.  This value can be 0.\n\t * @private\n\t */\n\t_getVisibleDatasetWeightTotal: function() {\n\t\treturn this._getRingWeightOffset(this.chart.data.datasets.length);\n\t}\n});\n\ncore_defaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'category',\n\t\t\tposition: 'left',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\nvar controller_horizontalBar = controller_bar.extend({\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t}\n});\n\nvar valueOrDefault$5 = helpers$1.valueOrDefault;\nvar resolve$4 = helpers$1.options.resolve;\nvar isPointInArea = helpers$1.canvas._isPointInArea;\n\ncore_defaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nfunction lineEnabled(dataset, options) {\n\treturn valueOrDefault$5(dataset.showLine, options.showLines);\n}\n\nvar controller_line = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\tvar dataset = me.getDataset();\n\t\tvar showLine = lineEnabled(dataset, me.chart.options);\n\t\tvar i, ilen;\n\n\t\t// Update Line\n\t\tif (showLine) {\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\t// Utility\n\t\t\tline._scale = scale;\n\t\t\tline._datasetIndex = me.index;\n\t\t\t// Data\n\t\t\tline._children = points;\n\t\t\t// Model\n\t\t\tline._model = me._resolveLineOptions(line);\n\n\t\t\tline.pivot();\n\t\t}\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\tif (showLine && line._model.tension !== 0) {\n\t\t\tme.updateBezierControlPoints();\n\t\t}\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar datasetIndex = me.index;\n\t\tvar value = dataset.data[index];\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar x, y;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\n\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options;\n\t\tvar elementOptions = options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill',\n\t\t\t'cubicInterpolationMode'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\telementOptions[key]\n\t\t\t]);\n\t\t}\n\n\t\t// The default behavior of lines is to break at null values, according\n\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t// This option gives lines the ability to span gaps\n\t\tvalues.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n\t\tvalues.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n\t\tvalues.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n\n\t\treturn values;\n\t},\n\n\tcalculatePointY: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar sumPos = 0;\n\t\tvar sumNeg = 0;\n\t\tvar i, ds, dsMeta;\n\n\t\tif (yScale.options.stacked) {\n\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\tif (rightValue < 0) {\n\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t}\n\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t}\n\n\t\treturn yScale.getPixelForValue(value);\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar area = chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\tif (lineModel.spanGaps) {\n\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\treturn !pt._model.skip;\n\t\t\t});\n\t\t}\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tif (lineModel.cubicInterpolationMode === 'monotone') {\n\t\t\thelpers$1.splineCurveMonotone(points);\n\t\t} else {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\t\thelpers$1.previousItem(points, i)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers$1.nextItem(points, i)._model,\n\t\t\t\t\tlineModel.tension\n\t\t\t\t);\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t}\n\t\t}\n\n\t\tif (chart.options.elements.line.capBezierPoints) {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tif (isPointInArea(model, area)) {\n\t\t\t\t\tif (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t\tif (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data || [];\n\t\tvar area = chart.chartArea;\n\t\tvar ilen = points.length;\n\t\tvar halfBorderWidth;\n\t\tvar i = 0;\n\n\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\thelpers$1.canvas.clipArea(chart.ctx, {\n\t\t\t\tleft: area.left,\n\t\t\t\tright: area.right,\n\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t});\n\n\t\t\tmeta.dataset.draw();\n\n\t\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t\t}\n\n\t\t// Draw the points\n\t\tfor (; i < ilen; ++i) {\n\t\t\tpoints[i].draw(area);\n\t\t}\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n\t},\n});\n\nvar resolve$5 = helpers$1.options.resolve;\n\ncore_defaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_polarArea = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\t\tvar start = me.chart.options.startAngle || 0;\n\t\tvar starts = me._starts = [];\n\t\tvar angles = me._angles = [];\n\t\tvar arcs = meta.data;\n\t\tvar i, ilen, angle;\n\n\t\tme._updateRadius();\n\n\t\tmeta.count = me.countVisibleElements();\n\n\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\tstarts[i] = start;\n\t\t\tangle = me._computeAngle(i);\n\t\t\tangles[i] = angle;\n\t\t\tstart += angle;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateRadius: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\tchart.outerRadius = Math.max(minSize / 2, 0);\n\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar scale = chart.scale;\n\t\tvar labels = chart.data.labels;\n\n\t\tvar centerX = scale.xCenter;\n\t\tvar centerY = scale.yCenter;\n\n\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\tvar datasetStartAngle = opts.startAngle;\n\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar startAngle = me._starts[index];\n\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\t\t\t_scale: scale,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX,\n\t\t\t\ty: centerY,\n\t\t\t\tinnerRadius: 0,\n\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t}\n\t\t});\n\n\t\tarc.pivot();\n\t},\n\n\tcountVisibleElements: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar count = 0;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\t\tvar valueOrDefault = helpers$1.valueOrDefault;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$5([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_computeAngle: function(index) {\n\t\tvar me = this;\n\t\tvar count = this.getMeta().count;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\n\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: me.chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\treturn resolve$5([\n\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t(2 * Math.PI) / count\n\t\t], context, index);\n\t}\n});\n\ncore_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\ncore_defaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\n// Pie charts are Doughnut chart with different defaults\nvar controller_pie = controller_doughnut;\n\nvar valueOrDefault$6 = helpers$1.valueOrDefault;\nvar resolve$6 = helpers$1.options.resolve;\n\ncore_defaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nvar controller_radar = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.chart.scale;\n\t\tvar dataset = me.getDataset();\n\t\tvar i, ilen;\n\n\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\tdataset.lineTension = dataset.tension;\n\t\t}\n\n\t\t// Utility\n\t\tline._scale = scale;\n\t\tline._datasetIndex = me.index;\n\t\t// Data\n\t\tline._children = points;\n\t\tline._loop = true;\n\t\t// Model\n\t\tline._model = me._resolveLineOptions(line);\n\n\t\tline.pivot();\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\t// Update bezier control points\n\t\tme.updateBezierControlPoints();\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar scale = me.chart.scale;\n\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar lineModel = me.getMeta().dataset._model;\n\t\tvar x = reset ? scale.xCenter : pointPosition.x;\n\t\tvar y = reset ? scale.yCenter : pointPosition.y;\n\n\t\t// Utility\n\t\tpoint._scale = scale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = me.index;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t]);\n\t\t}\n\n\t\tvalues.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n\n\t\treturn values;\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar area = me.chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tmodel = points[i]._model;\n\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\thelpers$1.previousItem(points, i, true)._model,\n\t\t\t\tmodel,\n\t\t\t\thelpers$1.nextItem(points, i, true)._model,\n\t\t\t\tmodel.tension\n\t\t\t);\n\n\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\tmodel.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n\t\t\tmodel.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n\t\t\tmodel.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n\t\t\tmodel.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n\t\t}\n\t},\n\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n\t}\n});\n\ncore_defaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Scatter charts use line controllers\nvar controller_scatter = controller_line;\n\n// NOTE export a map in which the key represents the controller type, not\n// the class, and so must be CamelCase in order to be correctly retrieved\n// by the controller in core.controller.js (`controllers[meta.type]`).\n\nvar controllers = {\n\tbar: controller_bar,\n\tbubble: controller_bubble,\n\tdoughnut: controller_doughnut,\n\thorizontalBar: controller_horizontalBar,\n\tline: controller_line,\n\tpolarArea: controller_polarArea,\n\tpie: controller_pie,\n\tradar: controller_radar,\n\tscatter: controller_scatter\n};\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {object} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers$1.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param {Chart} chart - the chart\n * @param {function} handler - the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {ChartElement[]} items - elements to filter\n * @param {object} position - the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {object} position - the point to be nearest to\n * @param {boolean} intersect - if true, only consider items that intersect the position\n * @param {function} distanceMetric - function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nvar core_interaction = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\treturn getNearestItems(chart, position, options.intersect, distanceMetric);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\nfunction filterByPosition(array, position) {\n\treturn helpers$1.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\nfunction findMaxPadding(boxes) {\n\tvar top = 0;\n\tvar left = 0;\n\tvar bottom = 0;\n\tvar right = 0;\n\thelpers$1.each(boxes, function(box) {\n\t\tif (box.getPadding) {\n\t\t\tvar boxPadding = box.getPadding();\n\t\t\ttop = Math.max(top, boxPadding.top);\n\t\t\tleft = Math.max(left, boxPadding.left);\n\t\t\tbottom = Math.max(bottom, boxPadding.bottom);\n\t\t\tright = Math.max(right, boxPadding.right);\n\t\t}\n\t});\n\treturn {\n\t\ttop: top,\n\t\tleft: left,\n\t\tbottom: bottom,\n\t\tright: right\n\t};\n}\n\nfunction addSizeByPosition(boxes, size) {\n\thelpers$1.each(boxes, function(box) {\n\t\tsize[box.position] += box.isHorizontal() ? box.height : box.width;\n\t});\n}\n\ncore_defaults._set('global', {\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\n/**\n * @interface ILayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} getPadding -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nvar core_layouts = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {ILayoutItem} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {ILayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers$1.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\tvar verticalBoxes = leftBoxes.concat(rightBoxes);\n\t\tvar horizontalBoxes = topBoxes.concat(bottomBoxes);\n\t\tvar outerBoxes = verticalBoxes.concat(horizontalBoxes);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n\n\t\t// Step 3\n\t\t// TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n\t\t// var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\tvar minBoxSizes = [];\n\t\tvar maxPadding;\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\twidth: minSize.width,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(outerBoxes, getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tmaxPadding = findMaxPadding(outerBoxes);\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (minBoxSize.horizontal) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(outerBoxSizes.left, maxPadding.left),\n\t\t\t\t\t\tright: Math.max(outerBoxSizes.right, maxPadding.right),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers$1.each(verticalBoxes, fitBox);\n\t\taddSizeByPosition(verticalBoxes, outerBoxSizes);\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers$1.each(horizontalBoxes, fitBox);\n\t\taddSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: outerBoxSizes.top,\n\t\t\t\tbottom: outerBoxSizes.bottom\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers$1.each(verticalBoxes, finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\touterBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\taddSizeByPosition(outerBoxes, outerBoxSizes);\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n\t\touterBoxSizes.left += leftPaddingAddition;\n\t\touterBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n\t\touterBoxSizes.top += topPaddingAddition;\n\t\touterBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n\t\tvar newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers$1.each(verticalBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers$1.each(horizontalBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = outerBoxSizes.top;\n\t\t\t\tbox.bottom = outerBoxSizes.top + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers$1.each(rightBoxes, placeBox);\n\t\thelpers$1.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: outerBoxSizes.left,\n\t\t\ttop: outerBoxSizes.top,\n\t\t\tright: outerBoxSizes.left + maxChartAreaWidth,\n\t\t\tbottom: outerBoxSizes.top + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers$1.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nvar platform_basic = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\nvar platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n\nvar platform_dom$1 = /*#__PURE__*/Object.freeze({\ndefault: platform_dom\n});\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n.default || n;\n}\n\nvar stylesheet = getCjsExportFromNamespace(platform_dom$1);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers$1.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\t// eslint-disable-next-line getter-return\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers$1.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction createDiv(cls) {\n\tvar el = document.createElement('div');\n\tel.className = cls || '';\n\treturn el;\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar maxSize = 1000000;\n\n\t// NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n\t// https://github.com/chartjs/Chart.js/issues/5902\n\tvar resizer = createDiv(CSS_SIZE_MONITOR);\n\tvar expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n\tvar shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n\n\texpand.appendChild(createDiv());\n\tshrink.appendChild(createDiv());\n\n\tresizer.appendChild(expand);\n\tresizer.appendChild(shrink);\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = chart.options.maintainAspectRatio && node.parentNode;\n\t\t\tvar w = container ? container.clientWidth : 0;\n\t\t\tlistener(createEvent('resize', chart));\n\t\t\tif (container && container.clientWidth < w && chart.canvas) {\n\t\t\t\t// If the container size shrank during chart resize, let's assume\n\t\t\t\t// scrollbar appeared. So we resize again with the scrollbar visible -\n\t\t\t\t// effectively making chart smaller and the scrollbar hidden again.\n\t\t\t\t// Because we are inside `throttled`, and currently `ticking`, scroll\n\t\t\t\t// events are ignored during this whole 2 resize process.\n\t\t\t\t// If we assumed wrong and something else happened, we are resizing\n\t\t\t\t// twice in a frame (potential performance issue)\n\t\t\t\tlistener(createEvent('resize', chart));\n\t\t\t}\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// https://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nvar platform_dom$2 = {\n\t/**\n\t * When `true`, prevents the automatic injection of the stylesheet required to\n\t * correctly detect when the chart is added to the DOM and then resized. This\n\t * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n\t * to be manually imported to make this library compatible with any CSP.\n\t * See https://github.com/chartjs/Chart.js/issues/5208\n\t */\n\tdisableCSSInjection: false,\n\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\t/**\n\t * @private\n\t */\n\t_ensureLoaded: function() {\n\t\tif (this._loaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loaded = true;\n\n\t\t// https://github.com/chartjs/Chart.js/issues/5208\n\t\tif (!this.disableCSSInjection) {\n\t\t\tinjectCSS(this, stylesheet);\n\t\t}\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// Load platform resources on first chart creation, to make possible to change\n\t\t// platform options after importing the library (e.g. `disableCSSInjection`).\n\t\tthis._ensureLoaded();\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers$1.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers$1.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t// eslint-disable-next-line no-self-assign\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.addEvent = addListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.removeEvent = removeListener;\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nvar platform = helpers$1.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link IEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link IEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\ncore_defaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nvar core_plugins = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {IPlugin[]} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {object[]} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers$1.clone(core_defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\nvar core_scaleService = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers$1.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers$1.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tcore_layouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\nvar valueOrDefault$7 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers$1.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\t\t\t\t\tif (item.label) {\n\t\t\t\t\t\ttitle = item.label;\n\t\t\t\t\t} else if (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers$1.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tif (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n\t\t\t\t\tlabel += tooltipItem.value;\n\t\t\t\t} else {\n\t\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers$1.noop,\n\t\t\tfooter: helpers$1.noop,\n\t\t\tafterFooter: helpers$1.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {object} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: x / count,\n\t\t\ty: y / count\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {object} the position of the event in canvas coordinates\n\t * @returns {object} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers$1.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {string} value - The value to split by newline.\n * @returns {string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param element - the chart element (point, arc, bar) to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\tvar controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\tvar indexScale = controller._getIndexScale();\n\tvar valueScale = controller._getValueScale();\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tlabel: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tvalue: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = core_defaults.global;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers$1.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers$1.each(body, function(bodyItem) {\n\t\thelpers$1.each(bodyItem.before, maxLineWidth);\n\t\thelpers$1.each(bodyItem.lines, maxLineWidth);\n\t\thelpers$1.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers$1.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\nfunction getAlignedX(vm, align) {\n\treturn align === 'center'\n\t\t? vm.x + vm.width / 2\n\t\t: align === 'right'\n\t\t\t? vm.x + vm.width - vm.xPadding\n\t\t\t: vm.x + vm.xPadding;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports$3 = core_element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = tooltipPosition.x;\n\t\t\tmodel.y = tooltipPosition.y;\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._titleAlign);\n\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = vm.titleFontColor;\n\t\t\tctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar bodyAlign = vm._bodyAlign;\n\t\tvar body = vm.body;\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\tvar labelColors = vm.labelColors;\n\t\tvar xLinePadding = 0;\n\t\tvar colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n\t\tvar textColor;\n\n\t\tctx.textAlign = bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\tpt.x = getAlignedX(vm, bodyAlign);\n\n\t\t// Before Body\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = vm.bodyFontColor;\n\t\thelpers$1.each(vm.beforeBody, fillLineOfText);\n\n\t\txLinePadding = drawColorBoxes && bodyAlign !== 'right'\n\t\t\t? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n\t\t\t: 0;\n\n\t\t// Draw body lines now\n\t\thelpers$1.each(body, function(bodyItem, i) {\n\t\t\ttextColor = vm.labelTextColors[i];\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers$1.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers$1.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = vm.legendColorBackground;\n\t\t\t\t\tctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = labelColors[i].borderColor;\n\t\t\t\t\tctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = labelColors[i].backgroundColor;\n\t\t\t\t\tctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers$1.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers$1.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._footerAlign);\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = vm.footerFontColor;\n\t\t\tctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers$1.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize) {\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\tctx.save();\n\t\t\tctx.globalAlpha = opacity;\n\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx);\n\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers$1.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nvar positioners_1 = positioners;\n\nvar core_tooltip = exports$3;\ncore_tooltip.positioners = positioners_1;\n\nvar valueOrDefault$8 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\telements: {},\n\tevents: [\n\t\t'mousemove',\n\t\t'mouseout',\n\t\t'click',\n\t\t'touchstart',\n\t\t'touchmove'\n\t],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tmaintainAspectRatio: true,\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0\n});\n\n/**\n * Recursively merge the given config objects representing the `scales` option\n * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n * returns a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeScaleConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\tvar slen = source[key].length;\n\t\t\t\tvar i, type, scale;\n\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\ttarget[key] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\ttype = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\thelpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\thelpers$1.merge(target[key][i], scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Recursively merge the given config objects as the root options by handling\n * default scale options for the `scales` and `scale` properties, then returns\n * a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tvar tval = target[key] || {};\n\t\t\tvar sval = source[key];\n\n\t\t\tif (key === 'scales') {\n\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\ttarget[key] = mergeScaleConfig(tval, sval);\n\t\t\t} else if (key === 'scale') {\n\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\ttarget[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction initConfig(config) {\n\tconfig = config || {};\n\n\t// Do NOT use mergeConfig for the data object because this method merges arrays\n\t// and so would change references to labels and datasets, preventing data updates.\n\tvar data = config.data = config.data || {};\n\tdata.datasets = data.datasets || [];\n\tdata.labels = data.labels || [];\n\n\tconfig.options = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[config.type],\n\t\tconfig.options || {});\n\n\treturn config;\n}\n\nfunction updateConfig(chart) {\n\tvar newOptions = chart.options;\n\n\thelpers$1.each(chart.scales, function(scale) {\n\t\tcore_layouts.removeBox(chart, scale);\n\t});\n\n\tnewOptions = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[chart.config.type],\n\t\tnewOptions);\n\n\tchart.options = chart.config.options = newOptions;\n\tchart.ensureScalesHaveIDs();\n\tchart.buildOrUpdateScales();\n\n\t// Tooltip\n\tchart.tooltip._options = newOptions.tooltips;\n\tchart.tooltip.initialize();\n}\n\nfunction positionIsHorizontal(position) {\n\treturn position === 'top' || position === 'bottom';\n}\n\nvar Chart = function(item, config) {\n\tthis.construct(item, config);\n\treturn this;\n};\n\nhelpers$1.extend(Chart.prototype, /** @lends Chart */ {\n\t/**\n\t * @private\n\t */\n\tconstruct: function(item, config) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tme.id = helpers$1.uid();\n\t\tme.ctx = context;\n\t\tme.canvas = canvas;\n\t\tme.config = config;\n\t\tme.width = width;\n\t\tme.height = height;\n\t\tme.aspectRatio = height ? width / height : null;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t/**\n\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t * @prop Chart#chart\n\t\t * @deprecated since version 2.6.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tme.chart = me;\n\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tme.config.data = value;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinitialize: function() {\n\t\tvar me = this;\n\n\t\t// Before init plugin notification\n\t\tcore_plugins.notify(me, 'beforeInit');\n\n\t\thelpers$1.retinaScale(me, me.options.devicePixelRatio);\n\n\t\tme.bindEvents();\n\n\t\tif (me.options.responsive) {\n\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\tme.resize(true);\n\t\t}\n\n\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\tme.ensureScalesHaveIDs();\n\t\tme.buildOrUpdateScales();\n\t\tme.initToolTip();\n\n\t\t// After init plugin notification\n\t\tcore_plugins.notify(me, 'afterInit');\n\n\t\treturn me;\n\t},\n\n\tclear: function() {\n\t\thelpers$1.canvas.clear(this);\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\t// Stops any current animation loop occurring\n\t\tcore_animations.cancelAnimation(this);\n\t\treturn this;\n\t},\n\n\tresize: function(silent) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar canvas = me.canvas;\n\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\tvar newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.width = me.width = newWidth;\n\t\tcanvas.height = me.height = newHeight;\n\t\tcanvas.style.width = newWidth + 'px';\n\t\tcanvas.style.height = newHeight + 'px';\n\n\t\thelpers$1.retinaScale(me, options.devicePixelRatio);\n\n\t\tif (!silent) {\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tcore_plugins.notify(me, 'resize', [newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (options.onResize) {\n\t\t\t\toptions.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tme.stop();\n\t\t\tme.update({\n\t\t\t\tduration: options.responsiveAnimationDuration\n\t\t\t});\n\t\t}\n\t},\n\n\tensureScalesHaveIDs: function() {\n\t\tvar options = this.options;\n\t\tvar scalesOptions = options.scales || {};\n\t\tvar scaleOptions = options.scale;\n\n\t\thelpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t});\n\n\t\thelpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t});\n\n\t\tif (scaleOptions) {\n\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t}\n\t},\n\n\t/**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n\tbuildOrUpdateScales: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar scales = me.scales || {};\n\t\tvar items = [];\n\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\tobj[id] = false;\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\tif (options.scales) {\n\t\t\titems = items.concat(\n\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t}),\n\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif (options.scale) {\n\t\t\titems.push({\n\t\t\t\toptions: options.scale,\n\t\t\t\tdtype: 'radialLinear',\n\t\t\t\tisDefault: true,\n\t\t\t\tdposition: 'chartArea'\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(items, function(item) {\n\t\t\tvar scaleOptions = item.options;\n\t\t\tvar id = scaleOptions.id;\n\t\t\tvar scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t}\n\n\t\t\tupdated[id] = true;\n\t\t\tvar scale = null;\n\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\tscale = scales[id];\n\t\t\t\tscale.options = scaleOptions;\n\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\tscale.chart = me;\n\t\t\t} else {\n\t\t\t\tvar scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscale = new scaleClass({\n\t\t\t\t\tid: id,\n\t\t\t\t\ttype: scaleType,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\t\t\t\tscales[scale.id] = scale;\n\t\t\t}\n\n\t\t\tscale.mergeTicksOptions();\n\n\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\tif (item.isDefault) {\n\t\t\t\tme.scale = scale;\n\t\t\t}\n\t\t});\n\t\t// clear up discarded scales\n\t\thelpers$1.each(updated, function(hasUpdated, id) {\n\t\t\tif (!hasUpdated) {\n\t\t\t\tdelete scales[id];\n\t\t\t}\n\t\t});\n\n\t\tme.scales = scales;\n\n\t\tcore_scaleService.addScalesToLayout(this);\n\t},\n\n\tbuildOrUpdateControllers: function() {\n\t\tvar me = this;\n\t\tvar newControllers = [];\n\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t}\n\t\t\tmeta.type = type;\n\n\t\t\tif (meta.controller) {\n\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\tmeta.controller.linkScales();\n\t\t\t} else {\n\t\t\t\tvar ControllerClass = controllers[meta.type];\n\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t}\n\n\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t}\n\t\t}, me);\n\n\t\treturn newControllers;\n\t},\n\n\t/**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n\tresetElements: function() {\n\t\tvar me = this;\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t}, me);\n\t},\n\n\t/**\n\t* Resets the chart back to it's state before the initial animation\n\t*/\n\treset: function() {\n\t\tthis.resetElements();\n\t\tthis.tooltip.initialize();\n\t},\n\n\tupdate: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tupdateConfig(me);\n\n\t\t// plugins options references might have change, let's invalidate the cache\n\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\tcore_plugins._invalidate(me);\n\n\t\tif (core_plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case the entire data object changed\n\t\tme.tooltip._data = me.data;\n\n\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t// Make sure all dataset controllers have correct meta data counts\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t}, me);\n\n\t\tme.updateLayout();\n\n\t\t// Can only reset the new controllers after the scales have been updated\n\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\thelpers$1.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\t\t}\n\n\t\tme.updateDatasets();\n\n\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t// after update.\n\t\tme.tooltip.initialize();\n\n\t\t// Last active contains items that were previously in the tooltip.\n\t\t// When we reset the tooltip, we need to clear it\n\t\tme.lastActive = [];\n\n\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\tcore_plugins.notify(me, 'afterUpdate');\n\n\t\tif (me._bufferedRender) {\n\t\t\tme._bufferedRequest = {\n\t\t\t\tduration: config.duration,\n\t\t\t\teasing: config.easing,\n\t\t\t\tlazy: config.lazy\n\t\t\t};\n\t\t} else {\n\t\t\tme.render(config);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n\tupdateLayout: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeLayout') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tcore_layouts.update(this, this.width, this.height);\n\n\t\t/**\n\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t * @method IPlugin#afterScaleUpdate\n\t\t * @deprecated since version 2.5.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tcore_plugins.notify(me, 'afterScaleUpdate');\n\t\tcore_plugins.notify(me, 'afterLayout');\n\t},\n\n\t/**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n\tupdateDatasets: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.updateDataset(i);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsUpdate');\n\t},\n\n\t/**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n\tupdateDataset: function(index) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.update();\n\n\t\tcore_plugins.notify(me, 'afterDatasetUpdate', [args]);\n\t},\n\n\trender: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvar animationOptions = me.options.animation;\n\t\tvar duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n\t\tvar lazy = config.lazy;\n\n\t\tif (core_plugins.notify(me, 'beforeRender') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar onComplete = function(animation) {\n\t\t\tcore_plugins.notify(me, 'afterRender');\n\t\t\thelpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t};\n\n\t\tif (animationOptions && duration) {\n\t\t\tvar animation = new core_animation({\n\t\t\t\tnumSteps: duration / 16.66, // 60 fps\n\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers$1.easing.effects[animationObject.easing];\n\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t},\n\n\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\tonAnimationComplete: onComplete\n\t\t\t});\n\n\t\t\tcore_animations.addAnimation(me, animation, duration, lazy);\n\t\t} else {\n\t\t\tme.draw();\n\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\tonComplete(new core_animation({numSteps: 0, chart: me}));\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdraw: function(easingValue) {\n\t\tvar me = this;\n\n\t\tme.clear();\n\n\t\tif (helpers$1.isNullOrUndef(easingValue)) {\n\t\t\teasingValue = 1;\n\t\t}\n\n\t\tme.transition(easingValue);\n\n\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw all the scales\n\t\thelpers$1.each(me.boxes, function(box) {\n\t\t\tbox.draw(me.chartArea);\n\t\t}, me);\n\n\t\tme.drawDatasets(easingValue);\n\t\tme._drawTooltip(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDraw', [easingValue]);\n\t},\n\n\t/**\n\t * @private\n\t */\n\ttransition: function(easingValue) {\n\t\tvar me = this;\n\n\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t}\n\t\t}\n\n\t\tme.tooltip.transition(easingValue);\n\t},\n\n\t/**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n\tdrawDatasets: function(easingValue) {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw datasets reversed to support proper line stacking\n\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t}\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t},\n\n\t/**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n\tdrawDataset: function(index, easingValue) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.draw(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDatasetDraw', [args]);\n\t},\n\n\t/**\n\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t * @private\n\t */\n\t_drawTooltip: function(easingValue) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\t\tvar args = {\n\t\t\ttooltip: tooltip,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\ttooltip.draw();\n\n\t\tcore_plugins.notify(me, 'afterTooltipDraw', [args]);\n\t},\n\n\t/**\n\t * Get the single element that was clicked on\n\t * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t */\n\tgetElementAtEvent: function(e) {\n\t\treturn core_interaction.modes.single(this, e);\n\t},\n\n\tgetElementsAtEvent: function(e) {\n\t\treturn core_interaction.modes.label(this, e, {intersect: true});\n\t},\n\n\tgetElementsAtXAxis: function(e) {\n\t\treturn core_interaction.modes['x-axis'](this, e, {intersect: true});\n\t},\n\n\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\tvar method = core_interaction.modes[mode];\n\t\tif (typeof method === 'function') {\n\t\t\treturn method(this, e, options);\n\t\t}\n\n\t\treturn [];\n\t},\n\n\tgetDatasetAtEvent: function(e) {\n\t\treturn core_interaction.modes.dataset(this, e, {intersect: true});\n\t},\n\n\tgetDatasetMeta: function(datasetIndex) {\n\t\tvar me = this;\n\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\tif (!dataset._meta) {\n\t\t\tdataset._meta = {};\n\t\t}\n\n\t\tvar meta = dataset._meta[me.id];\n\t\tif (!meta) {\n\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\ttype: null,\n\t\t\t\tdata: [],\n\t\t\t\tdataset: null,\n\t\t\t\tcontroller: null,\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\txAxisID: null,\n\t\t\t\tyAxisID: null\n\t\t\t};\n\t\t}\n\n\t\treturn meta;\n\t},\n\n\tgetVisibleDatasetCount: function() {\n\t\tvar count = 0;\n\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t},\n\n\tisDatasetVisible: function(datasetIndex) {\n\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t},\n\n\tgenerateLegend: function() {\n\t\treturn this.options.legendCallback(this);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroyDatasetMeta: function(datasetIndex) {\n\t\tvar id = this.id;\n\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\tif (meta) {\n\t\t\tmeta.controller.destroy();\n\t\t\tdelete dataset._meta[id];\n\t\t}\n\t},\n\n\tdestroy: function() {\n\t\tvar me = this;\n\t\tvar canvas = me.canvas;\n\t\tvar i, ilen;\n\n\t\tme.stop();\n\n\t\t// dataset controllers need to cleanup associated data\n\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.destroyDatasetMeta(i);\n\t\t}\n\n\t\tif (canvas) {\n\t\t\tme.unbindEvents();\n\t\t\thelpers$1.canvas.clear(me);\n\t\t\tplatform.releaseContext(me.ctx);\n\t\t\tme.canvas = null;\n\t\t\tme.ctx = null;\n\t\t}\n\n\t\tcore_plugins.notify(me, 'destroy');\n\n\t\tdelete Chart.instances[me.id];\n\t},\n\n\ttoBase64Image: function() {\n\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t},\n\n\tinitToolTip: function() {\n\t\tvar me = this;\n\t\tme.tooltip = new core_tooltip({\n\t\t\t_chart: me,\n\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t_data: me.data,\n\t\t\t_options: me.options.tooltips\n\t\t}, me);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners = {};\n\t\tvar listener = function() {\n\t\t\tme.eventHandler.apply(me, arguments);\n\t\t};\n\n\t\thelpers$1.each(me.options.events, function(type) {\n\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\tlisteners[type] = listener;\n\t\t});\n\n\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\tif (me.options.responsive) {\n\t\t\tlistener = function() {\n\t\t\t\tme.resize();\n\t\t\t};\n\n\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\tlisteners.resize = listener;\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tunbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners;\n\t\tif (!listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete me._listeners;\n\t\thelpers$1.each(listeners, function(listener, type) {\n\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t});\n\t},\n\n\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\tvar element, i, ilen;\n\n\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\telement = elements[i];\n\t\t\tif (element) {\n\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\teventHandler: function(e) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\n\t\tif (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Buffer any update calls so that renders do not occur\n\t\tme._bufferedRender = true;\n\t\tme._bufferedRequest = null;\n\n\t\tvar changed = me.handleEvent(e);\n\t\t// for smooth tooltip animations issue #4989\n\t\t// the tooltip should be the source of change\n\t\t// Animation check workaround:\n\t\t// tooltip._start will be null when tooltip isn't animating\n\t\tif (tooltip) {\n\t\t\tchanged = tooltip._start\n\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterEvent', [e]);\n\n\t\tvar bufferedRequest = me._bufferedRequest;\n\t\tif (bufferedRequest) {\n\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\tme.render(bufferedRequest);\n\t\t} else if (changed && !me.animating) {\n\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\tme.stop();\n\n\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\tme.render({\n\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\tlazy: true\n\t\t\t});\n\t\t}\n\n\t\tme._bufferedRender = false;\n\t\tme._bufferedRequest = null;\n\n\t\treturn me;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event the event to handle\n\t * @return {boolean} true if the chart needs to re-render\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me.options || {};\n\t\tvar hoverOptions = options.hover;\n\t\tvar changed = false;\n\n\t\tme.lastActive = me.lastActive || [];\n\n\t\t// Find Active Elements for hover and tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme.active = [];\n\t\t} else {\n\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t}\n\n\t\t// Invoke onHover hook\n\t\t// Need to call with native event here to not break backwards compatibility\n\t\thelpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\tif (options.onClick) {\n\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t}\n\t\t}\n\n\t\t// Remove styling for last active (even if it may still be active)\n\t\tif (me.lastActive.length) {\n\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t}\n\n\t\t// Built in hover styling\n\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t}\n\n\t\tchanged = !helpers$1.arrayEquals(me.active, me.lastActive);\n\n\t\t// Remember Last Actives\n\t\tme.lastActive = me.active;\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * NOTE(SB) We actually don't use this container anymore but we need to keep it\n * for backward compatibility. Though, it can still be useful for plugins that\n * would need to work on multiple charts?!\n */\nChart.instances = {};\n\nvar core_controller = Chart;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart instead.\n * @class Chart.Controller\n * @deprecated since version 2.6\n * @todo remove at version 3\n * @private\n */\nChart.Controller = Chart;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\nChart.types = {};\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.configMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.configMerge = mergeConfig;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.scaleMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.scaleMerge = mergeScaleConfig;\n\nvar core_helpers = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers$1.where = function(collection, filterCallback) {\n\t\tif (helpers$1.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers$1.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers$1.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers$1.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers$1.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers$1.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers$1.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers$1.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers$1.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers$1.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers$1.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers$1.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\n\t/**\n\t * Returns the number of decimal places\n\t * i.e. the number of digits after the decimal point, of the value of this Number.\n\t * @param {number} x - A number.\n\t * @returns {number} The number of decimal places.\n\t * @private\n\t */\n\thelpers$1._decimalPlaces = function(x) {\n\t\tif (!helpers$1.isFinite(x)) {\n\t\t\treturn;\n\t\t}\n\t\tvar e = 1;\n\t\tvar p = 0;\n\t\twhile (Math.round(x * e) / e !== x) {\n\t\t\te *= 10;\n\t\t\tp++;\n\t\t}\n\t\treturn p;\n\t};\n\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers$1.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\n\t/**\n\t * Provided for backward compatibility, not available anymore\n\t * @function Chart.helpers.aliasPixel\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t */\n\thelpers$1.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\n\t/**\n\t * Returns the aligned pixel value to avoid anti-aliasing blur\n\t * @param {Chart} chart - The chart instance.\n\t * @param {number} pixel - A pixel value.\n\t * @param {number} width - The width of the element.\n\t * @returns {number} The aligned pixel value.\n\t * @private\n\t */\n\thelpers$1._alignPixel = function(chart, pixel, width) {\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\n\t\tvar halfWidth = width / 2;\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n\t};\n\n\thelpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers$1.EPSILON = Number.EPSILON || 1e-14;\n\thelpers$1.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers$1.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers$1.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers$1.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers$1.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers$1.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t/**\n\t * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n\t * @param {HTMLElement} domNode - the node to check the constraint on\n\t * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n\t * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n\t * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n\t */\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers$1._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers$1._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers$1.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers$1._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.toString() === '[object ShadowRoot]') {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers$1.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers$1.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers$1.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers$1.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers$1.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers$1.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers$1.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers$1.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers$1.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers$1.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers$1.color = !chartjsColor ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = core_defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn chartjsColor(value);\n\t\t};\n\n\thelpers$1.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?\n\t\t\tcolorValue :\n\t\t\thelpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\nfunction abstract() {\n\tthrow new Error(\n\t\t'This method is not implemented: either no adapter can ' +\n\t\t'be found or an incomplete integration was provided.'\n\t);\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n/**\n * Currently supported unit string values.\n * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n * @memberof Chart._adapters._date\n * @name Unit\n */\n\n/**\n * @class\n */\nfunction DateAdapter(options) {\n\tthis.options = options || {};\n}\n\nhelpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {\n\t/**\n\t * Returns a map of time formats for the supported formatting units defined\n\t * in Unit as well as 'datetime' representing a detailed date/time string.\n\t * @returns {{string: string}}\n\t */\n\tformats: abstract,\n\n\t/**\n\t * Parses the given `value` and return the associated timestamp.\n\t * @param {any} value - the value to parse (usually comes from the data)\n\t * @param {string} [format] - the expected data format\n\t * @returns {(number|null)}\n\t * @function\n\t */\n\tparse: abstract,\n\n\t/**\n\t * Returns the formatted date in the specified `format` for a given `timestamp`.\n\t * @param {number} timestamp - the timestamp to format\n\t * @param {string} format - the date/time token\n\t * @return {string}\n\t * @function\n\t */\n\tformat: abstract,\n\n\t/**\n\t * Adds the specified `amount` of `unit` to the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {number} amount - the amount to add\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tadd: abstract,\n\n\t/**\n\t * Returns the number of `unit` between the given timestamps.\n\t * @param {number} max - the input timestamp (reference)\n\t * @param {number} min - the timestamp to substract\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tdiff: abstract,\n\n\t/**\n\t * Returns start of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n\t * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n\t * @function\n\t */\n\tstartOf: abstract,\n\n\t/**\n\t * Returns end of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @function\n\t */\n\tendOf: abstract,\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility for scale.getValueForPixel(),\n\t * this method should be overridden only by the moment adapter.\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(value) {\n\t\treturn value;\n\t}\n});\n\nDateAdapter.override = function(members) {\n\thelpers$1.extend(DateAdapter.prototype, members);\n};\n\nvar _date = DateAdapter;\n\nvar core_adapters = {\n\t_date: _date\n};\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nvar core_ticks = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {string|string[]} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers$1.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {number} the value to be formatted\n\t\t * @param index {number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {number[]} the list of ticks being converted\n\t\t * @return {string} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers$1.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers$1.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\nvar valueOrDefault$9 = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\ncore_defaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: core_ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (scale.getTicks().length === 1) {\n\t\t\tlineValue -= scale.isHorizontal() ?\n\t\t\t\tMath.max(lineValue - scale.left, scale.right - lineValue) :\n\t\t\t\tMath.max(lineValue - scale.top, scale.bottom - lineValue);\n\t\t} else if (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers$1.isArray(tick) ?\n\t\thelpers$1.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nvar core_scale = core_element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers$1.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers$1.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\n\t\tme._maxLabelLines = 0;\n\t\tme.longestLabelWidth = 0;\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\t// Allow modification of ticks in callback.\n\t\tticks = me.afterBuildTicks(ticks) || ticks;\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers$1.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers$1.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers$1.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers$1.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers$1.noop,\n\tafterDataLimits: function() {\n\t\thelpers$1.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers$1.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers$1.noop,\n\tafterBuildTicks: function(ticks) {\n\t\tvar me = this;\n\t\t// ticks is empty for old axis implementations here\n\t\tif (helpers$1.isArray(ticks) && ticks.length) {\n\t\t\treturn helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n\t\t}\n\t\t// Support old implementations (that modified `this.ticks` directly in buildTicks)\n\t\tme.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n\t\treturn ticks;\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\t\tcontext.font = tickFont.string;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers$1.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = me._isVisible();\n\t\tvar position = opts.position;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar tickFont = parseFont(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelFont = parseFont(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing the labels\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t// Store max number of lines and widest label for _autoSkip\n\t\t\tme._maxLabelLines = tallestLabelHeightInLines;\n\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.lineHeight * tallestLabelHeightInLines)\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.string;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n\t\t\t\tvar offsetLeft = me.getPixelForTick(0) - me.left;\n\t\t\t\tvar offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n\t\t\t\tvar paddingLeft, paddingRight;\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tpaddingLeft = position === 'bottom' ? (cosRotation * firstLabelWidth) : (cosRotation * lineSpace);\n\t\t\t\t\tpaddingRight = position === 'bottom' ? (cosRotation * lineSpace) : (cosRotation * lastLabelWidth);\n\t\t\t\t} else {\n\t\t\t\t\tpaddingLeft = firstLabelWidth / 2;\n\t\t\t\t\tpaddingRight = lastLabelWidth / 2;\n\t\t\t\t}\n\t\t\t\tme.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\t\t\t\tme.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers$1.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers$1.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers$1.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + pixel;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + valueOffset;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar skipRatio = false;\n\t\tvar maxTicks = optionTicks.maxTicksLimit;\n\n\t\t// Total space needed to display all ticks. First and last ticks are\n\t\t// drawn as their center at end of axis, so tickCount-1\n\t\tvar ticksLength = me._tickSize() * (tickCount - 1);\n\n\t\t// Axis length\n\t\tvar axisLength = isHorizontal\n\t\t\t? me.width - (me.paddingLeft + me.paddingRight)\n\t\t\t: me.height - (me.paddingTop + me.PaddingBottom);\n\n\t\tvar result = [];\n\t\tvar i, tick;\n\n\t\tif (ticksLength > axisLength) {\n\t\t\tskipRatio = 1 + Math.floor(ticksLength / axisLength);\n\t\t}\n\n\t\t// if they defined a max number of optionTicks,\n\t\t// increase skipRatio until that number is met\n\t\tif (tickCount > maxTicks) {\n\t\t\tskipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\tif (skipRatio > 1 && i % skipRatio > 0) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_tickSize: function() {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\n\t\t// Calculate space needed by label in axis direction.\n\t\tvar rot = helpers$1.toRadians(me.labelRotation);\n\t\tvar cos = Math.abs(Math.cos(rot));\n\t\tvar sin = Math.abs(Math.sin(rot));\n\n\t\tvar padding = optionTicks.autoSkipPadding || 0;\n\t\tvar w = (me.longestLabelWidth + padding) || 0;\n\n\t\tvar tickFont = helpers$1.options._parseFont(optionTicks);\n\t\tvar h = (me._maxLabelLines * tickFont.lineHeight + padding) || 0;\n\n\t\t// Calculate space needed for 1 tick in axis direction.\n\t\treturn isHorizontal\n\t\t\t? h * cos > w * sin ? w / cos : h / sin\n\t\t\t: h * sin < w * cos ? h / cos : w / sin;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_isVisible: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar display = me.options.display;\n\t\tvar i, ilen, meta;\n\n\t\tif (display !== 'auto') {\n\t\t\treturn !!display;\n\t\t}\n\n\t\t// When 'auto', the scale is visible if at least one associated dataset is visible.\n\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Actually draw the scale on the canvas\n\t * @param {object} chartArea - the area of the chart to draw full grid lines on\n\t */\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\n\t\tif (!me._isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar chart = me.chart;\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultFontColor = globalDefaults.defaultFontColor;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\t\tvar position = options.position;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isMirrored = optionTicks.mirror;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n\t\tvar tickFont = parseFont(optionTicks);\n\t\tvar lineHeight = tickFont.lineHeight;\n\t\tvar majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n\t\tvar majorTickFont = parseFont(optionMajorTicks);\n\t\tvar tickPadding = optionTicks.padding;\n\t\tvar labelOffset = optionTicks.labelOffset;\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n\t\tvar scaleLabelFont = parseFont(scaleLabel);\n\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n\t\tvar alignPixel = helpers$1._alignPixel;\n\t\tvar borderValue, tickStart, tickEnd;\n\n\t\tif (position === 'top') {\n\t\t\tborderValue = alignPixel(chart, me.bottom, axisWidth);\n\t\t\ttickStart = me.bottom - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else if (position === 'bottom') {\n\t\t\tborderValue = alignPixel(chart, me.top, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.top + tl;\n\t\t} else if (position === 'left') {\n\t\t\tborderValue = alignPixel(chart, me.right, axisWidth);\n\t\t\ttickStart = me.right - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else {\n\t\t\tborderValue = alignPixel(chart, me.left, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.left + tl;\n\t\t}\n\n\t\tvar epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n\t\thelpers$1.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers$1.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash || [];\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n\t\t\t} else {\n\t\t\t\tlineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = gridLines.borderDash || [];\n\t\t\t\tborderDashOffset = gridLines.borderDashOffset || 0.0;\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n\t\t\tvar labelCount = helpers$1.isArray(label) ? label.length : 1;\n\t\t\tvar lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (lineValue < me.left - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tty1 = tickStart;\n\t\t\t\tty2 = tickEnd;\n\t\t\t\tlabelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\tif (position === 'top') {\n\t\t\t\t\ty1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t\ttextOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n\t\t\t\tif (lineValue < me.top - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tickStart;\n\t\t\t\ttx2 = tickEnd;\n\t\t\t\tty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tlabelY = me.getPixelForTick(index) + labelOffset;\n\t\t\t\ttextOffset = (1 - labelCount) * lineHeight / 2;\n\n\t\t\t\tif (position === 'left') {\n\t\t\t\t\tx1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\ttextAlign = isMirrored ? 'left' : 'right';\n\t\t\t\t\tlabelX = me.right - labelXOffset;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextAlign = isMirrored ? 'right' : 'left';\n\t\t\t\t\tlabelX = me.left + labelXOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextOffset: textOffset,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers$1.each(itemsToDraw, function(itemToDraw) {\n\t\t\tvar glWidth = itemToDraw.glWidth;\n\t\t\tvar glColor = itemToDraw.glColor;\n\n\t\t\tif (gridLines.display && glWidth && glColor) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = glWidth;\n\t\t\t\tcontext.strokeStyle = glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tvar y = itemToDraw.textOffset;\n\t\t\t\tif (helpers$1.isArray(label)) {\n\t\t\t\t\tfor (var i = 0; i < label.length; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, y);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.string;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (axisWidth) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tvar firstLineWidth = axisWidth;\n\t\t\tvar lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n\t\t\tvar x1, x2, y1, y2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tx1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\tx2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\ty1 = y2 = borderValue;\n\t\t\t} else {\n\t\t\t\ty1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\ty2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\tx1 = x2 = borderValue;\n\t\t\t}\n\n\t\t\tcontext.lineWidth = axisWidth;\n\t\t\tcontext.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\nvar defaultConfig = {\n\tposition: 'bottom'\n};\n\nvar scale_category = core_scale.extend({\n\t/**\n\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t* else fall back to data.labels\n\t* @private\n\t*/\n\tgetLabels: function() {\n\t\tvar data = this.chart.data;\n\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\tme.minIndex = 0;\n\t\tme.maxIndex = labels.length - 1;\n\t\tvar findIndex;\n\n\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t// user specified min value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t}\n\n\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t// user specified max value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t}\n\n\t\tme.min = labels[me.minIndex];\n\t\tme.max = labels[me.maxIndex];\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\t// If we are viewing some subset of labels, slice the original array\n\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\n\t\tif (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n\t\t\treturn me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n\t\t}\n\n\t\treturn me.ticks[index - me.minIndex];\n\t},\n\n\t// Used to get data value locations.  Value can either be an index or a numerical value\n\tgetPixelForValue: function(value, index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\t// 1 is added because we need the length but we have the indexes\n\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t// If value is a data object, then index is the index in the data array,\n\t\t// not the index of the scale. We need to change that.\n\t\tvar valueCategory;\n\t\tif (value !== undefined && value !== null) {\n\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t}\n\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\tvar labels = me.getLabels();\n\t\t\tvalue = valueCategory || value;\n\t\t\tvar idx = labels.indexOf(value);\n\t\t\tindex = idx !== -1 ? idx : index;\n\t\t}\n\n\t\tif (me.isHorizontal()) {\n\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t}\n\n\t\t\treturn me.left + widthOffset;\n\t\t}\n\t\tvar valueHeight = me.height / offsetAmt;\n\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\tif (offset) {\n\t\t\theightOffset += (valueHeight / 2);\n\t\t}\n\n\t\treturn me.top + heightOffset;\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tvar value;\n\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\tvar horz = me.isHorizontal();\n\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\tpixel -= horz ? me.left : me.top;\n\n\t\tif (offset) {\n\t\t\tpixel -= (valueDimension / 2);\n\t\t}\n\n\t\tif (pixel <= 0) {\n\t\t\tvalue = 0;\n\t\t} else {\n\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t}\n\n\t\treturn value + me.minIndex;\n\t},\n\n\tgetBasePixel: function() {\n\t\treturn this.bottom;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults = defaultConfig;\nscale_category._defaults = _defaults;\n\nvar noop = helpers$1.noop;\nvar isNullOrUndef = helpers$1.isNullOrUndef;\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar MIN_SPACING = 1e-14;\n\tvar stepSize = generationOptions.stepSize;\n\tvar unit = stepSize || 1;\n\tvar maxNumSpaces = generationOptions.maxTicks - 1;\n\tvar min = generationOptions.min;\n\tvar max = generationOptions.max;\n\tvar precision = generationOptions.precision;\n\tvar rmin = dataRange.min;\n\tvar rmax = dataRange.max;\n\tvar spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n\tvar factor, niceMin, niceMax, numSpaces;\n\n\t// Beyond MIN_SPACING floating point numbers being to lose precision\n\t// such that we can't do the math necessary to generate ticks\n\tif (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n\t\treturn [rmin, rmax];\n\t}\n\n\tnumSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\tif (numSpaces > maxNumSpaces) {\n\t\t// If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n\t\tspacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n\t}\n\n\tif (stepSize || isNullOrUndef(precision)) {\n\t\t// If a precision is not specified, calculate factor based on spacing\n\t\tfactor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n\t} else {\n\t\t// If the user specified a precision, round to that number of decimal places\n\t\tfactor = Math.pow(10, precision);\n\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t}\n\n\tniceMin = Math.floor(rmin / spacing) * spacing;\n\tniceMax = Math.ceil(rmax / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n\t\t\tniceMin = min;\n\t\t}\n\t\tif (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n\t\t\tniceMax = max;\n\t\t}\n\t}\n\n\tnumSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tniceMin = Math.round(niceMin * factor) / factor;\n\tniceMax = Math.round(niceMax * factor) / factor;\n\tticks.push(isNullOrUndef(min) ? niceMin : min);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n\t}\n\tticks.push(isNullOrUndef(max) ? niceMax : max);\n\n\treturn ticks;\n}\n\nvar scale_linearbase = core_scale.extend({\n\tgetRightValue: function(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn +value;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, value);\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t// axis, they can manually override it\n\t\tif (tickOpts.beginAtZero) {\n\t\t\tvar minSign = helpers$1.sign(me.min);\n\t\t\tvar maxSign = helpers$1.sign(me.max);\n\n\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t// move the top up to 0\n\t\t\t\tme.max = 0;\n\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t// move the bottom down to 0\n\t\t\t\tme.min = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\tif (tickOpts.min !== undefined) {\n\t\t\tme.min = tickOpts.min;\n\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t} else {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\t\t}\n\n\t\tif (tickOpts.max !== undefined) {\n\t\t\tme.max = tickOpts.max;\n\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t} else {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\t\t}\n\n\t\tif (setMin !== setMax) {\n\t\t\t// We set the min or the max but not both.\n\t\t\t// So ensure that our range is good\n\t\t\t// Inverted or 0 length range can happen when\n\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\tif (me.min >= me.max) {\n\t\t\t\tif (setMin) {\n\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (me.min === me.max) {\n\t\t\tme.max++;\n\n\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\tme.min--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar stepSize = tickOpts.stepSize;\n\t\tvar maxTicksLimit = tickOpts.maxTicksLimit;\n\t\tvar maxTicks;\n\n\t\tif (stepSize) {\n\t\t\tmaxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n\t\t} else {\n\t\t\tmaxTicks = me._computeTickLimit();\n\t\t\tmaxTicksLimit = maxTicksLimit || 11;\n\t\t}\n\n\t\tif (maxTicksLimit) {\n\t\t\tmaxTicks = Math.min(maxTicksLimit, maxTicks);\n\t\t}\n\n\t\treturn maxTicks;\n\t},\n\n\t_computeTickLimit: function() {\n\t\treturn Number.POSITIVE_INFINITY;\n\t},\n\n\thandleDirectionalChanges: noop,\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t// the graph. Make sure we always have at least 2 ticks\n\t\tvar maxTicks = me.getTickLimit();\n\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\tvar numericGeneratorOptions = {\n\t\t\tmaxTicks: maxTicks,\n\t\t\tmin: tickOpts.min,\n\t\t\tmax: tickOpts.max,\n\t\t\tprecision: tickOpts.precision,\n\t\t\tstepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\tme.handleDirectionalChanges();\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\tticks.reverse();\n\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(me);\n\t}\n});\n\nvar defaultConfig$1 = {\n\tposition: 'left',\n\tticks: {\n\t\tcallback: core_ticks.formatters.linear\n\t}\n};\n\nvar scale_linear = scale_linearbase.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar DEFAULT_MIN = 0;\n\t\tvar DEFAULT_MAX = 1;\n\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// First Calculate the range\n\t\tme.min = null;\n\t\tme.max = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Store these per type\n\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\tvar minVal = helpers$1.min(values);\n\t\t\t\tvar maxVal = helpers$1.max(values);\n\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickFont;\n\n\t\tif (me.isHorizontal()) {\n\t\t\treturn Math.ceil(me.width / 40);\n\t\t}\n\t\ttickFont = helpers$1.options._parseFont(me.options.ticks);\n\t\treturn Math.ceil(me.height / tickFont.lineHeight);\n\t},\n\n\t// Called after the ticks are built. We need\n\thandleDirectionalChanges: function() {\n\t\tif (!this.isHorizontal()) {\n\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\tthis.ticks.reverse();\n\t\t}\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\t// Utils\n\tgetPixelForValue: function(value) {\n\t\t// This must be called after fit has been run so that\n\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\tvar me = this;\n\t\tvar start = me.start;\n\n\t\tvar rightValue = +me.getRightValue(value);\n\t\tvar pixel;\n\t\tvar range = me.end - start;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t} else {\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\treturn me.start + ((me.end - me.start) * offset);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$1 = defaultConfig$1;\nscale_linear._defaults = _defaults$1;\n\nvar valueOrDefault$a = helpers$1.valueOrDefault;\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks$1(generationOptions, dataRange) {\n\tvar ticks = [];\n\n\tvar tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers$1.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers$1.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\nvar defaultConfig$2 = {\n\tposition: 'left',\n\n\t// label settings\n\tticks: {\n\t\tcallback: core_ticks.formatters.logarithmic\n\t}\n};\n\n// TODO(v3): change this to positiveOrDefault\nfunction nonNegativeOrDefault(value, defaultValue) {\n\treturn helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n}\n\nvar scale_logarithmic = core_scale.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// Calculate Range\n\t\tme.min = null;\n\t\tme.max = null;\n\t\tme.minNotZero = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\tvar minVal = helpers$1.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers$1.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar DEFAULT_MIN = 1;\n\t\tvar DEFAULT_MAX = 10;\n\n\t\tme.min = nonNegativeOrDefault(tickOpts.min, me.min);\n\t\tme.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n\t\tif (me.min === me.max) {\n\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n\t\t\t\tme.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n\t\t\t} else {\n\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t}\n\t\t}\n\t\tif (me.min === null) {\n\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n\t\t}\n\t\tif (me.max === null) {\n\t\t\tme.max = me.min !== 0\n\t\t\t\t? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)\n\t\t\t\t: DEFAULT_MAX;\n\t\t}\n\t\tif (me.minNotZero === null) {\n\t\t\tif (me.min > 0) {\n\t\t\t\tme.minNotZero = me.min;\n\t\t\t} else if (me.max < 1) {\n\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n\t\t\t} else {\n\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t}\n\t\t}\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = !me.isHorizontal();\n\n\t\tvar generationOptions = {\n\t\t\tmin: nonNegativeOrDefault(tickOpts.min),\n\t\t\tmax: nonNegativeOrDefault(tickOpts.max)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks$1(generationOptions, me);\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\treverse = !reverse;\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t\tif (reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.tickValues = this.ticks.slice();\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(this);\n\t},\n\n\t// Get the correct tooltip label\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t},\n\n\t/**\n\t * Returns the value of the first tick.\n\t * @param {number} value - The minimum not zero value.\n\t * @return {number} The first tick value.\n\t * @private\n\t */\n\t_getFirstTickValue: function(value) {\n\t\tvar exp = Math.floor(helpers$1.log10(value));\n\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\treturn significand * Math.pow(10, exp);\n\t},\n\n\tgetPixelForValue: function(value) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar offset = 0;\n\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\tvalue = +me.getRightValue(value);\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t\tsign = -1;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t\tsign = 1;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tpixel = reverse ? me.right : me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\toffset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tif (value !== 0) {\n\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t}\n\t\t\tpixel += sign * offset;\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar innerDimension, start, end, value;\n\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\tvar offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tvalue -= offset;\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tvalue *= log10(end) - log10(start);\n\t\t\tvalue /= innerDimension;\n\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t}\n\t\treturn value;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$2 = defaultConfig$2;\nscale_logarithmic._defaults = _defaults$2;\n\nvar valueOrDefault$b = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\nvar resolve$7 = helpers$1.options.resolve;\n\nvar defaultConfig$3 = {\n\tdisplay: true,\n\n\t// Boolean - Whether to animate scaling the chart from the centre\n\tanimate: true,\n\tposition: 'chartArea',\n\n\tangleLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\tgridLines: {\n\t\tcircular: false\n\t},\n\n\t// label settings\n\tticks: {\n\t\t// Boolean - Show a backdrop to the scale label\n\t\tshowLabelBackdrop: true,\n\n\t\t// String - The colour of the label backdrop\n\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t// Number - The backdrop padding above & below the label in pixels\n\t\tbackdropPaddingY: 2,\n\n\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\tbackdropPaddingX: 2,\n\n\t\tcallback: core_ticks.formatters.linear\n\t},\n\n\tpointLabels: {\n\t\t// Boolean - if true, show point labels\n\t\tdisplay: true,\n\n\t\t// Number - Point label font size in pixels\n\t\tfontSize: 10,\n\n\t\t// Function - Used to convert point labels\n\t\tcallback: function(label) {\n\t\t\treturn label;\n\t\t}\n\t}\n};\n\nfunction getValueCount(scale) {\n\tvar opts = scale.options;\n\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n}\n\nfunction getTickBackdropHeight(opts) {\n\tvar tickOpts = opts.ticks;\n\n\tif (tickOpts.display && opts.display) {\n\t\treturn valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n\t}\n\treturn 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n\tif (helpers$1.isArray(label)) {\n\t\treturn {\n\t\t\tw: helpers$1.longestText(ctx, ctx.font, label),\n\t\t\th: label.length * lineHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tw: ctx.measureText(label).width,\n\t\th: lineHeight\n\t};\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n\tif (angle === min || angle === max) {\n\t\treturn {\n\t\t\tstart: pos - (size / 2),\n\t\t\tend: pos + (size / 2)\n\t\t};\n\t} else if (angle < min || angle > max) {\n\t\treturn {\n\t\t\tstart: pos - size,\n\t\t\tend: pos\n\t\t};\n\t}\n\n\treturn {\n\t\tstart: pos,\n\t\tend: pos + size\n\t};\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n\t// Right, this is really confusing and there is a lot of maths going on here\n\t// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t//\n\t// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t//\n\t// Solution:\n\t//\n\t// We assume the radius of the polygon is half the size of the canvas at first\n\t// at each index we check if the text overlaps.\n\t//\n\t// Where it does, we store that angle and that index.\n\t//\n\t// After finding the largest index and angle we calculate how much we need to remove\n\t// from the shape radius to move the point inwards by that x.\n\t//\n\t// We average the left and right distances to get the maximum shape radius that can fit in the box\n\t// along with labels.\n\t//\n\t// Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t// on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t//\n\t// This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t// and position it in the most space efficient manner\n\t//\n\t// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n\tvar plFont = helpers$1.options._parseFont(scale.options.pointLabels);\n\n\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\tvar furthestLimits = {\n\t\tl: 0,\n\t\tr: scale.width,\n\t\tt: 0,\n\t\tb: scale.height - scale.paddingTop\n\t};\n\tvar furthestAngles = {};\n\tvar i, textSize, pointPosition;\n\n\tscale.ctx.font = plFont.string;\n\tscale._pointLabelSizes = [];\n\n\tvar valueCount = getValueCount(scale);\n\tfor (i = 0; i < valueCount; i++) {\n\t\tpointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n\t\ttextSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\tvar angle = helpers$1.toDegrees(angleRadians) % 360;\n\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\tfurthestAngles.l = angleRadians;\n\t\t}\n\n\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\tfurthestAngles.r = angleRadians;\n\t\t}\n\n\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\tfurthestAngles.t = angleRadians;\n\t\t}\n\n\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\tfurthestAngles.b = angleRadians;\n\t\t}\n\t}\n\n\tscale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n}\n\nfunction getTextAlignForAngle(angle) {\n\tif (angle === 0 || angle === 180) {\n\t\treturn 'center';\n\t} else if (angle < 180) {\n\t\treturn 'left';\n\t}\n\n\treturn 'right';\n}\n\nfunction fillText(ctx, text, position, lineHeight) {\n\tvar y = position.y + lineHeight / 2;\n\tvar i, ilen;\n\n\tif (helpers$1.isArray(text)) {\n\t\tfor (i = 0, ilen = text.length; i < ilen; ++i) {\n\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\ty += lineHeight;\n\t\t}\n\t} else {\n\t\tctx.fillText(text, position.x, y);\n\t}\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\tif (angle === 90 || angle === 270) {\n\t\tposition.y -= (textSize.h / 2);\n\t} else if (angle > 270 || angle < 90) {\n\t\tposition.y -= textSize.h;\n\t}\n}\n\nfunction drawPointLabels(scale) {\n\tvar ctx = scale.ctx;\n\tvar opts = scale.options;\n\tvar angleLineOpts = opts.angleLines;\n\tvar gridLineOpts = opts.gridLines;\n\tvar pointLabelOpts = opts.pointLabels;\n\tvar lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n\tvar lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n\tvar tickBackdropHeight = getTickBackdropHeight(opts);\n\n\tctx.save();\n\tctx.lineWidth = lineWidth;\n\tctx.strokeStyle = lineColor;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n\t\tctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n\t}\n\n\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t// Point Label Font\n\tvar plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n\tctx.font = plFont.string;\n\tctx.textBaseline = 'middle';\n\n\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\tif (angleLineOpts.display && lineWidth && lineColor) {\n\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tif (pointLabelOpts.display) {\n\t\t\t// Extra pixels out for some label spacing\n\t\t\tvar extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers$1.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n\t\t}\n\t}\n\tctx.restore();\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\tvar ctx = scale.ctx;\n\tvar circular = gridLineOpts.circular;\n\tvar valueCount = getValueCount(scale);\n\tvar lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n\tvar lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n\tvar pointPosition;\n\n\tif ((!circular && !valueCount) || !lineColor || !lineWidth) {\n\t\treturn;\n\t}\n\n\tctx.save();\n\tctx.strokeStyle = lineColor;\n\tctx.lineWidth = lineWidth;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(gridLineOpts.borderDash || []);\n\t\tctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n\t}\n\n\tctx.beginPath();\n\tif (circular) {\n\t\t// Draw circular arcs between the points\n\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t} else {\n\t\t// Draw straight lines connecting each index\n\t\tpointPosition = scale.getPointPosition(0, radius);\n\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t}\n\t}\n\tctx.closePath();\n\tctx.stroke();\n\tctx.restore();\n}\n\nfunction numberOrZero(param) {\n\treturn helpers$1.isNumber(param) ? param : 0;\n}\n\nvar scale_radialLinear = scale_linearbase.extend({\n\tsetDimensions: function() {\n\t\tvar me = this;\n\n\t\t// Set the unconstrained dimension before label rotation\n\t\tme.width = me.maxWidth;\n\t\tme.height = me.maxHeight;\n\t\tme.paddingTop = getTickBackdropHeight(me.options) / 2;\n\t\tme.xCenter = Math.floor(me.width / 2);\n\t\tme.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n\t\tme.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar min = Number.POSITIVE_INFINITY;\n\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\thelpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tme.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\treturn Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\n\t\tscale_linearbase.prototype.convertTicksToLabels.call(me);\n\n\t\t// Point labels\n\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display && opts.pointLabels.display) {\n\t\t\tfitWithPointLabels(me);\n\t\t} else {\n\t\t\tme.setCenterPoint(0, 0, 0, 0);\n\t\t}\n\t},\n\n\t/**\n\t * Set radius reductions and determine new radius and center point\n\t * @private\n\t */\n\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\tvar me = this;\n\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n\n\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\tme.drawingArea = Math.min(\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t},\n\n\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\tvar me = this;\n\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\tvar maxTop = topMovement + me.drawingArea;\n\t\tvar maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n\n\t\tme.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n\t\tme.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n\t},\n\n\tgetIndexAngle: function(index) {\n\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\tthis.chart.options.startAngle :\n\t\t\t0;\n\n\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\treturn index * angleMultiplier + startAngleRadians;\n\t},\n\n\tgetDistanceFromCenterForValue: function(value) {\n\t\tvar me = this;\n\n\t\tif (value === null) {\n\t\t\treturn 0; // null always in center\n\t\t}\n\n\t\t// Take into account half font size + the yPadding of the top value\n\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\tif (me.options.ticks.reverse) {\n\t\t\treturn (me.max - value) * scalingFactor;\n\t\t}\n\t\treturn (value - me.min) * scalingFactor;\n\t},\n\n\tgetPointPosition: function(index, distanceFromCenter) {\n\t\tvar me = this;\n\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\treturn {\n\t\t\tx: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n\t\t\ty: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n\t\t};\n\t},\n\n\tgetPointPositionForValue: function(index, value) {\n\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t},\n\n\tgetBasePosition: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.getPointPositionForValue(0,\n\t\t\tme.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0);\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar tickOpts = opts.ticks;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar startAngle = this.getIndexAngle(0);\n\t\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\n\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\tdrawPointLabels(me);\n\t\t\t}\n\n\t\t\thelpers$1.each(me.ticks, function(label, index) {\n\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\tvar tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n\t\t\t\t\t\tctx.font = tickFont.string;\n\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t-yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\ttickFont.size + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$3 = defaultConfig$3;\nscale_radialLinear._defaults = _defaults$3;\n\nvar valueOrDefault$c = helpers$1.valueOrDefault;\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate$1(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\nfunction toTimestamp(scale, input) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options.time;\n\tvar parser = options.parser;\n\tvar format = parser || options.format;\n\tvar value = input;\n\n\tif (typeof parser === 'function') {\n\t\tvalue = parser(value);\n\t}\n\n\t// Only parse if its not a timestamp already\n\tif (!helpers$1.isFinite(value)) {\n\t\tvalue = typeof format === 'string'\n\t\t\t? adapter.parse(value, format)\n\t\t\t: adapter.parse(value);\n\t}\n\n\tif (value !== null) {\n\t\treturn +value;\n\t}\n\n\t// Labels are in an incompatible format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option for parsing.\n\tif (!parser && typeof format === 'function') {\n\t\tvalue = format(input);\n\n\t\t// `format` could return something else than a timestamp, if so, parse it\n\t\tif (!helpers$1.isFinite(value)) {\n\t\t\tvalue = adapter.parse(value);\n\t\t}\n\t}\n\n\treturn value;\n}\n\nfunction parse(scale, input) {\n\tif (helpers$1.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = toTimestamp(scale, scale.getRightValue(input));\n\tif (value === null) {\n\t\treturn value;\n\t}\n\n\tif (options.round) {\n\t\tvalue = +scale._adapter.startOf(value, options.round);\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(scale, min, max, capacity) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options;\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = min;\n\tvar last = max;\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = +adapter.startOf(first, 'isoWeek', weekday);\n\t\tlast = +adapter.startOf(last, 'isoWeek', weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = +adapter.startOf(first, weekday ? 'day' : minor);\n\tlast = +adapter.startOf(last, weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast = +adapter.add(last, 1, minor);\n\t}\n\n\ttime = first;\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime = +adapter.startOf(time, major);\n\t\ttime = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time = +adapter.add(time, stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the start and end offsets from edges in the form of {start, end}\n * where each value is a relative width to the scale and ranges between 0 and 1.\n * They add extra margins on the both sides by scaling down the original scale.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar start = 0;\n\tvar end = 0;\n\tvar first, last;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tfirst = interpolate$1(table, 'time', ticks[0], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tstart = 1 - first;\n\t\t\t} else {\n\t\t\t\tstart = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n\t\t\t}\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tlast = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tend = last;\n\t\t\t} else {\n\t\t\t\tend = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {start: start, end: end};\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nvar defaultConfig$4 = {\n\tposition: 'bottom',\n\n\t/**\n\t * Data distribution along the scale:\n\t * - 'linear': data are spread according to their time (distances can vary),\n\t * - 'series': data are spread at the same distance from each other.\n\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t * @since 2.7.0\n\t */\n\tdistribution: 'linear',\n\n\t/**\n\t * Scale boundary strategy (bypassed by min/max time options)\n\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t * @since 2.7.0\n\t */\n\tbounds: 'data',\n\n\tadapters: {},\n\ttime: {\n\t\tparser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\tround: false, // none, or override with week, month, year, etc.\n\t\tdisplayFormat: false, // DEPRECATED\n\t\tisoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n\t\tminUnit: 'millisecond',\n\t\tdisplayFormats: {}\n\t},\n\tticks: {\n\t\tautoSkip: false,\n\n\t\t/**\n\t\t * Ticks generation input values:\n\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tsource: 'auto',\n\n\t\tmajor: {\n\t\t\tenabled: false\n\t\t}\n\t}\n};\n\nvar scale_time = core_scale.extend({\n\tinitialize: function() {\n\t\tthis.mergeTicksOptions();\n\t\tcore_scale.prototype.initialize.call(this);\n\t},\n\n\tupdate: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar time = options.time || (options.time = {});\n\t\tvar adapter = me._adapter = new core_adapters._date(options.adapters.date);\n\n\t\t// DEPRECATIONS: output a message only one time per update\n\t\tif (time.format) {\n\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t}\n\n\t\t// Backward compatibility: before introducing adapter, `displayFormats` was\n\t\t// supposed to contain *all* unit/string pairs but this can't be resolved\n\t\t// when loading the scale (adapters are loaded afterward), so let's populate\n\t\t// missing formats on update\n\t\thelpers$1.mergeIf(time.displayFormats, adapter.formats());\n\n\t\treturn core_scale.prototype.update.apply(me, arguments);\n\t},\n\n\t/**\n\t * Allows data to be referenced via 't' attribute\n\t */\n\tgetRightValue: function(rawValue) {\n\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\trawValue = rawValue.t;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, rawValue);\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar adapter = me._adapter;\n\t\tvar timeOpts = me.options.time;\n\t\tvar unit = timeOpts.unit || 'day';\n\t\tvar min = MAX_INTEGER;\n\t\tvar max = MIN_INTEGER;\n\t\tvar timestamps = [];\n\t\tvar datasets = [];\n\t\tvar labels = [];\n\t\tvar i, j, ilen, jlen, data, timestamp;\n\t\tvar dataLabels = chart.data.labels || [];\n\n\t\t// Convert labels to timestamps\n\t\tfor (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n\t\t\tlabels.push(parse(me, dataLabels[i]));\n\t\t}\n\n\t\t// Convert data to timestamps\n\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\tif (helpers$1.isObject(data[0])) {\n\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamp = parse(me, data[j]);\n\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (j = 0, jlen = labels.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamps.push(labels[j]);\n\t\t\t\t\t}\n\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdatasets[i] = [];\n\t\t\t}\n\t\t}\n\n\t\tif (labels.length) {\n\t\t\t// Sort labels **after** data have been converted\n\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\tmin = Math.min(min, labels[0]);\n\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t}\n\n\t\tif (timestamps.length) {\n\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t}\n\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\tmin = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n\t\tmax = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;\n\n\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\tme.min = Math.min(min, max);\n\t\tme.max = Math.max(min + 1, max);\n\n\t\t// PRIVATE\n\t\tme._horizontal = me.isHorizontal();\n\t\tme._table = [];\n\t\tme._timestamps = {\n\t\t\tdata: timestamps,\n\t\t\tdatasets: datasets,\n\t\t\tlabels: labels\n\t\t};\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\t\tvar options = me.options;\n\t\tvar timeOpts = options.time;\n\t\tvar timestamps = [];\n\t\tvar ticks = [];\n\t\tvar i, ilen, timestamp;\n\n\t\tswitch (options.ticks.source) {\n\t\tcase 'data':\n\t\t\ttimestamps = me._timestamps.data;\n\t\t\tbreak;\n\t\tcase 'labels':\n\t\t\ttimestamps = me._timestamps.labels;\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\tdefault:\n\t\t\ttimestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n\t\t}\n\n\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\tmin = timestamps[0];\n\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t}\n\n\t\t// Enforce limits with user min/max options\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// Remove ticks outside the min/max range\n\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\ttimestamp = timestamps[i];\n\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\tticks.push(timestamp);\n\t\t\t}\n\t\t}\n\n\t\tme.min = min;\n\t\tme.max = max;\n\n\t\t// PRIVATE\n\t\tme._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n\t\tif (options.ticks.reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\n\t\treturn ticksFromTimestamps(me, ticks, me._majorUnit);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar data = me.chart.data;\n\t\tvar timeOpts = me.options.time;\n\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\tif (helpers$1.isObject(value)) {\n\t\t\tlabel = me.getRightValue(value);\n\t\t}\n\t\tif (timeOpts.tooltipFormat) {\n\t\t\treturn adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n\t\t}\n\t\tif (typeof label === 'string') {\n\t\t\treturn label;\n\t\t}\n\t\treturn adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n\t},\n\n\t/**\n\t * Function to format an individual tick mark\n\t * @private\n\t */\n\ttickFormatFunction: function(time, index, ticks, format) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar options = me.options;\n\t\tvar formats = options.time.displayFormats;\n\t\tvar minorFormat = formats[me._unit];\n\t\tvar majorUnit = me._majorUnit;\n\t\tvar majorFormat = formats[majorUnit];\n\t\tvar majorTime = +adapter.startOf(time, majorUnit);\n\t\tvar majorTickOpts = options.ticks.major;\n\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\tvar label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\tvar formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n\n\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t},\n\n\tconvertTicksToLabels: function(ticks) {\n\t\tvar labels = [];\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\tlabels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n\t\t}\n\n\t\treturn labels;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetPixelForOffset: function(time) {\n\t\tvar me = this;\n\t\tvar isReverse = me.options.ticks.reverse;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n\t\tvar pos = interpolate$1(me._table, 'time', time, 'pos');\n\t\tvar offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n\n\t\treturn isReverse ? start - offset : start + offset;\n\t},\n\n\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar time = null;\n\n\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t}\n\n\t\tif (time === null) {\n\t\t\ttime = parse(me, value);\n\t\t}\n\n\t\tif (time !== null) {\n\t\t\treturn me.getPixelForOffset(time);\n\t\t}\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\tvar ticks = this.getTicks();\n\t\treturn index >= 0 && index < ticks.length ?\n\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\tnull;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? me.left : me.top;\n\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n\t\tvar time = interpolate$1(me._table, 'pos', pos, 'time');\n\n\t\t// DEPRECATION, we should return time directly\n\t\treturn me._adapter._create(time);\n\t},\n\n\t/**\n\t * Crude approximation of what the label width might be\n\t * @private\n\t */\n\tgetLabelWidth: function(label) {\n\t\tvar me = this;\n\t\tvar ticksOpts = me.options.ticks;\n\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\tvar angle = helpers$1.toRadians(ticksOpts.maxRotation);\n\t\tvar cosRotation = Math.cos(angle);\n\t\tvar sinRotation = Math.sin(angle);\n\t\tvar tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n\n\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetLabelCapacity: function(exampleTime) {\n\t\tvar me = this;\n\n\t\t// pick the longest format (milliseconds) for guestimation\n\t\tvar format = me.options.time.displayFormats.millisecond;\n\t\tvar exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\n\t\treturn capacity > 0 ? capacity : 1;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$4 = defaultConfig$4;\nscale_time._defaults = _defaults$4;\n\nvar scales = {\n\tcategory: scale_category,\n\tlinear: scale_linear,\n\tlogarithmic: scale_logarithmic,\n\tradialLinear: scale_radialLinear,\n\ttime: scale_time\n};\n\nvar FORMATS = {\n\tdatetime: 'MMM D, YYYY, h:mm:ss a',\n\tmillisecond: 'h:mm:ss.SSS a',\n\tsecond: 'h:mm:ss a',\n\tminute: 'h:mm a',\n\thour: 'hA',\n\tday: 'MMM D',\n\tweek: 'll',\n\tmonth: 'MMM YYYY',\n\tquarter: '[Q]Q - YYYY',\n\tyear: 'YYYY'\n};\n\ncore_adapters._date.override(typeof moment === 'function' ? {\n\t_id: 'moment', // DEBUG ONLY\n\n\tformats: function() {\n\t\treturn FORMATS;\n\t},\n\n\tparse: function(value, format) {\n\t\tif (typeof value === 'string' && typeof format === 'string') {\n\t\t\tvalue = moment(value, format);\n\t\t} else if (!(value instanceof moment)) {\n\t\t\tvalue = moment(value);\n\t\t}\n\t\treturn value.isValid() ? value.valueOf() : null;\n\t},\n\n\tformat: function(time, format) {\n\t\treturn moment(time).format(format);\n\t},\n\n\tadd: function(time, amount, unit) {\n\t\treturn moment(time).add(amount, unit).valueOf();\n\t},\n\n\tdiff: function(max, min, unit) {\n\t\treturn moment.duration(moment(max).diff(moment(min))).as(unit);\n\t},\n\n\tstartOf: function(time, unit, weekday) {\n\t\ttime = moment(time);\n\t\tif (unit === 'isoWeek') {\n\t\t\treturn time.isoWeekday(weekday).valueOf();\n\t\t}\n\t\treturn time.startOf(unit).valueOf();\n\t},\n\n\tendOf: function(time, unit) {\n\t\treturn moment(time).endOf(unit).valueOf();\n\t},\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility with scale.getValueForPixel().\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(time) {\n\t\treturn moment(time);\n\t},\n} : {});\n\ncore_defaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (helpers$1.isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nvar plugin_filler = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || core_defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers$1.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers$1.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\nvar noop$1 = helpers$1.noop;\nvar valueOrDefault$d = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\t\tonLeave: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param {object} labelopts - the label options on the legend\n * @param {number} fontSize - the label font size\n * @return {number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n\t\tfontSize :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = core_element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers$1.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t/**\n \t\t * @private\n \t\t */\n\t\tthis._hoveredItem = null;\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop$1,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop$1,\n\n\t//\n\n\tbeforeSetDimensions: noop$1,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$1,\n\n\t//\n\n\tbeforeBuildLabels: noop$1,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop$1,\n\n\t//\n\n\tbeforeFit: noop$1,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\tvar fontSize = labelFont.size;\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + labelOpts.padding;\n\t\t\t\t\t\tlineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop$1,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor;\n\t\tvar lineDefault = globalDefaults.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\t\tvar fontSize = labelFont.size;\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tvar lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = lineWidth;\n\t\t\t\tctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = boxWidth * Math.SQRT2 / 2;\n\t\t\t\t\tvar centerX = x + boxWidth / 2;\n\t\t\t\t\tvar centerY = y + fontSize / 2;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (lineWidth !== 0) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2) + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\t// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n\t\t\t\t// instead of me.right and me.bottom because me.width and me.height\n\t\t\t\t// may have been changed since me.minSize was calculated\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2) + labelOpts.padding;\n\t\t\t\t\t}\n\t\t\t\t} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + labelOpts.padding;\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getLegendItemAt: function(x, y) {\n\t\tvar me = this;\n\t\tvar i, hitBox, lh;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tlh = me.legendHitBoxes;\n\t\t\tfor (i = 0; i < lh.length; ++i) {\n\t\t\t\thitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\treturn me.legendItems[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar hoveredItem;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover && !opts.onLeave) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\thoveredItem = me._getLegendItemAt(e.x, e.y);\n\n\t\tif (type === 'click') {\n\t\t\tif (hoveredItem && opts.onClick) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onClick.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t} else {\n\t\t\tif (opts.onLeave && hoveredItem !== me._hoveredItem) {\n\t\t\t\tif (me._hoveredItem) {\n\t\t\t\t\topts.onLeave.call(me, e.native, me._hoveredItem);\n\t\t\t\t}\n\t\t\t\tme._hoveredItem = hoveredItem;\n\t\t\t}\n\n\t\t\tif (opts.onHover && hoveredItem) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onHover.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, legend, legendOpts);\n\tcore_layouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nvar plugin_legend = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tcore_layouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tcore_layouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\nvar noop$2 = helpers$1.noop;\n\ncore_defaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = core_element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers$1.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop$2,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop$2,\n\n\t//\n\n\tbeforeSetDimensions: noop$2,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$2,\n\n\t//\n\n\tbeforeBuildLabels: noop$2,\n\tbuildLabels: noop$2,\n\tafterBuildLabels: noop$2,\n\n\t//\n\n\tbeforeFit: noop$2,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\tvar textSize = display ? (lineCount * fontOpts.lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop$2,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display) {\n\t\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\t\tvar lineHeight = fontOpts.lineHeight;\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\t\t\tctx.font = fontOpts.string;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers$1.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, title, titleOpts);\n\tcore_layouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nvar plugin_title = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tcore_layouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tcore_layouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\nvar plugins = {};\nvar filler = plugin_filler;\nvar legend = plugin_legend;\nvar title = plugin_title;\nplugins.filler = filler;\nplugins.legend = legend;\nplugins.title = title;\n\n/**\n * @namespace Chart\n */\n\n\ncore_controller.helpers = helpers$1;\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\ncore_helpers(core_controller);\n\ncore_controller._adapters = core_adapters;\ncore_controller.Animation = core_animation;\ncore_controller.animationService = core_animations;\ncore_controller.controllers = controllers;\ncore_controller.DatasetController = core_datasetController;\ncore_controller.defaults = core_defaults;\ncore_controller.Element = core_element;\ncore_controller.elements = elements;\ncore_controller.Interaction = core_interaction;\ncore_controller.layouts = core_layouts;\ncore_controller.platform = platform;\ncore_controller.plugins = core_plugins;\ncore_controller.Scale = core_scale;\ncore_controller.scaleService = core_scaleService;\ncore_controller.Ticks = core_ticks;\ncore_controller.Tooltip = core_tooltip;\n\n// Register built-in scales\n\ncore_controller.helpers.each(scales, function(scale, type) {\n\tcore_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n});\n\n// Load to register built-in adapters (as side effects)\n\n\n// Loading built-in plugins\n\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tcore_controller.plugins.register(plugins[k]);\n\t}\n}\n\ncore_controller.platform.initialize();\n\nvar src = core_controller;\nif (typeof window !== 'undefined') {\n\twindow.Chart = core_controller;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Chart\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.Chart = core_controller;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.pluginService = core_controller.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.PluginBase = core_controller.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.canvasHelpers = core_controller.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.7.3\n * @todo remove at version 3\n * @private\n */\ncore_controller.layoutService = core_controller.layouts;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.LinearScaleBase\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\ncore_controller.LinearScaleBase = scale_linearbase;\n\n/**\n * Provided for backward compatibility, instead we should create a new Chart\n * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n */\ncore_controller.helpers.each(\n\t[\n\t\t'Bar',\n\t\t'Bubble',\n\t\t'Doughnut',\n\t\t'Line',\n\t\t'PolarArea',\n\t\t'Radar',\n\t\t'Scatter'\n\t],\n\tfunction(klass) {\n\t\tcore_controller[klass] = function(ctx, cfg) {\n\t\t\treturn new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n\t\t\t\ttype: klass.charAt(0).toLowerCase() + klass.slice(1)\n\t\t\t}));\n\t\t};\n\t}\n);\n\nreturn src;\n\n})));\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enCa = moment.defineLocale('en-ca', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'YYYY-MM-DD',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY h:mm A',\n            LLLL : 'dddd, MMMM D, YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    return enCa;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enGb = moment.defineLocale('en-gb', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enGb;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    function relativeTimeMr(number, withoutSuffix, string, isFuture)\n    {\n        var output = '';\n        if (withoutSuffix) {\n            switch (string) {\n                case 's': output = 'काही सेकंद'; break;\n                case 'ss': output = '%d सेकंद'; break;\n                case 'm': output = 'एक मिनिट'; break;\n                case 'mm': output = '%d मिनिटे'; break;\n                case 'h': output = 'एक तास'; break;\n                case 'hh': output = '%d तास'; break;\n                case 'd': output = 'एक दिवस'; break;\n                case 'dd': output = '%d दिवस'; break;\n                case 'M': output = 'एक महिना'; break;\n                case 'MM': output = '%d महिने'; break;\n                case 'y': output = 'एक वर्ष'; break;\n                case 'yy': output = '%d वर्षे'; break;\n            }\n        }\n        else {\n            switch (string) {\n                case 's': output = 'काही सेकंदां'; break;\n                case 'ss': output = '%d सेकंदां'; break;\n                case 'm': output = 'एका मिनिटा'; break;\n                case 'mm': output = '%d मिनिटां'; break;\n                case 'h': output = 'एका तासा'; break;\n                case 'hh': output = '%d तासां'; break;\n                case 'd': output = 'एका दिवसा'; break;\n                case 'dd': output = '%d दिवसां'; break;\n                case 'M': output = 'एका महिन्या'; break;\n                case 'MM': output = '%d महिन्यां'; break;\n                case 'y': output = 'एका वर्षा'; break;\n                case 'yy': output = '%d वर्षां'; break;\n            }\n        }\n        return output.replace(/%d/i, number);\n    }\n\n    var mr = moment.defineLocale('mr', {\n        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),\n        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm वाजता',\n            LTS : 'A h:mm:ss वाजता',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm वाजता',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[उद्या] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[काल] LT',\n            lastWeek: '[मागील] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future: '%sमध्ये',\n            past: '%sपूर्वी',\n            s: relativeTimeMr,\n            ss: relativeTimeMr,\n            m: relativeTimeMr,\n            mm: relativeTimeMr,\n            h: relativeTimeMr,\n            hh: relativeTimeMr,\n            d: relativeTimeMr,\n            dd: relativeTimeMr,\n            M: relativeTimeMr,\n            MM: relativeTimeMr,\n            y: relativeTimeMr,\n            yy: relativeTimeMr\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'रात्री') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सकाळी') {\n                return hour;\n            } else if (meridiem === 'दुपारी') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'सायंकाळी') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात्री';\n            } else if (hour < 10) {\n                return 'सकाळी';\n            } else if (hour < 17) {\n                return 'दुपारी';\n            } else if (hour < 20) {\n                return 'सायंकाळी';\n            } else {\n                return 'रात्री';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return mr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    var ne = moment.defineLocale('ne', {\n        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),\n        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),\n        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),\n        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'Aको h:mm बजे',\n            LTS : 'Aको h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, Aको h:mm बजे',\n            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'राति') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'बिहान') {\n                return hour;\n            } else if (meridiem === 'दिउँसो') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'साँझ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 3) {\n                return 'राति';\n            } else if (hour < 12) {\n                return 'बिहान';\n            } else if (hour < 16) {\n                return 'दिउँसो';\n            } else if (hour < 20) {\n                return 'साँझ';\n            } else {\n                return 'राति';\n            }\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[भोलि] LT',\n            nextWeek : '[आउँदो] dddd[,] LT',\n            lastDay : '[हिजो] LT',\n            lastWeek : '[गएको] dddd[,] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%sमा',\n            past : '%s अगाडि',\n            s : 'केही क्षण',\n            ss : '%d सेकेण्ड',\n            m : 'एक मिनेट',\n            mm : '%d मिनेट',\n            h : 'एक घण्टा',\n            hh : '%d घण्टा',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महिना',\n            MM : '%d महिना',\n            y : 'एक बर्ष',\n            yy : '%d बर्ष'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return ne;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        0: '-ум',\n        1: '-ум',\n        2: '-юм',\n        3: '-юм',\n        4: '-ум',\n        5: '-ум',\n        6: '-ум',\n        7: '-ум',\n        8: '-ум',\n        9: '-ум',\n        10: '-ум',\n        12: '-ум',\n        13: '-ум',\n        20: '-ум',\n        30: '-юм',\n        40: '-ум',\n        50: '-ум',\n        60: '-ум',\n        70: '-ум',\n        80: '-ум',\n        90: '-ум',\n        100: '-ум'\n    };\n\n    var tg = moment.defineLocale('tg', {\n        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),\n        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),\n        weekdaysShort : 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),\n        weekdaysMin : 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Имрӯз соати] LT',\n            nextDay : '[Пагоҳ соати] LT',\n            lastDay : '[Дирӯз соати] LT',\n            nextWeek : 'dddd[и] [ҳафтаи оянда соати] LT',\n            lastWeek : 'dddd[и] [ҳафтаи гузашта соати] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'баъди %s',\n            past : '%s пеш',\n            s : 'якчанд сония',\n            m : 'як дақиқа',\n            mm : '%d дақиқа',\n            h : 'як соат',\n            hh : '%d соат',\n            d : 'як рӯз',\n            dd : '%d рӯз',\n            M : 'як моҳ',\n            MM : '%d моҳ',\n            y : 'як сол',\n            yy : '%d сол'\n        },\n        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'шаб') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'субҳ') {\n                return hour;\n            } else if (meridiem === 'рӯз') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'бегоҳ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'шаб';\n            } else if (hour < 11) {\n                return 'субҳ';\n            } else if (hour < 16) {\n                return 'рӯз';\n            } else if (hour < 19) {\n                return 'бегоҳ';\n            } else {\n                return 'шаб';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ум|юм)/,\n        ordinal: function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1th is the first week of the year.\n        }\n    });\n\n    return tg;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),\n        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n\n    var monthsParse = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i];\n    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n    // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n    var monthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;\n\n    function plural(n) {\n        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':  // a few seconds / in a few seconds / a few seconds ago\n                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'sekundy' : 'sekund');\n                } else {\n                    return result + 'sekundami';\n                }\n                break;\n            case 'm':  // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'minuty' : 'minut');\n                } else {\n                    return result + 'minutami';\n                }\n                break;\n            case 'h':  // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'hodiny' : 'hodin');\n                } else {\n                    return result + 'hodinami';\n                }\n                break;\n            case 'd':  // a day / in a day / a day ago\n                return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'dny' : 'dní');\n                } else {\n                    return result + 'dny';\n                }\n                break;\n            case 'M':  // a month / in a month / a month ago\n                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'měsíce' : 'měsíců');\n                } else {\n                    return result + 'měsíci';\n                }\n                break;\n            case 'y':  // a year / in a year / a year ago\n                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'roky' : 'let');\n                } else {\n                    return result + 'lety';\n                }\n                break;\n        }\n    }\n\n    var cs = moment.defineLocale('cs', {\n        months : months,\n        monthsShort : monthsShort,\n        monthsRegex : monthsRegex,\n        monthsShortRegex : monthsRegex,\n        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n        monthsStrictRegex : /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,\n        monthsShortStrictRegex : /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),\n        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd D. MMMM YYYY H:mm',\n            l : 'D. M. YYYY'\n        },\n        calendar : {\n            sameDay: '[dnes v] LT',\n            nextDay: '[zítra v] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [v] LT';\n                    case 3:\n                        return '[ve středu v] LT';\n                    case 4:\n                        return '[ve čtvrtek v] LT';\n                    case 5:\n                        return '[v pátek v] LT';\n                    case 6:\n                        return '[v sobotu v] LT';\n                }\n            },\n            lastDay: '[včera v] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulou neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[minulé] dddd [v] LT';\n                    case 3:\n                        return '[minulou středu v] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [v] LT';\n                    case 6:\n                        return '[minulou sobotu v] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'před %s',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return cs;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '௧',\n        '2': '௨',\n        '3': '௩',\n        '4': '௪',\n        '5': '௫',\n        '6': '௬',\n        '7': '௭',\n        '8': '௮',\n        '9': '௯',\n        '0': '௦'\n    }, numberMap = {\n        '௧': '1',\n        '௨': '2',\n        '௩': '3',\n        '௪': '4',\n        '௫': '5',\n        '௬': '6',\n        '௭': '7',\n        '௮': '8',\n        '௯': '9',\n        '௦': '0'\n    };\n\n    var ta = moment.defineLocale('ta', {\n        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),\n        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),\n        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, HH:mm',\n            LLLL : 'dddd, D MMMM YYYY, HH:mm'\n        },\n        calendar : {\n            sameDay : '[இன்று] LT',\n            nextDay : '[நாளை] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[நேற்று] LT',\n            lastWeek : '[கடந்த வாரம்] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s இல்',\n            past : '%s முன்',\n            s : 'ஒரு சில விநாடிகள்',\n            ss : '%d விநாடிகள்',\n            m : 'ஒரு நிமிடம்',\n            mm : '%d நிமிடங்கள்',\n            h : 'ஒரு மணி நேரம்',\n            hh : '%d மணி நேரம்',\n            d : 'ஒரு நாள்',\n            dd : '%d நாட்கள்',\n            M : 'ஒரு மாதம்',\n            MM : '%d மாதங்கள்',\n            y : 'ஒரு வருடம்',\n            yy : '%d ஆண்டுகள்'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}வது/,\n        ordinal : function (number) {\n            return number + 'வது';\n        },\n        preparse: function (string) {\n            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // refer http://ta.wikipedia.org/s/1er1\n        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 2) {\n                return ' யாமம்';\n            } else if (hour < 6) {\n                return ' வைகறை';  // வைகறை\n            } else if (hour < 10) {\n                return ' காலை'; // காலை\n            } else if (hour < 14) {\n                return ' நண்பகல்'; // நண்பகல்\n            } else if (hour < 18) {\n                return ' எற்பாடு'; // எற்பாடு\n            } else if (hour < 22) {\n                return ' மாலை'; // மாலை\n            } else {\n                return ' யாமம்';\n            }\n        },\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'யாமம்') {\n                return hour < 2 ? hour : hour + 12;\n            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {\n                return hour;\n            } else if (meridiem === 'நண்பகல்') {\n                return hour >= 10 ? hour : hour + 12;\n            } else {\n                return hour + 12;\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return ta;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '೧',\n        '2': '೨',\n        '3': '೩',\n        '4': '೪',\n        '5': '೫',\n        '6': '೬',\n        '7': '೭',\n        '8': '೮',\n        '9': '೯',\n        '0': '೦'\n    },\n    numberMap = {\n        '೧': '1',\n        '೨': '2',\n        '೩': '3',\n        '೪': '4',\n        '೫': '5',\n        '೬': '6',\n        '೭': '7',\n        '೮': '8',\n        '೯': '9',\n        '೦': '0'\n    };\n\n    var kn = moment.defineLocale('kn', {\n        months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),\n        monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),\n        weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),\n        weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[ಇಂದು] LT',\n            nextDay : '[ನಾಳೆ] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[ನಿನ್ನೆ] LT',\n            lastWeek : '[ಕೊನೆಯ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ನಂತರ',\n            past : '%s ಹಿಂದೆ',\n            s : 'ಕೆಲವು ಕ್ಷಣಗಳು',\n            ss : '%d ಸೆಕೆಂಡುಗಳು',\n            m : 'ಒಂದು ನಿಮಿಷ',\n            mm : '%d ನಿಮಿಷ',\n            h : 'ಒಂದು ಗಂಟೆ',\n            hh : '%d ಗಂಟೆ',\n            d : 'ಒಂದು ದಿನ',\n            dd : '%d ದಿನ',\n            M : 'ಒಂದು ತಿಂಗಳು',\n            MM : '%d ತಿಂಗಳು',\n            y : 'ಒಂದು ವರ್ಷ',\n            yy : '%d ವರ್ಷ'\n        },\n        preparse: function (string) {\n            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ರಾತ್ರಿ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {\n                return hour;\n            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ಸಂಜೆ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ರಾತ್ರಿ';\n            } else if (hour < 10) {\n                return 'ಬೆಳಿಗ್ಗೆ';\n            } else if (hour < 17) {\n                return 'ಮಧ್ಯಾಹ್ನ';\n            } else if (hour < 20) {\n                return 'ಸಂಜೆ';\n            } else {\n                return 'ರಾತ್ರಿ';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ನೇ)/,\n        ordinal : function (number) {\n            return number + 'ನೇ';\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return kn;\n\n})));\n",";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js v10.2.0\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { name: '[object Decimal]' };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '1e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n  // Add aliases to match BigDecimal method names.\r\n  // P.add = P.plus;\r\n  P.subtract = P.minus;\r\n  P.multiply = P.times;\r\n  P.divide = P.div;\r\n  P.remainder = P.mod;\r\n  P.compareTo = P.cmp;\r\n  P.negate = P.neg;\r\n   */\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, y,\r\n      len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) return taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (v instanceof Decimal) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.name === '[object Decimal]' || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var arKw = moment.defineLocale('ar-kw', {\n        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return arKw;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eng Minutt', 'enger Minutt'],\n            'h': ['eng Stonn', 'enger Stonn'],\n            'd': ['een Dag', 'engem Dag'],\n            'M': ['ee Mount', 'engem Mount'],\n            'y': ['ee Joer', 'engem Joer']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n    function processFutureTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'a ' + string;\n        }\n        return 'an ' + string;\n    }\n    function processPastTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'viru ' + string;\n        }\n        return 'virun ' + string;\n    }\n    /**\n     * Returns true if the word before the given number loses the '-n' ending.\n     * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n     *\n     * @param number {integer}\n     * @returns {boolean}\n     */\n    function eifelerRegelAppliesToNumber(number) {\n        number = parseInt(number, 10);\n        if (isNaN(number)) {\n            return false;\n        }\n        if (number < 0) {\n            // Negative Number --> always true\n            return true;\n        } else if (number < 10) {\n            // Only 1 digit\n            if (4 <= number && number <= 7) {\n                return true;\n            }\n            return false;\n        } else if (number < 100) {\n            // 2 digits\n            var lastDigit = number % 10, firstDigit = number / 10;\n            if (lastDigit === 0) {\n                return eifelerRegelAppliesToNumber(firstDigit);\n            }\n            return eifelerRegelAppliesToNumber(lastDigit);\n        } else if (number < 10000) {\n            // 3 or 4 digits --> recursively check first digit\n            while (number >= 10) {\n                number = number / 10;\n            }\n            return eifelerRegelAppliesToNumber(number);\n        } else {\n            // Anything larger than 4 digits: recursively check first n-3 digits\n            number = number / 1000;\n            return eifelerRegelAppliesToNumber(number);\n        }\n    }\n\n    var lb = moment.defineLocale('lb', {\n        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),\n        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm [Auer]',\n            LTS: 'H:mm:ss [Auer]',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm [Auer]',\n            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'\n        },\n        calendar: {\n            sameDay: '[Haut um] LT',\n            sameElse: 'L',\n            nextDay: '[Muer um] LT',\n            nextWeek: 'dddd [um] LT',\n            lastDay: '[Gëschter um] LT',\n            lastWeek: function () {\n                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n                switch (this.day()) {\n                    case 2:\n                    case 4:\n                        return '[Leschten] dddd [um] LT';\n                    default:\n                        return '[Leschte] dddd [um] LT';\n                }\n            }\n        },\n        relativeTime : {\n            future : processFutureTime,\n            past : processPastTime,\n            s : 'e puer Sekonnen',\n            ss : '%d Sekonnen',\n            m : processRelativeTime,\n            mm : '%d Minutten',\n            h : processRelativeTime,\n            hh : '%d Stonnen',\n            d : processRelativeTime,\n            dd : '%d Deeg',\n            M : processRelativeTime,\n            MM : '%d Méint',\n            y : processRelativeTime,\n            yy : '%d Joer'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return lb;\n\n})));\n","var map = {\n\t\"./af\": \"2bfb\",\n\t\"./af.js\": \"2bfb\",\n\t\"./ar\": \"8e73\",\n\t\"./ar-dz\": \"a356\",\n\t\"./ar-dz.js\": \"a356\",\n\t\"./ar-kw\": \"423e\",\n\t\"./ar-kw.js\": \"423e\",\n\t\"./ar-ly\": \"1cfd\",\n\t\"./ar-ly.js\": \"1cfd\",\n\t\"./ar-ma\": \"0a84\",\n\t\"./ar-ma.js\": \"0a84\",\n\t\"./ar-sa\": \"8230\",\n\t\"./ar-sa.js\": \"8230\",\n\t\"./ar-tn\": \"6d83\",\n\t\"./ar-tn.js\": \"6d83\",\n\t\"./ar.js\": \"8e73\",\n\t\"./az\": \"485c\",\n\t\"./az.js\": \"485c\",\n\t\"./be\": \"1fc1\",\n\t\"./be.js\": \"1fc1\",\n\t\"./bg\": \"84aa\",\n\t\"./bg.js\": \"84aa\",\n\t\"./bm\": \"a7fa\",\n\t\"./bm.js\": \"a7fa\",\n\t\"./bn\": \"9043\",\n\t\"./bn.js\": \"9043\",\n\t\"./bo\": \"d26a\",\n\t\"./bo.js\": \"d26a\",\n\t\"./br\": \"6887\",\n\t\"./br.js\": \"6887\",\n\t\"./bs\": \"2554\",\n\t\"./bs.js\": \"2554\",\n\t\"./ca\": \"d716\",\n\t\"./ca.js\": \"d716\",\n\t\"./cs\": \"3c0d\",\n\t\"./cs.js\": \"3c0d\",\n\t\"./cv\": \"03ec\",\n\t\"./cv.js\": \"03ec\",\n\t\"./cy\": \"9797\",\n\t\"./cy.js\": \"9797\",\n\t\"./da\": \"0f14\",\n\t\"./da.js\": \"0f14\",\n\t\"./de\": \"b469\",\n\t\"./de-at\": \"b3eb\",\n\t\"./de-at.js\": \"b3eb\",\n\t\"./de-ch\": \"bb71\",\n\t\"./de-ch.js\": \"bb71\",\n\t\"./de.js\": \"b469\",\n\t\"./dv\": \"598a\",\n\t\"./dv.js\": \"598a\",\n\t\"./el\": \"8d47\",\n\t\"./el.js\": \"8d47\",\n\t\"./en-SG\": \"cdab\",\n\t\"./en-SG.js\": \"cdab\",\n\t\"./en-au\": \"0e6b\",\n\t\"./en-au.js\": \"0e6b\",\n\t\"./en-ca\": \"3886\",\n\t\"./en-ca.js\": \"3886\",\n\t\"./en-gb\": \"39a6\",\n\t\"./en-gb.js\": \"39a6\",\n\t\"./en-ie\": \"e1d3\",\n\t\"./en-ie.js\": \"e1d3\",\n\t\"./en-il\": \"73332\",\n\t\"./en-il.js\": \"73332\",\n\t\"./en-nz\": \"6f50\",\n\t\"./en-nz.js\": \"6f50\",\n\t\"./eo\": \"65db\",\n\t\"./eo.js\": \"65db\",\n\t\"./es\": \"898b\",\n\t\"./es-do\": \"0a3c\",\n\t\"./es-do.js\": \"0a3c\",\n\t\"./es-us\": \"55c9\",\n\t\"./es-us.js\": \"55c9\",\n\t\"./es.js\": \"898b\",\n\t\"./et\": \"ec18\",\n\t\"./et.js\": \"ec18\",\n\t\"./eu\": \"0ff2\",\n\t\"./eu.js\": \"0ff2\",\n\t\"./fa\": \"8df4\",\n\t\"./fa.js\": \"8df4\",\n\t\"./fi\": \"81e9\",\n\t\"./fi.js\": \"81e9\",\n\t\"./fo\": \"0721\",\n\t\"./fo.js\": \"0721\",\n\t\"./fr\": \"9f26\",\n\t\"./fr-ca\": \"d9f8\",\n\t\"./fr-ca.js\": \"d9f8\",\n\t\"./fr-ch\": \"0e49\",\n\t\"./fr-ch.js\": \"0e49\",\n\t\"./fr.js\": \"9f26\",\n\t\"./fy\": \"7118\",\n\t\"./fy.js\": \"7118\",\n\t\"./ga\": \"5120\",\n\t\"./ga.js\": \"5120\",\n\t\"./gd\": \"f6b4\",\n\t\"./gd.js\": \"f6b4\",\n\t\"./gl\": \"8840\",\n\t\"./gl.js\": \"8840\",\n\t\"./gom-latn\": \"0caa\",\n\t\"./gom-latn.js\": \"0caa\",\n\t\"./gu\": \"e0c5\",\n\t\"./gu.js\": \"e0c5\",\n\t\"./he\": \"c7aa\",\n\t\"./he.js\": \"c7aa\",\n\t\"./hi\": \"dc4d\",\n\t\"./hi.js\": \"dc4d\",\n\t\"./hr\": \"4ba9\",\n\t\"./hr.js\": \"4ba9\",\n\t\"./hu\": \"5b14\",\n\t\"./hu.js\": \"5b14\",\n\t\"./hy-am\": \"d6b6\",\n\t\"./hy-am.js\": \"d6b6\",\n\t\"./id\": \"5038\",\n\t\"./id.js\": \"5038\",\n\t\"./is\": \"0558\",\n\t\"./is.js\": \"0558\",\n\t\"./it\": \"6e98\",\n\t\"./it-ch\": \"6f12\",\n\t\"./it-ch.js\": \"6f12\",\n\t\"./it.js\": \"6e98\",\n\t\"./ja\": \"079e\",\n\t\"./ja.js\": \"079e\",\n\t\"./jv\": \"b540\",\n\t\"./jv.js\": \"b540\",\n\t\"./ka\": \"201b\",\n\t\"./ka.js\": \"201b\",\n\t\"./kk\": \"6d79\",\n\t\"./kk.js\": \"6d79\",\n\t\"./km\": \"e81d\",\n\t\"./km.js\": \"e81d\",\n\t\"./kn\": \"3e92\",\n\t\"./kn.js\": \"3e92\",\n\t\"./ko\": \"22f8\",\n\t\"./ko.js\": \"22f8\",\n\t\"./ku\": \"2421\",\n\t\"./ku.js\": \"2421\",\n\t\"./ky\": \"9609\",\n\t\"./ky.js\": \"9609\",\n\t\"./lb\": \"440c\",\n\t\"./lb.js\": \"440c\",\n\t\"./lo\": \"b29d\",\n\t\"./lo.js\": \"b29d\",\n\t\"./lt\": \"26f9\",\n\t\"./lt.js\": \"26f9\",\n\t\"./lv\": \"b97c\",\n\t\"./lv.js\": \"b97c\",\n\t\"./me\": \"293c\",\n\t\"./me.js\": \"293c\",\n\t\"./mi\": \"688b\",\n\t\"./mi.js\": \"688b\",\n\t\"./mk\": \"6909\",\n\t\"./mk.js\": \"6909\",\n\t\"./ml\": \"02fb\",\n\t\"./ml.js\": \"02fb\",\n\t\"./mn\": \"958b\",\n\t\"./mn.js\": \"958b\",\n\t\"./mr\": \"39bd\",\n\t\"./mr.js\": \"39bd\",\n\t\"./ms\": \"ebe4\",\n\t\"./ms-my\": \"6403\",\n\t\"./ms-my.js\": \"6403\",\n\t\"./ms.js\": \"ebe4\",\n\t\"./mt\": \"1b45\",\n\t\"./mt.js\": \"1b45\",\n\t\"./my\": \"8689\",\n\t\"./my.js\": \"8689\",\n\t\"./nb\": \"6ce3\",\n\t\"./nb.js\": \"6ce3\",\n\t\"./ne\": \"3a39\",\n\t\"./ne.js\": \"3a39\",\n\t\"./nl\": \"facd\",\n\t\"./nl-be\": \"db29\",\n\t\"./nl-be.js\": \"db29\",\n\t\"./nl.js\": \"facd\",\n\t\"./nn\": \"b84c\",\n\t\"./nn.js\": \"b84c\",\n\t\"./pa-in\": \"f3ff\",\n\t\"./pa-in.js\": \"f3ff\",\n\t\"./pl\": \"8d57\",\n\t\"./pl.js\": \"8d57\",\n\t\"./pt\": \"f260\",\n\t\"./pt-br\": \"d2d4\",\n\t\"./pt-br.js\": \"d2d4\",\n\t\"./pt.js\": \"f260\",\n\t\"./ro\": \"972c\",\n\t\"./ro.js\": \"972c\",\n\t\"./ru\": \"957c\",\n\t\"./ru.js\": \"957c\",\n\t\"./sd\": \"6784\",\n\t\"./sd.js\": \"6784\",\n\t\"./se\": \"ffff\",\n\t\"./se.js\": \"ffff\",\n\t\"./si\": \"eda5\",\n\t\"./si.js\": \"eda5\",\n\t\"./sk\": \"7be6\",\n\t\"./sk.js\": \"7be6\",\n\t\"./sl\": \"8155\",\n\t\"./sl.js\": \"8155\",\n\t\"./sq\": \"c8f3\",\n\t\"./sq.js\": \"c8f3\",\n\t\"./sr\": \"cf1e\",\n\t\"./sr-cyrl\": \"13e9\",\n\t\"./sr-cyrl.js\": \"13e9\",\n\t\"./sr.js\": \"cf1e\",\n\t\"./ss\": \"52bd\",\n\t\"./ss.js\": \"52bd\",\n\t\"./sv\": \"5fbd\",\n\t\"./sv.js\": \"5fbd\",\n\t\"./sw\": \"74dc\",\n\t\"./sw.js\": \"74dc\",\n\t\"./ta\": \"3de5\",\n\t\"./ta.js\": \"3de5\",\n\t\"./te\": \"5cbb\",\n\t\"./te.js\": \"5cbb\",\n\t\"./tet\": \"576c\",\n\t\"./tet.js\": \"576c\",\n\t\"./tg\": \"3b1b\",\n\t\"./tg.js\": \"3b1b\",\n\t\"./th\": \"10e8\",\n\t\"./th.js\": \"10e8\",\n\t\"./tl-ph\": \"0f38\",\n\t\"./tl-ph.js\": \"0f38\",\n\t\"./tlh\": \"cf75\",\n\t\"./tlh.js\": \"cf75\",\n\t\"./tr\": \"0e81\",\n\t\"./tr.js\": \"0e81\",\n\t\"./tzl\": \"cf51\",\n\t\"./tzl.js\": \"cf51\",\n\t\"./tzm\": \"c109\",\n\t\"./tzm-latn\": \"b53d\",\n\t\"./tzm-latn.js\": \"b53d\",\n\t\"./tzm.js\": \"c109\",\n\t\"./ug-cn\": \"6117\",\n\t\"./ug-cn.js\": \"6117\",\n\t\"./uk\": \"ada2\",\n\t\"./uk.js\": \"ada2\",\n\t\"./ur\": \"5294\",\n\t\"./ur.js\": \"5294\",\n\t\"./uz\": \"2e8c\",\n\t\"./uz-latn\": \"010e\",\n\t\"./uz-latn.js\": \"010e\",\n\t\"./uz.js\": \"2e8c\",\n\t\"./vi\": \"2921\",\n\t\"./vi.js\": \"2921\",\n\t\"./x-pseudo\": \"fd7e\",\n\t\"./x-pseudo.js\": \"fd7e\",\n\t\"./yo\": \"7f33\",\n\t\"./yo.js\": \"7f33\",\n\t\"./zh-cn\": \"5c3a\",\n\t\"./zh-cn.js\": \"5c3a\",\n\t\"./zh-hk\": \"49ab\",\n\t\"./zh-hk.js\": \"49ab\",\n\t\"./zh-tw\": \"90ea\",\n\t\"./zh-tw.js\": \"90ea\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4678\";","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        1: '-inci',\n        5: '-inci',\n        8: '-inci',\n        70: '-inci',\n        80: '-inci',\n        2: '-nci',\n        7: '-nci',\n        20: '-nci',\n        50: '-nci',\n        3: '-üncü',\n        4: '-üncü',\n        100: '-üncü',\n        6: '-ncı',\n        9: '-uncu',\n        10: '-uncu',\n        30: '-uncu',\n        60: '-ıncı',\n        90: '-ıncı'\n    };\n\n    var az = moment.defineLocale('az', {\n        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),\n        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),\n        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[sabah saat] LT',\n            nextWeek : '[gələn həftə] dddd [saat] LT',\n            lastDay : '[dünən] LT',\n            lastWeek : '[keçən həftə] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s əvvəl',\n            s : 'birneçə saniyə',\n            ss : '%d saniyə',\n            m : 'bir dəqiqə',\n            mm : '%d dəqiqə',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir il',\n            yy : '%d il'\n        },\n        meridiemParse: /gecə|səhər|gündüz|axşam/,\n        isPM : function (input) {\n            return /^(gündüz|axşam)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'gecə';\n            } else if (hour < 12) {\n                return 'səhər';\n            } else if (hour < 17) {\n                return 'gündüz';\n            } else {\n                return 'axşam';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n        ordinal : function (number) {\n            if (number === 0) {  // special case for zero\n                return number + '-ıncı';\n            }\n            var a = number % 10,\n                b = number % 100 - a,\n                c = number >= 100 ? 100 : null;\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return az;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var zhHk = moment.defineLocale('zh-hk', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日dddd HH:mm',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天]LT',\n            nextDay : '[明天]LT',\n            nextWeek : '[下]ddddLT',\n            lastDay : '[昨天]LT',\n            lastWeek : '[上]ddddLT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd' :\n                case 'D' :\n                case 'DDD' :\n                    return number + '日';\n                case 'M' :\n                    return number + '月';\n                case 'w' :\n                case 'W' :\n                    return number + '週';\n                default :\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s內',\n            past : '%s前',\n            s : '幾秒',\n            ss : '%d 秒',\n            m : '1 分鐘',\n            mm : '%d 分鐘',\n            h : '1 小時',\n            hh : '%d 小時',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 個月',\n            MM : '%d 個月',\n            y : '1 年',\n            yy : '%d 年'\n        }\n    });\n\n    return zhHk;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    var hr = moment.defineLocale('hr', {\n        months : {\n            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),\n            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')\n        },\n        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                        return '[prošlu] dddd [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            ss     : translate,\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return hr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var id = moment.defineLocale('id', {\n        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|siang|sore|malam/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'siang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sore' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'siang';\n            } else if (hours < 19) {\n                return 'sore';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Besok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kemarin pukul] LT',\n            lastWeek : 'dddd [lalu pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lalu',\n            s : 'beberapa detik',\n            ss : '%d detik',\n            m : 'semenit',\n            mm : '%d menit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return id;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n\n    var months = [\n        'Eanáir', 'Feabhra', 'Márta', 'Aibreán', 'Bealtaine', 'Méitheamh', 'Iúil', 'Lúnasa', 'Meán Fómhair', 'Deaireadh Fómhair', 'Samhain', 'Nollaig'\n    ];\n\n    var monthsShort = ['Eaná', 'Feab', 'Márt', 'Aibr', 'Beal', 'Méit', 'Iúil', 'Lúna', 'Meán', 'Deai', 'Samh', 'Noll'];\n\n    var weekdays = ['Dé Domhnaigh', 'Dé Luain', 'Dé Máirt', 'Dé Céadaoin', 'Déardaoin', 'Dé hAoine', 'Dé Satharn'];\n\n    var weekdaysShort = ['Dom', 'Lua', 'Mái', 'Céa', 'Déa', 'hAo', 'Sat'];\n\n    var weekdaysMin = ['Do', 'Lu', 'Má', 'Ce', 'Dé', 'hA', 'Sa'];\n\n    var ga = moment.defineLocale('ga', {\n        months: months,\n        monthsShort: monthsShort,\n        monthsParseExact: true,\n        weekdays: weekdays,\n        weekdaysShort: weekdaysShort,\n        weekdaysMin: weekdaysMin,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[Inniu ag] LT',\n            nextDay: '[Amárach ag] LT',\n            nextWeek: 'dddd [ag] LT',\n            lastDay: '[Inné aig] LT',\n            lastWeek: 'dddd [seo caite] [ag] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'i %s',\n            past: '%s ó shin',\n            s: 'cúpla soicind',\n            ss: '%d soicind',\n            m: 'nóiméad',\n            mm: '%d nóiméad',\n            h: 'uair an chloig',\n            hh: '%d uair an chloig',\n            d: 'lá',\n            dd: '%d lá',\n            M: 'mí',\n            MM: '%d mí',\n            y: 'bliain',\n            yy: '%d bliain'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(d|na|mh)/,\n        ordinal: function (number) {\n            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ga;\n\n})));\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'جنوری',\n        'فروری',\n        'مارچ',\n        'اپریل',\n        'مئی',\n        'جون',\n        'جولائی',\n        'اگست',\n        'ستمبر',\n        'اکتوبر',\n        'نومبر',\n        'دسمبر'\n    ];\n    var days = [\n        'اتوار',\n        'پیر',\n        'منگل',\n        'بدھ',\n        'جمعرات',\n        'جمعہ',\n        'ہفتہ'\n    ];\n\n    var ur = moment.defineLocale('ur', {\n        months : months,\n        monthsShort : months,\n        weekdays : days,\n        weekdaysShort : days,\n        weekdaysMin : days,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd، D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /صبح|شام/,\n        isPM : function (input) {\n            return 'شام' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar : {\n            sameDay : '[آج بوقت] LT',\n            nextDay : '[کل بوقت] LT',\n            nextWeek : 'dddd [بوقت] LT',\n            lastDay : '[گذشتہ روز بوقت] LT',\n            lastWeek : '[گذشتہ] dddd [بوقت] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s بعد',\n            past : '%s قبل',\n            s : 'چند سیکنڈ',\n            ss : '%d سیکنڈ',\n            m : 'ایک منٹ',\n            mm : '%d منٹ',\n            h : 'ایک گھنٹہ',\n            hh : '%d گھنٹے',\n            d : 'ایک دن',\n            dd : '%d دن',\n            M : 'ایک ماہ',\n            MM : '%d ماہ',\n            y : 'ایک سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ur;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ss = moment.defineLocale('ss', {\n        months : \"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split('_'),\n        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),\n        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),\n        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),\n        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Namuhla nga] LT',\n            nextDay : '[Kusasa nga] LT',\n            nextWeek : 'dddd [nga] LT',\n            lastDay : '[Itolo nga] LT',\n            lastWeek : 'dddd [leliphelile] [nga] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'nga %s',\n            past : 'wenteka nga %s',\n            s : 'emizuzwana lomcane',\n            ss : '%d mzuzwana',\n            m : 'umzuzu',\n            mm : '%d emizuzu',\n            h : 'lihora',\n            hh : '%d emahora',\n            d : 'lilanga',\n            dd : '%d emalanga',\n            M : 'inyanga',\n            MM : '%d tinyanga',\n            y : 'umnyaka',\n            yy : '%d iminyaka'\n        },\n        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'ekuseni';\n            } else if (hours < 15) {\n                return 'emini';\n            } else if (hours < 19) {\n                return 'entsambama';\n            } else {\n                return 'ebusuku';\n            }\n        },\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ekuseni') {\n                return hour;\n            } else if (meridiem === 'emini') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {\n                if (hour === 0) {\n                    return 0;\n                }\n                return hour + 12;\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : '%d',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ss;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    var esUs = moment.defineLocale('es-us', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse,\n        longMonthsParse: monthsParse,\n        shortMonthsParse: monthsParse,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'MM/DD/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY h:mm A',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return esUs;\n\n})));\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var tet = moment.defineLocale('tet', {\n        months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n        weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),\n        weekdaysMin : 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Ohin iha] LT',\n            nextDay: '[Aban iha] LT',\n            nextWeek: 'dddd [iha] LT',\n            lastDay: '[Horiseik iha] LT',\n            lastWeek: 'dddd [semana kotuk] [iha] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'iha %s',\n            past : '%s liuba',\n            s : 'minutu balun',\n            ss : 'minutu %d',\n            m : 'minutu ida',\n            mm : 'minutu %d',\n            h : 'oras ida',\n            hh : 'oras %d',\n            d : 'loron ida',\n            dd : 'loron %d',\n            M : 'fulan ida',\n            MM : 'fulan %d',\n            y : 'tinan ida',\n            yy : 'tinan %d'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return tet;\n\n})));\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('lab',{attrs:{\"main-title\":\"Лабораторная работа №1\"}},[_c('h2',{attrs:{\"id\":\"first\"}},[_vm._v(\"Постановка задачи\")]),_c('p',[_vm._v(\"Дан статистический ряд:\\n    \")]),_c('div',{staticClass:\"vue-mathjax-wrapper\"}),_c('p'),_c('v-table',{attrs:{\"cols\":_vm.initialTableCols}}),_c('span',[_vm._v(\"Требуется:\")]),_c('ol',[_c('li',[_vm._v(\"Записать значения результатов эксперимента в виде вариационного ряда.\")]),_c('li',[_vm._v(\"Найти медиану\\n        \"),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":\"`M_e`\"}})],1),_vm._v(\"\\n        вариационного ряда.\")]),_c('li',[_vm._v(\"Найти моду\\n        \"),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":\"`M_0`\"}})],1),_vm._v(\"\\n        вариационного ряда.\")]),_c('li',[_vm._v(\"Найти размах варьирования и длину интервала, если число итервалов\\n        \"),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":\"`\\\\quad m = 9.`\"}})],1)]),_c('li',[_vm._v(\"Построить полигон частот, гистограмму относительных частот и приближенный график эмпирической функции\\n        распределения.\")]),_c('li',[_vm._v(\"Найти числовые характеристики выборки: выборочную среднюю,\\n        исправленную дисперсию, выборочное среднее квадратичное отклонение,\\n        выборочный коэффициент вариации\")])]),_c('h2',{attrs:{\"id\":\"second\"}},[_vm._v(\"Решение\")]),_c('h3',{attrs:{\"id\":\"statisticsDistribution\"}},[_vm._v(\"Статистическое распределение выборки\")]),_c('p',[_vm._v(\"\\n      Располагаем исходный ряд в неубывающем порядке, т.е. записываем вариационный ряд:\\n    \")]),_c('v-table',{attrs:{\"cols\":_vm.variationRowTableCols}}),_c('p',[_vm._v(\"Находим медиану\\n    \")]),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":\"`M_e`\"}})],1),_vm._v(\"\\n      вариационного ряда, т.е. находим варианту,\\n      которая делит вариационный ряд на две части, равные по числу вариант:\\n    \"),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":_vm.formulas.median}})],1),_c('p'),_c('p',[_vm._v(\"Находим моду\\n    \")]),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":\"`M_0`\"}})],1),_vm._v(\"\\n      вариационного ряда, т.е. варианту, имеющую\\n      наибольшую частоту:\\n    \"),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":_vm.formulas.mode}})],1),_vm._v(\"\\n      Данный вариационный ряд имеет три моды, т.к. их частоты равны \"+_vm._s(_vm.modeFrequency)+\".\\n    \"),_c('p'),_c('p',[_vm._v(\"Находим размах варьирования по формуле\\n    \")]),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":\"`\\\\quad R = x_{max} - x_{min}:`\"}})],1),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":_vm.formulas.variationRange}})],1),_c('p'),_c('p',[_vm._v(\"Вычисляем длину интервала по формуле\\n    \")]),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":\"`\\\\quad h=\\\\frac{x_{max} - x_{min}}{m}:`\"}})],1),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":_vm.formulas.intervalLength}})],1),_c('p'),_c('p',[_vm._v(\"Все вычисления записываем в таблицу.\")]),_c('v-table',{attrs:{\"heads\":_vm.tables.statisticDist.heads,\"cols\":[_vm.intervalBordersStr, _vm.middles, _vm.intervalFreq, _vm.relFreq, _vm.intervalDensity],\"is-numerated\":true,\"num-letter\":\"<br><br>$$m_i$$\"}}),_c('p',[_vm._v(\"\\n      Строим полигон частот и гистограмму относительных частот\\n    \")]),_c('interval-frequency',{attrs:{\"x\":_vm.middles,\"y\":_vm.intervalFreq,\"styles\":_vm.charts.styles}}),_c('relative-frequency',{attrs:{\"x\":_vm.intervalBordersStr,\"y\":_vm.relFreq}}),_c('h3',{attrs:{\"id\":\"empericalFunction\"}},[_vm._v(\"Эмпирическая функция распределения\")]),_c('p',[_vm._v(\"Значения эмпирической функции распределения ищем по формулам  \\n    \")]),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":_vm.formulas.empericalFunctionCommon}})],1),_c('p'),_c('p'),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":_vm.formulas.empericalFunction}})],1),_c('p'),_c('p',[_vm._v(\"\\n      Строим приближенный график эмпирической функции распределения:\\n    \")]),_c('p',[_c('emperical-distribution-function',{attrs:{\"x\":_vm.intervalBorders,\"y\":_vm.distributionFunction}})],1),_c('h3',{attrs:{\"id\":\"variationRow\"}},[_vm._v(\"Числовые характеристики выборки\")]),_c('p',[_vm._v(\"\\n      Выборочная средняя\\n    \")]),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":_vm.formulas.sampleAverage}})],1),_c('p'),_c('p',[_vm._v(\"\\n      Исправленная дисперсия\\n    \")]),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":_vm.formulas.correctedVariance}})],1),_c('p'),_c('p',[_vm._v(\"\\n      Выборочное среднее квадратичное отклонение\\n    \")]),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":_vm.formulas.sampleStandardDeviation}})],1),_c('p'),_c('p',[_vm._v(\"\\n      Выборочный коэффициент вариации\\n    \")]),_c('div',{staticClass:\"vue-mathjax-wrapper\"},[_c('vue-mathjax',{attrs:{\"formula\":_vm.formulas.sampleVariationCoefficient}})],1),_c('p')],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"section lab\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"columns is-multiline\"},[_c('div',{staticClass:\"column is-12-touch is-9-desktop\"},[_c('div',{ref:\"mathJaxEl\",staticClass:\"content\"},[_c('h1',{staticClass:\"title is-1 is-spaced has-text-centered\"},[_vm._v(_vm._s(_vm.mainTitle))]),_c('div',{staticClass:\"is-divider\"}),_vm._t(\"default\")],2)]),_c('div',{staticClass:\"column is-12-touch is-3-desktop\"},[_c('div',{staticClass:\"table-of-contents\"},[_c('h6',{staticClass:\"title is-6\"},[_vm._v(\"Содержание\")]),_c('div',{staticClass:\"anchors list is-hoverable\"},_vm._l((_vm.titles),function(title,i){return _c('a',{key:i,staticClass:\"anchors__element list-item has-text-black-ter\",attrs:{\"href\":(\"#\" + (title.id))}},[_vm._v(_vm._s(title.text))])}),0)])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <section class=\"section lab\">\n    <div class=\"container\">\n      <div class=\"columns is-multiline\">\n        <div class=\"column is-12-touch is-9-desktop\">\n          <div class=\"content\" ref=\"mathJaxEl\">\n            <h1 class=\"title is-1 is-spaced has-text-centered\">{{ mainTitle }}</h1>\n            <div class=\"is-divider\"></div>\n            <slot></slot>\n          </div>\n        </div>\n        <div class=\"column is-12-touch is-3-desktop\">\n          <div class=\"table-of-contents\">\n            <h6 class=\"title is-6\">Содержание</h6>\n            <div class=\"anchors list is-hoverable\">\n              <a\n                class=\"anchors__element list-item has-text-black-ter\"\n                :href=\"`#${title.id}`\"\n                v-for=\"(title, i) in titles\"\n                :key=\"i\"\n              >{{ title.text }}</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\n\n\n  export default {\n    props: ['mainTitle'],\n    data() {\n      return {\n        titles: [\n          // {\n          //   id: 'first',\n          //   text: 'Первый заголовок',\n          //   titles: [\n          //     {\n          //       id: 'firstsub',\n          //       text: 'Первый заголовок второго уровня',\n          //       titles: []\n          //     },\n          //     {\n          //       id: 'secondsub',\n          //       text: 'Второй заголовок второго уровня',\n          //       titles: []\n          //     }\n          //   ]\n          // },\n          // {\n          //   id: 'second',\n          //   text: 'Второй заголовок',\n          //   titles: []\n          // }\n        ]\n      }\n    },\n    methods: {\n      renderLatex() {\n        if (window.MathJax) {\n          window.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub, this.$refs.mathJaxEl])\n        }\n      }\n    },\n    created() {\n      let dSlots = this.$slots.default\n\n      for (let i = 0; i < dSlots.length; ++i) {\n        if ('h2h3'.includes(dSlots[i].tag)) {\n          this.titles.push({\n            id: dSlots[i].data.attrs.id,\n            text: dSlots[i].children[0].text\n          })\n        }\n      }\n    },\n    mounted() {\n      let dSlots = this.$slots.default\n\n      for (let i = 0; i < dSlots.length; ++i) {\n        if (dSlots[i].tag === 'h2') {\n          let title = dSlots[i].elm\n\n          title.classList.add('title')\n          title.classList.add('is-3')\n        } else if (dSlots[i].tag === 'h3') {\n          let title = dSlots[i].elm\n\n          title.classList.add('title')\n          title.classList.add('is-4')\n        }\n      }\n\n      this.$nextTick(() => {\n        this.renderLatex()\n      })\n    },\n    updated() {\n      this.renderLatex()\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  .anchors {\n    &__element {\n      &:hover {\n        color: $blue !important;\n      }\n    }\n\n    &__anchors-item &__anchors-list {\n      padding-left: 1.5rem;\n\n      font-size: 0.9em;\n      line-height: 1.1;\n    }\n\n    &__anchors-item &__anchors-item {\n      a {\n        margin-bottom: 5px;\n      }\n    }\n  }\n\n  .table-of-contents {\n    position: sticky;\n    top: 20px;\n  }\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Lab.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Lab.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Lab.vue?vue&type=template&id=67aaac32&\"\nimport script from \"./Lab.vue?vue&type=script&lang=js&\"\nexport * from \"./Lab.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Lab.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lab-table-wrapper\"},[_c('table',{staticClass:\"lab-table table is-bordered is-narrow is-hoverable is-fullwidth\"},[(_vm.heads)?_c('thead',[_c('tr',[(_vm.isNumerated)?_c('th',{domProps:{\"innerHTML\":_vm._s((_vm.numLetter) ? _vm.numLetter : '№')}}):_vm._e(),_vm._l((_vm.heads),function(head,i){return _c('th',{key:i},[_vm._v(\"\\n        \"+_vm._s(head)+\"\\n      \")])})],2)]):_vm._e(),_c('tbody',_vm._l((_vm.range(_vm.cols[0].length)),function(i){return _c('tr',{key:i + 'row'},[(_vm.isNumerated)?_c('td',[_vm._v(\"\\n        \"+_vm._s(i + 1)+\"\\n      \")]):_vm._e(),_vm._l((_vm.range(_vm.cols.length)),function(j){return _c('td',{key:i * _vm.cols.length + j},[_vm._v(\"\\n        \"+_vm._s(_vm.cols[j][i])+\"\\n      \")])})],2)}),0)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"lab-table-wrapper\">\n    <table class=\"lab-table table is-bordered is-narrow is-hoverable is-fullwidth\">\n      <thead v-if=\"heads\">\n      <tr>\n        <th v-if=\"isNumerated\" v-html=\"(numLetter) ? numLetter : '№'\"></th>\n        <th\n          v-for=\"(head, i) in heads\"\n          :key=\"i\"\n        >\n          {{ head }}\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr\n        v-for=\"i in range(cols[0].length)\"\n        :key=\"i + 'row'\"\n      >\n        <td v-if=\"isNumerated\">\n          {{ i + 1 }}\n        </td>\n        <td\n          v-for=\"j in range(cols.length)\"\n          :key=\"i * cols.length + j\"\n        >\n          {{ cols[j][i] }}\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'VTable',\n    props: ['cols', 'heads', 'isNumerated', 'numLetter'],\n    created() {\n      let rowsCount = this.cols[0].length\n\n      for (let i = 1; i < this.cols.length; ++i) {\n        if (this.cols[i].length !== rowsCount) {\n          throw Error('Element numbers in cols must be the same')\n        }\n      }\n\n      if (this.heads && this.cols.length !== this.heads.length) {\n        throw Error('Numbers of cols must be equal to numbers of heads')\n      }\n    },\n    methods: {\n      range(n) {\n        return Array.apply(null, {length: n}).map(Number.call, Number)\n      }\n    }\n  }\n</script>\n\n<style>\n  .lab-table-wrapper {\n    max-width: 100%;\n    margin-bottom: 1rem;\n\n    overflow-x: auto;\n  }\n\n  .content table.lab-table td,\n  .content table.lab-table th {\n    vertical-align: middle;\n    text-align: center;\n  }\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VTable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VTable.vue?vue&type=template&id=95e59942&\"\nimport script from \"./VTable.vue?vue&type=script&lang=js&\"\nexport * from \"./VTable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./VTable.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      type: Object,\n      required: true,\n      default: function _default() {}\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};","var render, staticRenderFns\nimport script from \"./IntervalFrequency.vue?vue&type=script&lang=js&\"\nexport * from \"./IntervalFrequency.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./relativeFrequency.vue?vue&type=script&lang=js&\"\nexport * from \"./relativeFrequency.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./EmpericalDistributionFunction.vue?vue&type=script&lang=js&\"\nexport * from \"./EmpericalDistributionFunction.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\n  import { Line } from 'vue-chartjs'\n\n  export default {\n    extends: Line,\n    props: ['x', 'y'],\n    mounted() {\n      this.renderChart({\n        labels: this.x,\n        datasets: [{\n          label: 'Частота интервала',\n          data: this.y,\n          borderColor: window.chartColors.blue,\n          backgroundColor: window.chartColors.blue,\n          fill: false,\n          lineTension: 0\n        }]\n      }, {\n        responsive: true,\n        maintainAspectRatio: false,\n        aspectRatio: 1,\n        title: {\n          display: true,\n          text: 'Полигон частот'\n        },\n        tooltips: {\n          mode: 'index'\n        },\n        scales: {\n          xAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Середина интервала'\n            }\n          }],\n          yAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Частота интервала'\n            },\n            ticks: {\n              suggestedMin: -10,\n              suggestedMax: 50,\n            }\n          }]\n        }\n      })\n    }\n  }\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IntervalFrequency.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IntervalFrequency.vue?vue&type=script&lang=js&\"","<script>\n  import { Bar } from 'vue-chartjs'\n\n  export default {\n    extends: Bar,\n    props: ['x', 'y'],\n    mounted() {\n      this.renderChart({\n        labels: this.x,\n        datasets: [{\n          label: 'Относительная частота',\n          backgroundColor: window.chartColors.blue,\n          borderColor: window.chartColors.blue,\n          borderWidth: 1,\n          data: this.y\n        }]\n      }, {\n        responsive: true,\n        maintainAspectRatio: false,\n        aspectRatio: 1,\n        legend: {\n          position: 'top',\n        },\n        title: {\n          display: true,\n          text: 'Гистограмма относительных частот'\n        },\n        scales: {\n          xAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Интервал'\n            }\n          }],\n          yAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Относительная частота интервала'\n            }\n          }]\n        }\n      })\n    }\n  }\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./relativeFrequency.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./relativeFrequency.vue?vue&type=script&lang=js&\"","<script>\n  import { Line } from 'vue-chartjs'\n\n  export default {\n    extends: Line,\n    props: ['x', 'y'],\n    mounted() {\n      this.renderChart({\n        labels: this.x,\n        datasets: [{\n          label: 'Эмпирическая функция распределения',\n          data: this.y,\n          borderColor: window.chartColors.blue,\n          backgroundColor: window.chartColors.blue,\n          fill: false,\n        }]\n      }, {\n        responsive: true,\n        maintainAspectRatio: false,\n        aspectRatio: 1,\n        title: {\n          display: true,\n          text: 'Приближенный график эмпирической функции распределения'\n        },\n        tooltips: {\n          mode: 'index'\n        },\n        scales: {\n          xAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Границы интервалов'\n            }\n          }],\n          yAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Значение'\n            },\n            ticks: {\n              suggestedMin: 0,\n              suggestedMax: 1,\n            }\n          }]\n        }\n      })\n    }\n  }\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EmpericalDistributionFunction.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EmpericalDistributionFunction.vue?vue&type=script&lang=js&\"","export const DEFAULT_CONFIG = {\n  // minimum relative difference between two compared values,\n  // used by all comparison functions\n  epsilon: 1e-12,\n\n  // type of default matrix output. Choose 'matrix' (default) or 'array'\n  matrix: 'Matrix',\n\n  // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction\n  number: 'number',\n\n  // number of significant digits in BigNumbers\n  precision: 64,\n\n  // predictable output type of functions. When true, output type depends only\n  // on the input types. When false (default), output type can vary depending\n  // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n  // predictable is false, and returns `NaN` when true.\n  predictable: false,\n\n  // random seed for seeded pseudo random number generation\n  // null = randomly seed\n  randomSeed: null\n}\n","// type checks for all known types\n//\n// note that:\n//\n// - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n//   instanceof cannot be used because that would not allow to pass data from\n//   one instance of math.js to another since each has it's own instance of Unit.\n// - check the `isUnit` property via the constructor, so there will be no\n//   matches for \"fake\" instances like plain objects with a property `isUnit`.\n//   That is important for security reasons.\n// - It must not be possible to override the type checks used internally,\n//   for security reasons, so these functions are not exposed in the expression\n//   parser.\n\nexport function isNumber (x) {\n  return typeof x === 'number'\n}\n\nexport function isBigNumber (x) {\n  return (x && x.constructor.prototype.isBigNumber === true) || false\n}\n\nexport function isComplex (x) {\n  return (x && typeof x === 'object' && Object.getPrototypeOf(x).isComplex === true) || false\n}\n\nexport function isFraction (x) {\n  return (x && typeof x === 'object' && Object.getPrototypeOf(x).isFraction === true) || false\n}\n\nexport function isUnit (x) {\n  return (x && x.constructor.prototype.isUnit === true) || false\n}\n\nexport function isString (x) {\n  return typeof x === 'string'\n}\n\nexport const isArray = Array.isArray\n\nexport function isMatrix (x) {\n  return (x && x.constructor.prototype.isMatrix === true) || false\n}\n\n/**\n * Test whether a value is a collection: an Array or Matrix\n * @param {*} x\n * @returns {boolean} isCollection\n */\nexport function isCollection (x) {\n  return Array.isArray(x) || isMatrix(x)\n}\n\nexport function isDenseMatrix (x) {\n  return (x && x.isDenseMatrix && x.constructor.prototype.isMatrix === true) || false\n}\n\nexport function isSparseMatrix (x) {\n  return (x && x.isSparseMatrix && x.constructor.prototype.isMatrix === true) || false\n}\n\nexport function isRange (x) {\n  return (x && x.constructor.prototype.isRange === true) || false\n}\n\nexport function isIndex (x) {\n  return (x && x.constructor.prototype.isIndex === true) || false\n}\n\nexport function isBoolean (x) {\n  return typeof x === 'boolean'\n}\n\nexport function isResultSet (x) {\n  return (x && x.constructor.prototype.isResultSet === true) || false\n}\n\nexport function isHelp (x) {\n  return (x && x.constructor.prototype.isHelp === true) || false\n}\n\nexport function isFunction (x) {\n  return typeof x === 'function'\n}\n\nexport function isDate (x) {\n  return x instanceof Date\n}\n\nexport function isRegExp (x) {\n  return x instanceof RegExp\n}\n\nexport function isObject (x) {\n  return !!(x &&\n    typeof x === 'object' &&\n    x.constructor === Object &&\n    !isComplex(x) &&\n    !isFraction(x))\n}\n\nexport function isNull (x) {\n  return x === null\n}\n\nexport function isUndefined (x) {\n  return x === undefined\n}\n\nexport function isAccessorNode (x) {\n  return (x && x.isAccessorNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isArrayNode (x) {\n  return (x && x.isArrayNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isAssignmentNode (x) {\n  return (x && x.isAssignmentNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isBlockNode (x) {\n  return (x && x.isBlockNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isConditionalNode (x) {\n  return (x && x.isConditionalNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isConstantNode (x) {\n  return (x && x.isConstantNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isFunctionAssignmentNode (x) {\n  return (x && x.isFunctionAssignmentNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isFunctionNode (x) {\n  return (x && x.isFunctionNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isIndexNode (x) {\n  return (x && x.isIndexNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isNode (x) {\n  return (x && x.isNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isObjectNode (x) {\n  return (x && x.isObjectNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isOperatorNode (x) {\n  return (x && x.isOperatorNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isParenthesisNode (x) {\n  return (x && x.isParenthesisNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isRangeNode (x) {\n  return (x && x.isRangeNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isSymbolNode (x) {\n  return (x && x.isSymbolNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isChain (x) {\n  return (x && x.constructor.prototype.isChain === true) || false\n}\n\nexport function typeOf (x) {\n  const t = typeof x\n\n  if (t === 'object') {\n    // JavaScript types\n    if (x === null) return 'null'\n    if (Array.isArray(x)) return 'Array'\n    if (x instanceof Date) return 'Date'\n    if (x instanceof RegExp) return 'RegExp'\n\n    // math.js types\n    if (isBigNumber(x)) return 'BigNumber'\n    if (isComplex(x)) return 'Complex'\n    if (isFraction(x)) return 'Fraction'\n    if (isMatrix(x)) return 'Matrix'\n    if (isUnit(x)) return 'Unit'\n    if (isIndex(x)) return 'Index'\n    if (isRange(x)) return 'Range'\n    if (isResultSet(x)) return 'ResultSet'\n    if (isNode(x)) return x.type\n    if (isChain(x)) return 'Chain'\n    if (isHelp(x)) return 'Help'\n\n    return 'Object'\n  }\n\n  if (t === 'function') return 'Function'\n\n  return t // can be 'string', 'number', 'boolean', ...\n}\n","import { isBigNumber } from './is'\n\n/**\n * Clone an object\n *\n *     clone(x)\n *\n * Can clone any primitive type, array, and object.\n * If x has a function clone, this function will be invoked to clone the object.\n *\n * @param {*} x\n * @return {*} clone\n */\nexport function clone (x) {\n  const type = typeof x\n\n  // immutable primitive types\n  if (type === 'number' || type === 'string' || type === 'boolean' ||\n      x === null || x === undefined) {\n    return x\n  }\n\n  // use clone function of the object when available\n  if (typeof x.clone === 'function') {\n    return x.clone()\n  }\n\n  // array\n  if (Array.isArray(x)) {\n    return x.map(function (value) {\n      return clone(value)\n    })\n  }\n\n  if (x instanceof Date) return new Date(x.valueOf())\n  if (isBigNumber(x)) return x // bignumbers are immutable\n  if (x instanceof RegExp) throw new TypeError('Cannot clone ' + x) // TODO: clone a RegExp\n\n  // object\n  return mapObject(x, clone)\n}\n\n/**\n * Apply map to all properties of an object\n * @param {Object} object\n * @param {function} callback\n * @return {Object} Returns a copy of the object with mapped properties\n */\nexport function mapObject (object, callback) {\n  const clone = {}\n\n  for (const key in object) {\n    if (hasOwnProperty(object, key)) {\n      clone[key] = callback(object[key])\n    }\n  }\n\n  return clone\n}\n\n/**\n * Extend object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n */\nexport function extend (a, b) {\n  for (const prop in b) {\n    if (hasOwnProperty(b, prop)) {\n      a[prop] = b[prop]\n    }\n  }\n  return a\n}\n\n/**\n * Deep extend an object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @returns {Object}\n */\nexport function deepExtend (a, b) {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError('Arrays are not supported by deepExtend')\n  }\n\n  for (const prop in b) {\n    if (hasOwnProperty(b, prop)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {}\n        }\n        if (a[prop] && a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop])\n        } else {\n          a[prop] = b[prop]\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError('Arrays are not supported by deepExtend')\n      } else {\n        a[prop] = b[prop]\n      }\n    }\n  }\n  return a\n}\n\n/**\n * Deep test equality of all fields in two pairs of arrays or objects.\n * Compares values and functions strictly (ie. 2 is not the same as '2').\n * @param {Array | Object} a\n * @param {Array | Object} b\n * @returns {boolean}\n */\nexport function deepStrictEqual (a, b) {\n  let prop, i, len\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false\n    }\n\n    if (a.length !== b.length) {\n      return false\n    }\n\n    for (i = 0, len = a.length; i < len; i++) {\n      if (!deepStrictEqual(a[i], b[i])) {\n        return false\n      }\n    }\n    return true\n  } else if (typeof a === 'function') {\n    return (a === b)\n  } else if (a instanceof Object) {\n    if (Array.isArray(b) || !(b instanceof Object)) {\n      return false\n    }\n\n    for (prop in a) {\n      // noinspection JSUnfilteredForInLoop\n      if (!(prop in b) || !deepStrictEqual(a[prop], b[prop])) {\n        return false\n      }\n    }\n    for (prop in b) {\n      // noinspection JSUnfilteredForInLoop\n      if (!(prop in a) || !deepStrictEqual(a[prop], b[prop])) {\n        return false\n      }\n    }\n    return true\n  } else {\n    return (a === b)\n  }\n}\n\n/**\n * Recursively flatten a nested object.\n * @param {Object} nestedObject\n * @return {Object} Returns the flattened object\n */\nexport function deepFlatten (nestedObject) {\n  const flattenedObject = {}\n\n  _deepFlatten(nestedObject, flattenedObject)\n\n  return flattenedObject\n}\n\n// helper function used by deepFlatten\nfunction _deepFlatten (nestedObject, flattenedObject) {\n  for (const prop in nestedObject) {\n    if (nestedObject.hasOwnProperty(prop)) {\n      const value = nestedObject[prop]\n      if (typeof value === 'object' && value !== null) {\n        _deepFlatten(value, flattenedObject)\n      } else {\n        flattenedObject[prop] = value\n      }\n    }\n  }\n}\n\n/**\n * Test whether the current JavaScript engine supports Object.defineProperty\n * @returns {boolean} returns true if supported\n */\nexport function canDefineProperty () {\n  // test needed for broken IE8 implementation\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty({}, 'x', { get: function () {} })\n      return true\n    }\n  } catch (e) {}\n\n  return false\n}\n\n/**\n * Attach a lazy loading property to a constant.\n * The given function `fn` is called once when the property is first requested.\n *\n * @param {Object} object         Object where to add the property\n * @param {string} prop           Property name\n * @param {Function} valueResolver Function returning the property value. Called\n *                                without arguments.\n */\nexport function lazy (object, prop, valueResolver) {\n  let _uninitialized = true\n  let _value\n\n  Object.defineProperty(object, prop, {\n    get: function () {\n      if (_uninitialized) {\n        _value = valueResolver()\n        _uninitialized = false\n      }\n      return _value\n    },\n\n    set: function (value) {\n      _value = value\n      _uninitialized = false\n    },\n\n    configurable: true,\n    enumerable: true\n  })\n}\n\n/**\n * Traverse a path into an object.\n * When a namespace is missing, it will be created\n * @param {Object} object\n * @param {string | string[]} path   A dot separated string like 'name.space'\n * @return {Object} Returns the object at the end of the path\n */\nexport function traverse (object, path) {\n  if (path && typeof path === 'string') {\n    return traverse(object, path.split('.'))\n  }\n\n  let obj = object\n\n  if (path) {\n    for (let i = 0; i < path.length; i++) {\n      const key = path[i]\n      if (!(key in obj)) {\n        obj[key] = {}\n      }\n      obj = obj[key]\n    }\n  }\n\n  return obj\n}\n\n/**\n * A safe hasOwnProperty\n * @param {Object} object\n * @param {string} property\n */\nexport function hasOwnProperty (object, property) {\n  return object && Object.hasOwnProperty.call(object, property)\n}\n\n/**\n * Test whether an object is a factory. a factory has fields:\n *\n * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\n * - name: string (optional)\n * - path: string    A dot separated path (optional)\n * - math: boolean   If true (false by default), the math namespace is passed\n *                   as fifth argument of the factory function\n *\n * @param {*} object\n * @returns {boolean}\n */\nexport function isLegacyFactory (object) {\n  return object && typeof object.factory === 'function'\n}\n\n/**\n * Get a nested property from an object\n * @param {Object} object\n * @param {string | string[]} path\n * @returns {Object}\n */\nexport function get (object, path) {\n  if (typeof path === 'string') {\n    if (isPath(path)) {\n      return get(object, path.split('.'))\n    } else {\n      return object[path]\n    }\n  }\n\n  let child = object\n\n  for (let i = 0; i < path.length; i++) {\n    const key = path[i]\n    child = child ? child[key] : undefined\n  }\n\n  return child\n}\n\n/**\n * Set a nested property in an object\n * Mutates the object itself\n * If the path doesn't exist, it will be created\n * @param {Object} object\n * @param {string | string[]} path\n * @param {*} value\n * @returns {Object}\n */\nexport function set (object, path, value) {\n  if (typeof path === 'string') {\n    if (isPath(path)) {\n      return set(object, path.split('.'), value)\n    } else {\n      object[path] = value\n      return object\n    }\n  }\n\n  let child = object\n  for (let i = 0; i < path.length - 1; i++) {\n    const key = path[i]\n    if (child[key] === undefined) {\n      child[key] = {}\n    }\n    child = child[key]\n  }\n\n  if (path.length > 0) {\n    const lastKey = path[path.length - 1]\n    child[lastKey] = value\n  }\n\n  return object\n}\n\n/**\n * Create an object composed of the picked object properties\n * @param {Object} object\n * @param {string[]} properties\n * @param {function} [transform] Optional value to transform a value when picking it\n * @return {Object}\n */\nexport function pick (object, properties, transform) {\n  const copy = {}\n\n  for (let i = 0; i < properties.length; i++) {\n    const key = properties[i]\n    const value = get(object, key)\n    if (value !== undefined) {\n      set(copy, key, transform ? transform(value, key) : value)\n    }\n  }\n\n  return copy\n}\n\n/**\n * Shallow version of pick, creating an object composed of the picked object properties\n * but not for nested properties\n * @param {Object} object\n * @param {string[]} properties\n * @return {Object}\n */\nexport function pickShallow (object, properties) {\n  const copy = {}\n\n  for (let i = 0; i < properties.length; i++) {\n    const key = properties[i]\n    const value = object[key]\n    if (value !== undefined) {\n      copy[key] = value\n    }\n  }\n\n  return copy\n}\n\nexport function values (object) {\n  return Object.keys(object).map(key => object[key])\n}\n\n// helper function to test whether a string contains a path like 'user.name'\nfunction isPath (str) {\n  return str.indexOf('.') !== -1\n}\n","import { clone, mapObject, deepExtend } from '../../utils/object'\nimport { DEFAULT_CONFIG } from '../config'\n\nexport const MATRIX_OPTIONS = ['Matrix', 'Array'] // valid values for option matrix\nexport const NUMBER_OPTIONS = ['number', 'BigNumber', 'Fraction'] // valid values for option number\n\nexport function configFactory (config, emit) {\n  /**\n   * Set configuration options for math.js, and get current options.\n   * Will emit a 'config' event, with arguments (curr, prev, changes).\n   *\n   * This function is only available on a mathjs instance created using `create`.\n   *\n   * Syntax:\n   *\n   *     math.config(config: Object): Object\n   *\n   * Examples:\n   *\n   *\n   *     import { create, all } from 'mathjs'\n   *\n   *     // create a mathjs instance\n   *     const math = create(all)\n   *\n   *     math.config().number                // outputs 'number'\n   *     math.evaluate('0.4')                // outputs number 0.4\n   *     math.config({number: 'Fraction'})\n   *     math.evaluate('0.4')                // outputs Fraction 2/5\n   *\n   * @param {Object} [options] Available options:\n   *                            {number} epsilon\n   *                              Minimum relative difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {string} matrix\n   *                              A string 'Matrix' (default) or 'Array'.\n   *                            {string} number\n   *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n   *                            {number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   *                            {string} parenthesis\n   *                              How to display parentheses in LaTeX and string\n   *                              output.\n   *                            {string} randomSeed\n   *                              Random seed for seeded pseudo random number generator.\n   *                              Set to null to randomly seed.\n   * @return {Object} Returns the current configuration\n   */\n  function _config (options) {\n    if (options) {\n      const prev = mapObject(config, clone)\n\n      // validate some of the options\n      validateOption(options, 'matrix', MATRIX_OPTIONS)\n      validateOption(options, 'number', NUMBER_OPTIONS)\n\n      // merge options\n      deepExtend(config, options)\n\n      const curr = mapObject(config, clone)\n\n      const changes = mapObject(options, clone)\n\n      // emit 'config' event\n      emit('config', curr, prev, changes)\n\n      return curr\n    } else {\n      return mapObject(config, clone)\n    }\n  }\n\n  // attach the valid options to the function so they can be extended\n  _config.MATRIX_OPTIONS = MATRIX_OPTIONS\n  _config.NUMBER_OPTIONS = NUMBER_OPTIONS\n\n  // attach the config properties as readonly properties to the config function\n  Object.keys(DEFAULT_CONFIG).forEach(key => {\n    Object.defineProperty(_config, key, {\n      get: () => config[key],\n      enumerable: true,\n      configurable: true\n    })\n  })\n\n  return _config\n}\n\n/**\n * Test whether an Array contains a specific item.\n * @param {Array.<string>} array\n * @param {string} item\n * @return {boolean}\n */\nfunction contains (array, item) {\n  return array.indexOf(item) !== -1\n}\n\n/**\n * Find a string in an array. Case insensitive search\n * @param {Array.<string>} array\n * @param {string} item\n * @return {number} Returns the index when found. Returns -1 when not found\n */\nfunction findIndex (array, item) {\n  return array\n    .map(function (i) {\n      return i.toLowerCase()\n    })\n    .indexOf(item.toLowerCase())\n}\n\n/**\n * Validate an option\n * @param {Object} options         Object with options\n * @param {string} name            Name of the option to validate\n * @param {Array.<string>} values  Array with valid values for this option\n */\nfunction validateOption (options, name, values) {\n  if (options[name] !== undefined && !contains(values, options[name])) {\n    const index = findIndex(values, options[name])\n    if (index !== -1) {\n      // right value, wrong casing\n      // TODO: lower case values are deprecated since v3, remove this warning some day.\n      console.warn('Warning: Wrong casing for configuration option \"' + name + '\", should be \"' + values[index] + '\" instead of \"' + options[name] + '\".')\n\n      options[name] = values[index] // change the option to the right casing\n    } else {\n      // unknown value\n      console.warn('Warning: Unknown value \"' + options[name] + '\" for configuration option \"' + name + '\". Available options: ' + values.map(JSON.stringify).join(', ') + '.')\n    }\n  }\n}\n","import { DEFAULT_CONFIG } from '../core/config'\nimport { MATRIX_OPTIONS, NUMBER_OPTIONS } from '../core/function/config'\n\n// create a read-only version of config\nexport const config = /* #__PURE__ */ function (options) {\n  if (options) {\n    throw new Error('The global config is readonly. \\n' +\n      'Please create a mathjs instance if you want to change the default configuration. \\n' +\n      'Example:\\n' +\n      '\\n' +\n      '  import { create, all } from \\'mathjs\\';\\n' +\n      '  const mathjs = create(all);\\n' +\n      '  mathjs.config({ number: \\'BigNumber\\' });\\n')\n  }\n\n  return Object.freeze(DEFAULT_CONFIG)\n}\nObject.assign(config, DEFAULT_CONFIG, { MATRIX_OPTIONS, NUMBER_OPTIONS })\n","import { mapObject } from './object'\nimport { isNumber } from './is'\n\n/**\n * @typedef {{sign: '+' | '-' | '', coefficients: number[], exponent: number}} SplitValue\n */\n\n/**\n * Check if a number is integer\n * @param {number | boolean} value\n * @return {boolean} isInteger\n */\nexport function isInteger (value) {\n  if (typeof value === 'boolean') {\n    return true\n  }\n\n  return isFinite(value)\n    ? (value === Math.round(value))\n    : false\n  // Note: we use ==, not ===, as we can have Booleans as well\n}\n\n/**\n * Calculate the sign of a number\n * @param {number} x\n * @returns {number}\n */\nexport const sign = /* #__PURE__ */ Math.sign || function (x) {\n  if (x > 0) {\n    return 1\n  } else if (x < 0) {\n    return -1\n  } else {\n    return 0\n  }\n}\n\n/**\n * Calculate the base-2 logarithm of a number\n * @param {number} x\n * @returns {number}\n */\nexport const log2 = /* #__PURE__ */ Math.log2 || function log2 (x) {\n  return Math.log(x) / Math.LN2\n}\n\n/**\n * Calculate the base-10 logarithm of a number\n * @param {number} x\n * @returns {number}\n */\nexport const log10 = /* #__PURE__ */ Math.log10 || function log10 (x) {\n  return Math.log(x) / Math.LN10\n}\n\n/**\n * Calculate the natural logarithm of a number + 1\n * @param {number} x\n * @returns {number}\n */\nexport const log1p = /* #__PURE__ */ Math.log1p || function (x) {\n  return Math.log(x + 1)\n}\n\n/**\n * Calculate cubic root for a number\n *\n * Code from es6-shim.js:\n *   https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L1564-L1577\n *\n * @param {number} x\n * @returns {number} Returns the cubic root of x\n */\nexport const cbrt = /* #__PURE__ */ Math.cbrt || function cbrt (x) {\n  if (x === 0) {\n    return x\n  }\n\n  const negate = x < 0\n  let result\n  if (negate) {\n    x = -x\n  }\n\n  if (isFinite(x)) {\n    result = Math.exp(Math.log(x) / 3)\n    // from https://en.wikipedia.org/wiki/Cube_root#Numerical_methods\n    result = (x / (result * result) + (2 * result)) / 3\n  } else {\n    result = x\n  }\n\n  return negate ? -result : result\n}\n\n/**\n * Calculates exponentiation minus 1\n * @param {number} x\n * @return {number} res\n */\nexport const expm1 = /* #__PURE__ */ Math.expm1 || function expm1 (x) {\n  return (x >= 2e-4 || x <= -2e-4)\n    ? Math.exp(x) - 1\n    : x + x * x / 2 + x * x * x / 6\n}\n\n/**\n * Convert a number to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'engineering'    Always use engineering notation.\n *                                          For example '123.4e+0' and '14.0e+6'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lowerExp` and `upperExp` bounds, and\n *                                          uses exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default,\n *                                          not rounding any digits.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12.071, {notation: 'fixed'})                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2})  // '2.30'\n *    format(52.8,   {notation: 'exponential'})          // '5.28e+1'\n *    format(12345678, {notation: 'engineering'})        // '12.345678e+6'\n *\n * @param {number} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\nexport function format (value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value)\n  }\n\n  // handle special cases\n  if (value === Infinity) {\n    return 'Infinity'\n  } else if (value === -Infinity) {\n    return '-Infinity'\n  } else if (isNaN(value)) {\n    return 'NaN'\n  }\n\n  // default values for options\n  let notation = 'auto'\n  let precision\n\n  if (options) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation\n    }\n\n    // determine precision from options\n    if (isNumber(options)) {\n      precision = options\n    } else if (isNumber(options.precision)) {\n      precision = options.precision\n    }\n  }\n\n  // handle the various notations\n  switch (notation) {\n    case 'fixed':\n      return toFixed(value, precision)\n\n    case 'exponential':\n      return toExponential(value, precision)\n\n    case 'engineering':\n      return toEngineering(value, precision)\n\n    case 'auto':\n      // TODO: clean up some day. Deprecated since: 2018-01-24\n      // @deprecated upper and lower are replaced with upperExp and lowerExp since v4.0.0\n      if (options && options.exponential && (options.exponential.lower !== undefined || options.exponential.upper !== undefined)) {\n        const fixedOptions = mapObject(options, function (x) { return x })\n        fixedOptions.exponential = undefined\n        if (options.exponential.lower !== undefined) {\n          fixedOptions.lowerExp = Math.round(Math.log(options.exponential.lower) / Math.LN10)\n        }\n        if (options.exponential.upper !== undefined) {\n          fixedOptions.upperExp = Math.round(Math.log(options.exponential.upper) / Math.LN10)\n        }\n\n        console.warn('Deprecation warning: Formatting options exponential.lower and exponential.upper ' +\n            '(minimum and maximum value) ' +\n            'are replaced with exponential.lowerExp and exponential.upperExp ' +\n            '(minimum and maximum exponent) since version 4.0.0. ' +\n            'Replace ' + JSON.stringify(options) + ' with ' + JSON.stringify(fixedOptions))\n\n        return toPrecision(value, precision, fixedOptions)\n      }\n\n      // remove trailing zeros after the decimal point\n      return toPrecision(value, precision, options && options)\n        .replace(/((\\.\\d*?)(0+))($|e)/, function () {\n          const digits = arguments[2]\n          const e = arguments[4]\n          return (digits !== '.') ? digits + e : e\n        })\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' +\n          'Choose \"auto\", \"exponential\", or \"fixed\".')\n  }\n}\n\n/**\n * Split a number into sign, coefficients, and exponent\n * @param {number | string} value\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n */\nexport function splitNumber (value) {\n  // parse the input value\n  const match = String(value).toLowerCase().match(/^0*?(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/)\n  if (!match) {\n    throw new SyntaxError('Invalid number ' + value)\n  }\n\n  const sign = match[1]\n  const digits = match[2]\n  let exponent = parseFloat(match[4] || '0')\n\n  const dot = digits.indexOf('.')\n  exponent += (dot !== -1) ? (dot - 1) : (digits.length - 1)\n\n  const coefficients = digits\n    .replace('.', '') // remove the dot (must be removed before removing leading zeros)\n    .replace(/^0*/, function (zeros) {\n      // remove leading zeros, add their count to the exponent\n      exponent -= zeros.length\n      return ''\n    })\n    .replace(/0*$/, '') // remove trailing zeros\n    .split('')\n    .map(function (d) {\n      return parseInt(d)\n    })\n\n  if (coefficients.length === 0) {\n    coefficients.push(0)\n    exponent++\n  }\n\n  return {\n    sign: sign,\n    coefficients: coefficients,\n    exponent: exponent\n  }\n}\n\n/**\n * Format a number in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]        Optional number of significant figures to return.\n */\nexport function toEngineering (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value)\n  }\n\n  const rounded = roundDigits(splitNumber(value), precision)\n\n  const e = rounded.exponent\n  let c = rounded.coefficients\n\n  // find nearest lower multiple of 3 for exponent\n  const newExp = e % 3 === 0 ? e : (e < 0 ? (e - 3) - (e % 3) : e - (e % 3))\n\n  if (isNumber(precision)) {\n    // add zeroes to give correct sig figs\n    while (precision > c.length || (e - newExp) + 1 > c.length) {\n      c.push(0)\n    }\n  } else {\n    // concatenate coefficients with necessary zeros\n    const significandsDiff = e >= 0 ? e : Math.abs(newExp)\n\n    // add zeros if necessary (for ex: 1e+8)\n    while (c.length - 1 < significandsDiff) {\n      c.push(0)\n    }\n  }\n\n  // find difference in exponents\n  let expDiff = Math.abs(e - newExp)\n\n  let decimalIdx = 1\n\n  // push decimal index over by expDiff times\n  while (expDiff > 0) {\n    decimalIdx++\n    expDiff--\n  }\n\n  // if all coefficient values are zero after the decimal point and precision is unset, don't add a decimal value.\n  // otherwise concat with the rest of the coefficients\n  const decimals = c.slice(decimalIdx).join('')\n  const decimalVal = ((isNumber(precision) && decimals.length) || decimals.match(/[1-9]/)) ? ('.' + decimals) : ''\n\n  const str = c.slice(0, decimalIdx).join('') +\n      decimalVal +\n      'e' + (e >= 0 ? '+' : '') + newExp.toString()\n  return rounded.sign + str\n}\n\n/**\n * Format a number with fixed notation.\n * @param {number | string} value\n * @param {number} [precision=undefined]  Optional number of decimals after the\n *                                        decimal point. null by default.\n */\nexport function toFixed (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value)\n  }\n\n  const splitValue = splitNumber(value)\n  const rounded = (typeof precision === 'number')\n    ? roundDigits(splitValue, splitValue.exponent + 1 + precision)\n    : splitValue\n  let c = rounded.coefficients\n  let p = rounded.exponent + 1 // exponent may have changed\n\n  // append zeros if needed\n  const pp = p + (precision || 0)\n  if (c.length < pp) {\n    c = c.concat(zeros(pp - c.length))\n  }\n\n  // prepend zeros if needed\n  if (p < 0) {\n    c = zeros(-p + 1).concat(c)\n    p = 1\n  }\n\n  // insert a dot if needed\n  if (p < c.length) {\n    c.splice(p, 0, (p === 0) ? '0.' : '.')\n  }\n\n  return rounded.sign + c.join('')\n}\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n */\nexport function toExponential (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value)\n  }\n\n  // round if needed, else create a clone\n  const split = splitNumber(value)\n  const rounded = precision ? roundDigits(split, precision) : split\n  let c = rounded.coefficients\n  const e = rounded.exponent\n\n  // append zeros if needed\n  if (c.length < precision) {\n    c = c.concat(zeros(precision - c.length))\n  }\n\n  // format as `C.CCCe+EEE` or `C.CCCe-EEE`\n  const first = c.shift()\n  return rounded.sign + first + (c.length > 0 ? ('.' + c.join('')) : '') +\n      'e' + (e >= 0 ? '+' : '') + e\n}\n\n/**\n * Format a number with a certain precision\n * @param {number | string} value\n * @param {number} [precision=undefined] Optional number of digits.\n * @param {{lowerExp: number | undefined, upperExp: number | undefined}} [options]\n *                                       By default:\n *                                         lowerExp = -3 (incl)\n *                                         upper = +5 (excl)\n * @return {string}\n */\nexport function toPrecision (value, precision, options) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value)\n  }\n\n  // determine lower and upper bound for exponential notation.\n  const lowerExp = (options && options.lowerExp !== undefined) ? options.lowerExp : -3\n  const upperExp = (options && options.upperExp !== undefined) ? options.upperExp : 5\n\n  const split = splitNumber(value)\n  const rounded = precision ? roundDigits(split, precision) : split\n  if (rounded.exponent < lowerExp || rounded.exponent >= upperExp) {\n    // exponential notation\n    return toExponential(value, precision)\n  } else {\n    let c = rounded.coefficients\n    const e = rounded.exponent\n\n    // append trailing zeros\n    if (c.length < precision) {\n      c = c.concat(zeros(precision - c.length))\n    }\n\n    // append trailing zeros\n    // TODO: simplify the next statement\n    c = c.concat(zeros(e - c.length + 1 +\n        (c.length < precision ? precision - c.length : 0)))\n\n    // prepend zeros\n    c = zeros(-e).concat(c)\n\n    const dot = e > 0 ? e : 0\n    if (dot < c.length - 1) {\n      c.splice(dot + 1, 0, '.')\n    }\n\n    return rounded.sign + c.join('')\n  }\n}\n\n/**\n * Round the number of digits of a number *\n * @param {SplitValue} split       A value split with .splitNumber(value)\n * @param {number} precision  A positive integer\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n *              with rounded digits\n */\nexport function roundDigits (split, precision) {\n  // create a clone\n  const rounded = {\n    sign: split.sign,\n    coefficients: split.coefficients,\n    exponent: split.exponent\n  }\n  const c = rounded.coefficients\n\n  // prepend zeros if needed\n  while (precision <= 0) {\n    c.unshift(0)\n    rounded.exponent++\n    precision++\n  }\n\n  if (c.length > precision) {\n    const removed = c.splice(precision, c.length - precision)\n\n    if (removed[0] >= 5) {\n      let i = precision - 1\n      c[i]++\n      while (c[i] === 10) {\n        c.pop()\n        if (i === 0) {\n          c.unshift(0)\n          rounded.exponent++\n          i++\n        }\n        i--\n        c[i]++\n      }\n    }\n  }\n\n  return rounded\n}\n\n/**\n * Create an array filled with zeros.\n * @param {number} length\n * @return {Array}\n */\nfunction zeros (length) {\n  const arr = []\n  for (let i = 0; i < length; i++) {\n    arr.push(0)\n  }\n  return arr\n}\n\n/**\n * Count the number of significant digits of a number.\n *\n * For example:\n *   2.34 returns 3\n *   0.0034 returns 2\n *   120.5e+30 returns 4\n *\n * @param {number} value\n * @return {number} digits   Number of significant digits\n */\nexport function digits (value) {\n  return value\n    .toExponential()\n    .replace(/e.*$/, '') // remove exponential notation\n    .replace(/^0\\.?0*|\\./, '') // remove decimal point and leading zeros\n    .length\n}\n\n/**\n * Minimum number added to one that makes the result different than one\n */\nexport const DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16\n\n/**\n * Compares two floating point numbers.\n * @param {number} x          First value to compare\n * @param {number} y          Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n*/\nexport function nearlyEqual (x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon === null || epsilon === undefined) {\n    return x === y\n  }\n\n  if (x === y) {\n    return true\n  }\n\n  // NaN\n  if (isNaN(x) || isNaN(y)) {\n    return false\n  }\n\n  // at this point x and y should be finite\n  if (isFinite(x) && isFinite(y)) {\n    // check numbers are very close, needed when comparing numbers near zero\n    const diff = Math.abs(x - y)\n    if (diff < DBL_EPSILON) {\n      return true\n    } else {\n      // use relative error\n      return diff <= Math.max(Math.abs(x), Math.abs(y)) * epsilon\n    }\n  }\n\n  // Infinite and Number or negative Infinite and positive Infinite cases\n  return false\n}\n\n/**\n * Calculate the hyperbolic arccos of a number\n * @param {number} x\n * @return {number}\n */\nexport const acosh = Math.acosh || function (x) {\n  return Math.log(Math.sqrt(x * x - 1) + x)\n}\n\nexport const asinh = Math.asinh || function (x) {\n  return Math.log(Math.sqrt(x * x + 1) + x)\n}\n\n/**\n * Calculate the hyperbolic arctangent of a number\n * @param {number} x\n * @return {number}\n */\nexport const atanh = Math.atanh || function (x) {\n  return Math.log((1 + x) / (1 - x)) / 2\n}\n\n/**\n * Calculate the hyperbolic cosine of a number\n * @param {number} x\n * @returns {number}\n */\nexport const cosh = Math.cosh || function (x) {\n  return (Math.exp(x) + Math.exp(-x)) / 2\n}\n\n/**\n * Calculate the hyperbolic sine of a number\n * @param {number} x\n * @returns {number}\n */\nexport const sinh = Math.sinh || function (x) {\n  return (Math.exp(x) - Math.exp(-x)) / 2\n}\n\n/**\n * Calculate the hyperbolic tangent of a number\n * @param {number} x\n * @returns {number}\n */\nexport const tanh = Math.tanh || function (x) {\n  const e = Math.exp(2 * x)\n  return (e - 1) / (e + 1)\n}\n","import { mapObject } from '../object'\n\n/**\n * Convert a BigNumber to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n *    format(2.3,    {notation: 'fixed', precision: 4})  // returns '2.3000'\n *    format(52.8,   {notation: 'exponential'})          // returns '5.28e+1'\n *    format(12400,  {notation: 'engineering'})          // returns '12.400e+3'\n *\n * @param {BigNumber} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\nexport function format (value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value)\n  }\n\n  // handle special cases\n  if (!value.isFinite()) {\n    return value.isNaN() ? 'NaN' : (value.gt(0) ? 'Infinity' : '-Infinity')\n  }\n\n  // default values for options\n  let notation = 'auto'\n  let precision\n\n  if (options !== undefined) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation\n    }\n\n    // determine precision from options\n    if (typeof options === 'number') {\n      precision = options\n    } else if (options.precision) {\n      precision = options.precision\n    }\n  }\n\n  // handle the various notations\n  switch (notation) {\n    case 'fixed':\n      return toFixed(value, precision)\n\n    case 'exponential':\n      return toExponential(value, precision)\n\n    case 'engineering':\n      return toEngineering(value, precision)\n\n    case 'auto':\n      // TODO: clean up some day. Deprecated since: 2018-01-24\n      // @deprecated upper and lower are replaced with upperExp and lowerExp since v4.0.0\n      if (options && options.exponential && (options.exponential.lower !== undefined || options.exponential.upper !== undefined)) {\n        const fixedOptions = mapObject(options, function (x) { return x })\n        fixedOptions.exponential = undefined\n        if (options.exponential.lower !== undefined) {\n          fixedOptions.lowerExp = Math.round(Math.log(options.exponential.lower) / Math.LN10)\n        }\n        if (options.exponential.upper !== undefined) {\n          fixedOptions.upperExp = Math.round(Math.log(options.exponential.upper) / Math.LN10)\n        }\n\n        console.warn('Deprecation warning: Formatting options exponential.lower and exponential.upper ' +\n            '(minimum and maximum value) ' +\n            'are replaced with exponential.lowerExp and exponential.upperExp ' +\n            '(minimum and maximum exponent) since version 4.0.0. ' +\n            'Replace ' + JSON.stringify(options) + ' with ' + JSON.stringify(fixedOptions))\n\n        return format(value, fixedOptions)\n      }\n\n      // determine lower and upper bound for exponential notation.\n      // TODO: implement support for upper and lower to be BigNumbers themselves\n      const lowerExp = (options && options.lowerExp !== undefined) ? options.lowerExp : -3\n      const upperExp = (options && options.upperExp !== undefined) ? options.upperExp : 5\n\n      // handle special case zero\n      if (value.isZero()) return '0'\n\n      // determine whether or not to output exponential notation\n      let str\n      const rounded = value.toSignificantDigits(precision)\n      const exp = rounded.e\n      if (exp >= lowerExp && exp < upperExp) {\n        // normal number notation\n        str = rounded.toFixed()\n      } else {\n        // exponential notation\n        str = toExponential(value, precision)\n      }\n\n      // remove trailing zeros after the decimal point\n      return str.replace(/((\\.\\d*?)(0+))($|e)/, function () {\n        const digits = arguments[2]\n        const e = arguments[4]\n        return (digits !== '.') ? digits + e : e\n      })\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' +\n          'Choose \"auto\", \"exponential\", or \"fixed\".')\n  }\n}\n\n/**\n * Format a BigNumber in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {BigNumber | string} value\n * @param {number} [precision]        Optional number of significant figures to return.\n */\nexport function toEngineering (value, precision) {\n  // find nearest lower multiple of 3 for exponent\n  const e = value.e\n  const newExp = e % 3 === 0 ? e : (e < 0 ? (e - 3) - (e % 3) : e - (e % 3))\n\n  // find difference in exponents, and calculate the value without exponent\n  const valueWithoutExp = value.mul(Math.pow(10, -newExp))\n\n  let valueStr = valueWithoutExp.toPrecision(precision)\n  if (valueStr.indexOf('e') !== -1) {\n    valueStr = valueWithoutExp.toString()\n  }\n\n  return valueStr + 'e' + (e >= 0 ? '+' : '') + newExp.toString()\n}\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {BigNumber} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n * @returns {string} str\n */\nexport function toExponential (value, precision) {\n  if (precision !== undefined) {\n    return value.toExponential(precision - 1) // Note the offset of one\n  } else {\n    return value.toExponential()\n  }\n}\n\n/**\n * Format a number with fixed notation.\n * @param {BigNumber} value\n * @param {number} [precision=undefined] Optional number of decimals after the\n *                                       decimal point. Undefined by default.\n */\nexport function toFixed (value, precision) {\n  return value.toFixed(precision)\n}\n","import { isBigNumber, isString, typeOf } from './is'\nimport { format as formatNumber } from './number'\nimport { format as formatBigNumber } from './bignumber/formatter'\n\n/**\n * Check if a text ends with a certain string.\n * @param {string} text\n * @param {string} search\n */\nexport function endsWith (text, search) {\n  const start = text.length - search.length\n  const end = text.length\n  return (text.substring(start, end) === search)\n}\n\n/**\n * Format a value of any type into a string.\n *\n * Usage:\n *     math.format(value)\n *     math.format(value, precision)\n *\n * When value is a function:\n *\n * - When the function has a property `syntax`, it returns this\n *   syntax description.\n * - In other cases, a string `'function'` is returned.\n *\n * When `value` is an Object:\n *\n * - When the object contains a property `format` being a function, this\n *   function is invoked as `value.format(options)` and the result is returned.\n * - When the object has its own `toString` method, this method is invoked\n *   and the result is returned.\n * - In other cases the function will loop over all object properties and\n *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n *\n * Example usage:\n *     math.format(2/7)                // '0.2857142857142857'\n *     math.format(math.pi, 3)         // '3.14'\n *     math.format(new Complex(2, 3))  // '2 + 3i'\n *     math.format('hello')            // '\"hello\"'\n *\n * @param {*} value             Value to be stringified\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @return {string} str\n */\nexport function format (value, options) {\n  if (typeof value === 'number') {\n    return formatNumber(value, options)\n  }\n\n  if (isBigNumber(value)) {\n    return formatBigNumber(value, options)\n  }\n\n  // note: we use unsafe duck-typing here to check for Fractions, this is\n  // ok here since we're only invoking toString or concatenating its values\n  if (looksLikeFraction(value)) {\n    if (!options || options.fraction !== 'decimal') {\n      // output as ratio, like '1/3'\n      return (value.s * value.n) + '/' + value.d\n    } else {\n      // output as decimal, like '0.(3)'\n      return value.toString()\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return formatArray(value, options)\n  }\n\n  if (isString(value)) {\n    return '\"' + value + '\"'\n  }\n\n  if (typeof value === 'function') {\n    return value.syntax ? String(value.syntax) : 'function'\n  }\n\n  if (value && typeof value === 'object') {\n    if (typeof value.format === 'function') {\n      return value.format(options)\n    } else if (value && value.toString() !== {}.toString()) {\n      // this object has a non-native toString method, use that one\n      return value.toString()\n    } else {\n      const entries = []\n\n      for (const key in value) {\n        if (value.hasOwnProperty(key)) {\n          entries.push('\"' + key + '\": ' + format(value[key], options))\n        }\n      }\n\n      return '{' + entries.join(', ') + '}'\n    }\n  }\n\n  return String(value)\n}\n\n/**\n * Stringify a value into a string enclosed in double quotes.\n * Unescaped double quotes and backslashes inside the value are escaped.\n * @param {*} value\n * @return {string}\n */\nexport function stringify (value) {\n  const text = String(value)\n  let escaped = ''\n  let i = 0\n  while (i < text.length) {\n    let c = text.charAt(i)\n\n    if (c === '\\\\') {\n      escaped += c\n      i++\n\n      c = text.charAt(i)\n      if (c === '' || '\"\\\\/bfnrtu'.indexOf(c) === -1) {\n        escaped += '\\\\' // no valid escape character -> escape it\n      }\n      escaped += c\n    } else if (c === '\"') {\n      escaped += '\\\\\"'\n    } else {\n      escaped += c\n    }\n    i++\n  }\n\n  return '\"' + escaped + '\"'\n}\n\n/**\n * Escape special HTML characters\n * @param {*} value\n * @return {string}\n */\nexport function escape (value) {\n  let text = String(value)\n  text = text.replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n\n  return text\n}\n\n/**\n * Recursively format an n-dimensional matrix\n * Example output: \"[[1, 2], [3, 4]]\"\n * @param {Array} array\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @returns {string} str\n */\nfunction formatArray (array, options) {\n  if (Array.isArray(array)) {\n    let str = '['\n    const len = array.length\n    for (let i = 0; i < len; i++) {\n      if (i !== 0) {\n        str += ', '\n      }\n      str += formatArray(array[i], options)\n    }\n    str += ']'\n    return str\n  } else {\n    return format(array, options)\n  }\n}\n\n/**\n * Check whether a value looks like a Fraction (unsafe duck-type check)\n * @param {*} value\n * @return {boolean}\n */\nfunction looksLikeFraction (value) {\n  return (value &&\n      typeof value === 'object' &&\n      typeof value.s === 'number' &&\n      typeof value.n === 'number' &&\n      typeof value.d === 'number') || false\n}\n\n/**\n * Compare two strings\n * @param {string} x\n * @param {string} y\n * @returns {number}\n */\nexport function compareText (x, y) {\n  // we don't want to convert numbers to string, only accept string input\n  if (!isString(x)) {\n    throw new TypeError('Unexpected type of argument in function compareText ' +\n      '(expected: string or Array or Matrix, actual: ' + typeOf(x) + ', index: 0)')\n  }\n  if (!isString(y)) {\n    throw new TypeError('Unexpected type of argument in function compareText ' +\n      '(expected: string or Array or Matrix, actual: ' + typeOf(y) + ', index: 1)')\n  }\n\n  return (x === y)\n    ? 0\n    : (x > y ? 1 : -1)\n}\n","/**\n * Create a range error with the message:\n *     'Dimension mismatch (<actual size> != <expected size>)'\n * @param {number | number[]} actual        The actual size\n * @param {number | number[]} expected      The expected size\n * @param {string} [relation='!=']          Optional relation between actual\n *                                          and expected size: '!=', '<', etc.\n * @extends RangeError\n */\nexport function DimensionError (actual, expected, relation) {\n  if (!(this instanceof DimensionError)) {\n    throw new SyntaxError('Constructor must be called with the new operator')\n  }\n\n  this.actual = actual\n  this.expected = expected\n  this.relation = relation\n\n  this.message = 'Dimension mismatch (' +\n      (Array.isArray(actual) ? ('[' + actual.join(', ') + ']') : actual) +\n      ' ' + (this.relation || '!=') + ' ' +\n      (Array.isArray(expected) ? ('[' + expected.join(', ') + ']') : expected) +\n      ')'\n\n  this.stack = (new Error()).stack\n}\n\nDimensionError.prototype = new RangeError()\nDimensionError.prototype.constructor = RangeError\nDimensionError.prototype.name = 'DimensionError'\nDimensionError.prototype.isDimensionError = true\n","/**\n * Create a range error with the message:\n *     'Index out of range (index < min)'\n *     'Index out of range (index < max)'\n *\n * @param {number} index     The actual index\n * @param {number} [min=0]   Minimum index (included)\n * @param {number} [max]     Maximum index (excluded)\n * @extends RangeError\n */\nexport function IndexError (index, min, max) {\n  if (!(this instanceof IndexError)) {\n    throw new SyntaxError('Constructor must be called with the new operator')\n  }\n\n  this.index = index\n  if (arguments.length < 3) {\n    this.min = 0\n    this.max = min\n  } else {\n    this.min = min\n    this.max = max\n  }\n\n  if (this.min !== undefined && this.index < this.min) {\n    this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')'\n  } else if (this.max !== undefined && this.index >= this.max) {\n    this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')'\n  } else {\n    this.message = 'Index out of range (' + this.index + ')'\n  }\n\n  this.stack = (new Error()).stack\n}\n\nIndexError.prototype = new RangeError()\nIndexError.prototype.constructor = RangeError\nIndexError.prototype.name = 'IndexError'\nIndexError.prototype.isIndexError = true\n","import { isInteger } from './number'\nimport { isNumber } from './is'\nimport { format } from './string'\nimport { DimensionError } from '../error/DimensionError'\nimport { IndexError } from '../error/IndexError'\n\n/**\n * Calculate the size of a multi dimensional array.\n * This function checks the size of the first entry, it does not validate\n * whether all dimensions match. (use function `validate` for that)\n * @param {Array} x\n * @Return {Number[]} size\n */\nexport function arraySize (x) {\n  let s = []\n\n  while (Array.isArray(x)) {\n    s.push(x.length)\n    x = x[0]\n  }\n\n  return s\n}\n\n/**\n * Recursively validate whether each element in a multi dimensional array\n * has a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @param {number} dim   Current dimension\n * @throws DimensionError\n * @private\n */\nfunction _validate (array, size, dim) {\n  let i\n  const len = array.length\n\n  if (len !== size[dim]) {\n    throw new DimensionError(len, size[dim])\n  }\n\n  if (dim < size.length - 1) {\n    // recursively validate each child array\n    const dimNext = dim + 1\n    for (i = 0; i < len; i++) {\n      const child = array[i]\n      if (!Array.isArray(child)) {\n        throw new DimensionError(size.length - 1, size.length, '<')\n      }\n      _validate(array[i], size, dimNext)\n    }\n  } else {\n    // last dimension. none of the childs may be an array\n    for (i = 0; i < len; i++) {\n      if (Array.isArray(array[i])) {\n        throw new DimensionError(size.length + 1, size.length, '>')\n      }\n    }\n  }\n}\n\n/**\n * Validate whether each element in a multi dimensional array has\n * a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @throws DimensionError\n */\nexport function validate (array, size) {\n  const isScalar = (size.length === 0)\n  if (isScalar) {\n    // scalar\n    if (Array.isArray(array)) {\n      throw new DimensionError(array.length, 0)\n    }\n  } else {\n    // array\n    _validate(array, size, 0)\n  }\n}\n\n/**\n * Test whether index is an integer number with index >= 0 and index < length\n * when length is provided\n * @param {number} index    Zero-based index\n * @param {number} [length] Length of the array\n */\nexport function validateIndex (index, length) {\n  if (!isNumber(index) || !isInteger(index)) {\n    throw new TypeError('Index must be an integer (value: ' + index + ')')\n  }\n  if (index < 0 || (typeof length === 'number' && index >= length)) {\n    throw new IndexError(index, length)\n  }\n}\n\n/**\n * Resize a multi dimensional array. The resized array is returned.\n * @param {Array} array         Array to be resized\n * @param {Array.<number>} size Array with the size of each dimension\n * @param {*} [defaultValue=0]  Value to be filled in in new entries,\n *                              zero by default. Specify for example `null`,\n *                              to clearly see entries that are not explicitly\n *                              set.\n * @return {Array} array         The resized array\n */\nexport function resize (array, size, defaultValue) {\n  // TODO: add support for scalars, having size=[] ?\n\n  // check the type of the arguments\n  if (!Array.isArray(array) || !Array.isArray(size)) {\n    throw new TypeError('Array expected')\n  }\n  if (size.length === 0) {\n    throw new Error('Resizing to scalar is not supported')\n  }\n\n  // check whether size contains positive integers\n  size.forEach(function (value) {\n    if (!isNumber(value) || !isInteger(value) || value < 0) {\n      throw new TypeError('Invalid size, must contain positive integers ' +\n          '(size: ' + format(size) + ')')\n    }\n  })\n\n  // recursively resize the array\n  const _defaultValue = (defaultValue !== undefined) ? defaultValue : 0\n  _resize(array, size, 0, _defaultValue)\n\n  return array\n}\n\n/**\n * Recursively resize a multi dimensional array\n * @param {Array} array         Array to be resized\n * @param {number[]} size       Array with the size of each dimension\n * @param {number} dim          Current dimension\n * @param {*} [defaultValue]    Value to be filled in in new entries,\n *                              undefined by default.\n * @private\n */\nfunction _resize (array, size, dim, defaultValue) {\n  let i\n  let elem\n  const oldLen = array.length\n  const newLen = size[dim]\n  const minLen = Math.min(oldLen, newLen)\n\n  // apply new length\n  array.length = newLen\n\n  if (dim < size.length - 1) {\n    // non-last dimension\n    const dimNext = dim + 1\n\n    // resize existing child arrays\n    for (i = 0; i < minLen; i++) {\n      // resize child array\n      elem = array[i]\n      if (!Array.isArray(elem)) {\n        elem = [elem] // add a dimension\n        array[i] = elem\n      }\n      _resize(elem, size, dimNext, defaultValue)\n    }\n\n    // create new child arrays\n    for (i = minLen; i < newLen; i++) {\n      // get child array\n      elem = []\n      array[i] = elem\n\n      // resize new child array\n      _resize(elem, size, dimNext, defaultValue)\n    }\n  } else {\n    // last dimension\n\n    // remove dimensions of existing values\n    for (i = 0; i < minLen; i++) {\n      while (Array.isArray(array[i])) {\n        array[i] = array[i][0]\n      }\n    }\n\n    // fill new elements with the default value\n    for (i = minLen; i < newLen; i++) {\n      array[i] = defaultValue\n    }\n  }\n}\n\n/**\n * Re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n *\n * @throws {DimensionError}       If the product of the new dimension sizes does\n *                                not equal that of the old ones\n */\nexport function reshape (array, sizes) {\n  const flatArray = flatten(array)\n  let newArray\n\n  function product (arr) {\n    return arr.reduce((prev, curr) => prev * curr)\n  }\n\n  if (!Array.isArray(array) || !Array.isArray(sizes)) {\n    throw new TypeError('Array expected')\n  }\n\n  if (sizes.length === 0) {\n    throw new DimensionError(0, product(arraySize(array)), '!=')\n  }\n\n  let totalSize = 1\n  for (let sizeIndex = 0; sizeIndex < sizes.length; sizeIndex++) {\n    totalSize *= sizes[sizeIndex]\n  }\n\n  if (flatArray.length !== totalSize) {\n    throw new DimensionError(\n      product(sizes),\n      product(arraySize(array)),\n      '!='\n    )\n  }\n\n  try {\n    newArray = _reshape(flatArray, sizes)\n  } catch (e) {\n    if (e instanceof DimensionError) {\n      throw new DimensionError(\n        product(sizes),\n        product(arraySize(array)),\n        '!='\n      )\n    }\n    throw e\n  }\n\n  return newArray\n}\n\n/**\n * Iteratively re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n */\n\nfunction _reshape (array, sizes) {\n  // testing if there are enough elements for the requested shape\n  let tmpArray = array\n  let tmpArray2\n  // for each dimensions starting by the last one and ignoring the first one\n  for (let sizeIndex = sizes.length - 1; sizeIndex > 0; sizeIndex--) {\n    const size = sizes[sizeIndex]\n    tmpArray2 = []\n\n    // aggregate the elements of the current tmpArray in elements of the requested size\n    const length = tmpArray.length / size\n    for (let i = 0; i < length; i++) {\n      tmpArray2.push(tmpArray.slice(i * size, (i + 1) * size))\n    }\n    // set it as the new tmpArray for the next loop turn or for return\n    tmpArray = tmpArray2\n  }\n\n  return tmpArray\n}\n\n/**\n * Squeeze a multi dimensional array\n * @param {Array} array\n * @param {Array} [size]\n * @returns {Array} returns the array itself\n */\nexport function squeeze (array, size) {\n  let s = size || arraySize(array)\n\n  // squeeze outer dimensions\n  while (Array.isArray(array) && array.length === 1) {\n    array = array[0]\n    s.shift()\n  }\n\n  // find the first dimension to be squeezed\n  let dims = s.length\n  while (s[dims - 1] === 1) {\n    dims--\n  }\n\n  // squeeze inner dimensions\n  if (dims < s.length) {\n    array = _squeeze(array, dims, 0)\n    s.length = dims\n  }\n\n  return array\n}\n\n/**\n * Recursively squeeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\nfunction _squeeze (array, dims, dim) {\n  let i, ii\n\n  if (dim < dims) {\n    const next = dim + 1\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _squeeze(array[i], dims, next)\n    }\n  } else {\n    while (Array.isArray(array)) {\n      array = array[0]\n    }\n  }\n\n  return array\n}\n\n/**\n * Unsqueeze a multi dimensional array: add dimensions when missing\n *\n * Paramter `size` will be mutated to match the new, unqueezed matrix size.\n *\n * @param {Array} array\n * @param {number} dims       Desired number of dimensions of the array\n * @param {number} [outer]    Number of outer dimensions to be added\n * @param {Array} [size] Current size of array.\n * @returns {Array} returns the array itself\n * @private\n */\nexport function unsqueeze (array, dims, outer, size) {\n  let s = size || arraySize(array)\n\n  // unsqueeze outer dimensions\n  if (outer) {\n    for (let i = 0; i < outer; i++) {\n      array = [array]\n      s.unshift(1)\n    }\n  }\n\n  // unsqueeze inner dimensions\n  array = _unsqueeze(array, dims, 0)\n  while (s.length < dims) {\n    s.push(1)\n  }\n\n  return array\n}\n\n/**\n * Recursively unsqueeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\nfunction _unsqueeze (array, dims, dim) {\n  let i, ii\n\n  if (Array.isArray(array)) {\n    const next = dim + 1\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _unsqueeze(array[i], dims, next)\n    }\n  } else {\n    for (let d = dim; d < dims; d++) {\n      array = [array]\n    }\n  }\n\n  return array\n}\n/**\n * Flatten a multi dimensional array, put all elements in a one dimensional\n * array\n * @param {Array} array   A multi dimensional array\n * @return {Array}        The flattened array (1 dimensional)\n */\nexport function flatten (array) {\n  if (!Array.isArray(array)) {\n    // if not an array, return as is\n    return array\n  }\n  let flat = []\n\n  array.forEach(function callback (value) {\n    if (Array.isArray(value)) {\n      value.forEach(callback) // traverse through sub-arrays recursively\n    } else {\n      flat.push(value)\n    }\n  })\n\n  return flat\n}\n\n/**\n * A safe map\n * @param {Array} array\n * @param {function} callback\n */\nexport function map (array, callback) {\n  return Array.prototype.map.call(array, callback)\n}\n\n/**\n * A safe forEach\n * @param {Array} array\n * @param {function} callback\n */\nexport function forEach (array, callback) {\n  Array.prototype.forEach.call(array, callback)\n}\n\n/**\n * A safe filter\n * @param {Array} array\n * @param {function} callback\n */\nexport function filter (array, callback) {\n  if (arraySize(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported')\n  }\n\n  return Array.prototype.filter.call(array, callback)\n}\n\n/**\n * Filter values in a callback given a regular expression\n * @param {Array} array\n * @param {RegExp} regexp\n * @return {Array} Returns the filtered array\n * @private\n */\nexport function filterRegExp (array, regexp) {\n  if (arraySize(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported')\n  }\n\n  return Array.prototype.filter.call(array, (entry) => regexp.test(entry))\n}\n\n/**\n * A safe join\n * @param {Array} array\n * @param {string} separator\n */\nexport function join (array, separator) {\n  return Array.prototype.join.call(array, separator)\n}\n\n/**\n * Assign a numeric identifier to every element of a sorted array\n * @param {Array} a  An array\n * @return {Array} An array of objects containing the original value and its identifier\n */\nexport function identify (a) {\n  if (!Array.isArray(a)) {\n    throw new TypeError('Array input expected')\n  }\n\n  if (a.length === 0) {\n    return a\n  }\n\n  let b = []\n  let count = 0\n  b[0] = { value: a[0], identifier: 0 }\n  for (let i = 1; i < a.length; i++) {\n    if (a[i] === a[i - 1]) {\n      count++\n    } else {\n      count = 0\n    }\n    b.push({ value: a[i], identifier: count })\n  }\n  return b\n}\n\n/**\n * Remove the numeric identifier from the elements\n * @param {array} a  An array\n * @return {array} An array of values without identifiers\n */\nexport function generalize (a) {\n  if (!Array.isArray(a)) {\n    throw new TypeError('Array input expected')\n  }\n\n  if (a.length === 0) {\n    return a\n  }\n\n  let b = []\n  for (let i = 0; i < a.length; i++) {\n    b.push(a[i].value)\n  }\n  return b\n}\n\n/**\n * Check the datatype of a given object\n * This is a low level implementation that should only be used by\n * parent Matrix classes such as SparseMatrix or DenseMatrix\n * This method does not validate Array Matrix shape\n * @param {Array} array\n * @param {function} typeOf   Callback function to use to determine the type of a value\n * @return string\n */\nexport function getArrayDataType (array, typeOf) {\n  let type // to hold type info\n  let length = 0 // to hold length value to ensure it has consistent sizes\n\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i]\n    const isArray = Array.isArray(item)\n\n    // Saving the target matrix row size\n    if (i === 0 && isArray) {\n      length = item.length\n    }\n\n    // If the current item is an array but the length does not equal the targetVectorSize\n    if (isArray && item.length !== length) {\n      return undefined\n    }\n\n    const itemType = isArray\n      ? getArrayDataType(item, typeOf) // recurse into a nested array\n      : typeOf(item)\n\n    if (type === undefined) {\n      type = itemType // first item\n    } else if (type !== itemType) {\n      return 'mixed'\n    } else {\n      // we're good, everything has the same type so far\n    }\n  }\n\n  return type\n}\n\n/**\n * Return the last item from an array\n * @param array\n * @returns {*}\n */\nexport function last (array) {\n  return array[array.length - 1]\n}\n\n/**\n * Get all but the last element of array.\n */\nexport function initial (array) {\n  return array.slice(0, array.length - 1)\n}\n\n/**\n * Test whether an array or string contains an item\n * @param {Array | string} array\n * @param {*} item\n * @return {boolean}\n */\nexport function contains (array, item) {\n  return array.indexOf(item) !== -1\n}\n","import { contains } from './array'\nimport { pickShallow } from './object'\n\n/**\n * Create a factory function, which can be used to inject dependencies.\n *\n * The created functions are memoized, a consecutive call of the factory\n * with the exact same inputs will return the same function instance.\n * The memoized cache is exposed on `factory.cache` and can be cleared\n * if needed.\n *\n * Example:\n *\n *     const name = 'log'\n *     const dependencies = ['config', 'typed', 'divideScalar', 'Complex']\n *\n *     export const createLog = factory(name, dependencies, ({ typed, config, divideScalar, Complex }) => {\n *       // ... create the function log here and return it\n *     }\n *\n * @param {string} name           Name of the function to be created\n * @param {string[]} dependencies The names of all required dependencies\n * @param {function} create       Callback function called with an object with all dependencies\n * @param {Object} [meta]         Optional object with meta information that will be attached\n *                                to the created factory function as property `meta`.\n * @returns {function}\n */\nexport function factory (name, dependencies, create, meta) {\n  function assertAndCreate (scope) {\n    // we only pass the requested dependencies to the factory function\n    // to prevent functions to rely on dependencies that are not explicitly\n    // requested.\n    const deps = pickShallow(scope, dependencies.map(stripOptionalNotation))\n\n    assertDependencies(name, dependencies, scope)\n\n    return create(deps)\n  }\n\n  assertAndCreate.isFactory = true\n  assertAndCreate.fn = name\n  assertAndCreate.dependencies = dependencies.slice().sort()\n  if (meta) {\n    assertAndCreate.meta = meta\n  }\n\n  return assertAndCreate\n}\n\n/**\n * Sort all factories such that when loading in order, the dependencies are resolved.\n *\n * @param {Array} factories\n * @returns {Array} Returns a new array with the sorted factories.\n */\nexport function sortFactories (factories) {\n  const factoriesByName = {}\n\n  factories.forEach(factory => {\n    factoriesByName[factory.fn] = factory\n  })\n\n  function containsDependency (factory, dependency) {\n    // TODO: detect circular references\n    if (isFactory(factory)) {\n      if (contains(factory.dependencies, dependency.fn || dependency.name)) {\n        return true\n      }\n\n      if (factory.dependencies.some(d => containsDependency(factoriesByName[d], dependency))) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  const sorted = []\n\n  function addFactory (factory) {\n    let index = 0\n    while (index < sorted.length && !containsDependency(sorted[index], factory)) {\n      index++\n    }\n\n    sorted.splice(index, 0, factory)\n  }\n\n  // sort regular factory functions\n  factories\n    .filter(isFactory)\n    .forEach(addFactory)\n\n  // sort legacy factory functions AFTER the regular factory functions\n  factories\n    .filter(factory => !isFactory(factory))\n    .forEach(addFactory)\n\n  return sorted\n}\n\n// TODO: comment or cleanup if unused in the end\nexport function create (factories, scope = {}) {\n  sortFactories(factories)\n    .forEach(factory => factory(scope))\n\n  return scope\n}\n\n/**\n * Test whether an object is a factory. This is the case when it has\n * properties name, dependencies, and a function create.\n * @param {*} obj\n * @returns {boolean}\n */\nexport function isFactory (obj) {\n  return typeof obj === 'function' &&\n    typeof obj.fn === 'string' &&\n    Array.isArray(obj.dependencies)\n}\n\n/**\n * Assert that all dependencies of a list with dependencies are available in the provided scope.\n *\n * Will throw an exception when there are dependencies missing.\n *\n * @param {string} name   Name for the function to be created. Used to generate a useful error message\n * @param {string[]} dependencies\n * @param {Object} scope\n */\nexport function assertDependencies (name, dependencies, scope) {\n  const allDefined = dependencies\n    .filter(dependency => !isOptionalDependency(dependency)) // filter optionals\n    .every(dependency => scope[dependency] !== undefined)\n\n  if (!allDefined) {\n    const missingDependencies = dependencies.filter(dependency => scope[dependency] === undefined)\n\n    // TODO: create a custom error class for this, a MathjsError or something like that\n    throw new Error(`Cannot create function \"${name}\", ` +\n      `some dependencies are missing: ${missingDependencies.map(d => `\"${d}\"`).join(', ')}.`)\n  }\n}\n\nexport function isOptionalDependency (dependency) {\n  return dependency && dependency[0] === '?'\n}\n\nexport function stripOptionalNotation (dependency) {\n  return dependency && dependency[0] === '?'\n    ? dependency.slice(1)\n    : dependency\n}\n","import Complex from 'complex.js'\nimport { format } from '../../utils/number'\nimport { isNumber, isUnit } from '../../utils/is'\nimport { factory } from '../../utils/factory'\n\nconst name = 'Complex'\nconst dependencies = []\n\nexport const createComplexClass = /* #__PURE__ */ factory(name, dependencies, () => {\n  /**\n   * Attach type information\n   */\n  Complex.prototype.type = 'Complex'\n  Complex.prototype.isComplex = true\n\n  /**\n   * Get a JSON representation of the complex number\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}`\n   */\n  Complex.prototype.toJSON = function () {\n    return {\n      mathjs: 'Complex',\n      re: this.re,\n      im: this.im\n    }\n  }\n\n  /*\n   * Return the value of the complex number in polar notation\n   * The angle phi will be set in the interval of [-pi, pi].\n   * @return {{r: number, phi: number}} Returns and object with properties r and phi.\n   */\n  Complex.prototype.toPolar = function () {\n    return {\n      r: this.abs(),\n      phi: this.arg()\n    }\n  }\n\n  /**\n   * Get a string representation of the complex number,\n   * with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @return {string} str\n   */\n  Complex.prototype.format = function (options) {\n    let str = ''\n    let im = this.im\n    let re = this.re\n    const strRe = format(this.re, options)\n    const strIm = format(this.im, options)\n\n    // round either re or im when smaller than the configured precision\n    const precision = isNumber(options) ? options : options ? options.precision : null\n    if (precision !== null) {\n      const epsilon = Math.pow(10, -precision)\n      if (Math.abs(re / im) < epsilon) {\n        re = 0\n      }\n      if (Math.abs(im / re) < epsilon) {\n        im = 0\n      }\n    }\n\n    if (im === 0) {\n      // real value\n      str = strRe\n    } else if (re === 0) {\n      // purely complex value\n      if (im === 1) {\n        str = 'i'\n      } else if (im === -1) {\n        str = '-i'\n      } else {\n        str = strIm + 'i'\n      }\n    } else {\n      // complex value\n      if (im < 0) {\n        if (im === -1) {\n          str = strRe + ' - i'\n        } else {\n          str = strRe + ' - ' + strIm.substring(1) + 'i'\n        }\n      } else {\n        if (im === 1) {\n          str = strRe + ' + i'\n        } else {\n          str = strRe + ' + ' + strIm + 'i'\n        }\n      }\n    }\n    return str\n  }\n\n  /**\n   * Create a complex number from polar coordinates\n   *\n   * Usage:\n   *\n   *     Complex.fromPolar(r: number, phi: number) : Complex\n   *     Complex.fromPolar({r: number, phi: number}) : Complex\n   *\n   * @param {*} args...\n   * @return {Complex}\n   */\n  Complex.fromPolar = function (args) {\n    switch (arguments.length) {\n      case 1:\n        const arg = arguments[0]\n        if (typeof arg === 'object') {\n          return Complex(arg)\n        }\n        throw new TypeError('Input has to be an object with r and phi keys.')\n\n      case 2:\n        const r = arguments[0]\n        let phi = arguments[1]\n        if (isNumber(r)) {\n          if (isUnit(phi) && phi.hasBase('ANGLE')) {\n            // convert unit to a number in radians\n            phi = phi.toNumber('rad')\n          }\n\n          if (isNumber(phi)) {\n            return new Complex({ r: r, phi: phi })\n          }\n\n          throw new TypeError('Phi is not a number nor an angle unit.')\n        } else {\n          throw new TypeError('Radius r is not a number.')\n        }\n\n      default:\n        throw new SyntaxError('Wrong number of arguments in function fromPolar')\n    }\n  }\n\n  Complex.prototype.valueOf = Complex.prototype.toString\n\n  /**\n   * Create a Complex number from a JSON object\n   * @param {Object} json  A JSON Object structured as\n   *                       {\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}\n   *                       All properties are optional, default values\n   *                       for `re` and `im` are 0.\n   * @return {Complex} Returns a new Complex number\n   */\n  Complex.fromJSON = function (json) {\n    return new Complex(json)\n  }\n\n  /**\n   * Compare two complex numbers, `a` and `b`:\n   *\n   * - Returns 1 when the real part of `a` is larger than the real part of `b`\n   * - Returns -1 when the real part of `a` is smaller than the real part of `b`\n   * - Returns 1 when the real parts are equal\n   *   and the imaginary part of `a` is larger than the imaginary part of `b`\n   * - Returns -1 when the real parts are equal\n   *   and the imaginary part of `a` is smaller than the imaginary part of `b`\n   * - Returns 0 when both real and imaginary parts are equal.\n   *\n   * @params {Complex} a\n   * @params {Complex} b\n   * @returns {number} Returns the comparison result: -1, 0, or 1\n   */\n  Complex.compare = function (a, b) {\n    if (a.re > b.re) { return 1 }\n    if (a.re < b.re) { return -1 }\n\n    if (a.im > b.im) { return 1 }\n    if (a.im < b.im) { return -1 }\n\n    return 0\n  }\n\n  return Complex\n}, { isClass: true })\n","// function utils\n\n/**\n * Memoize a given function by caching the computed result.\n * The cache of a memoized function can be cleared by deleting the `cache`\n * property of the function.\n *\n * @param {function} fn                     The function to be memoized.\n *                                          Must be a pure function.\n * @param {function(args: Array)} [hasher]  A custom hash builder.\n *                                          Is JSON.stringify by default.\n * @return {function}                       Returns the memoized function\n */\nexport function memoize (fn, hasher) {\n  return function memoize () {\n    if (typeof memoize.cache !== 'object') {\n      memoize.cache = {}\n    }\n\n    const args = []\n    for (let i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    const hash = hasher ? hasher(args) : JSON.stringify(args)\n    if (!(hash in memoize.cache)) {\n      memoize.cache[hash] = fn.apply(fn, args)\n    }\n    return memoize.cache[hash]\n  }\n}\n\n/**\n * Memoize a given function by caching all results and the arguments,\n * and comparing against the arguments of previous results before\n * executing again.\n * This is less performant than `memoize` which calculates a hash,\n * which is very fast to compare. Use `memoizeCompare` only when it is\n * not possible to create a unique serializable hash from the function\n * arguments.\n * The isEqual function must compare two sets of arguments\n * and return true when equal (can be a deep equality check for example).\n * @param {function} fn\n * @param {function(a: *, b: *) : boolean} isEqual\n * @returns {function}\n */\nexport function memoizeCompare (fn, isEqual) {\n  const memoize = function memoize () {\n    const args = []\n    for (let i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    for (let c = 0; c < memoize.cache.length; c++) {\n      const cached = memoize.cache[c]\n\n      if (isEqual(args, cached.args)) {\n        // TODO: move this cache entry to the top so recently used entries move up?\n        return cached.res\n      }\n    }\n\n    const res = fn.apply(fn, args)\n    memoize.cache.unshift({ args, res })\n\n    return res\n  }\n\n  memoize.cache = []\n\n  return memoize\n}\n\n/**\n * Find the maximum number of arguments expected by a typed function.\n * @param {function} fn   A typed function\n * @return {number} Returns the maximum number of expected arguments.\n *                  Returns -1 when no signatures where found on the function.\n */\nexport function maxArgumentCount (fn) {\n  return Object.keys(fn.signatures || {})\n    .reduce(function (args, signature) {\n      const count = (signature.match(/,/g) || []).length + 1\n      return Math.max(args, count)\n    }, -1)\n}\n","import { memoize } from '../function'\n\n/**\n * Calculate BigNumber e\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns e\n */\nexport const createBigNumberE = memoize(function (BigNumber) {\n  return new BigNumber(1).exp()\n}, hasher)\n\n/**\n * Calculate BigNumber golden ratio, phi = (1+sqrt(5))/2\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns phi\n */\nexport const createBigNumberPhi = memoize(function (BigNumber) {\n  return new BigNumber(1).plus(new BigNumber(5).sqrt()).div(2)\n}, hasher)\n\n/**\n * Calculate BigNumber pi.\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns pi\n */\nexport const createBigNumberPi = memoize(function (BigNumber) {\n  return BigNumber.acos(-1)\n}, hasher)\n\n/**\n * Calculate BigNumber tau, tau = 2 * pi\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns tau\n */\nexport const createBigNumberTau = memoize(function (BigNumber) {\n  return createBigNumberPi(BigNumber).times(2)\n}, hasher)\n\n/**\n * Create a hash for a BigNumber constructor function. The created has is\n * the configured precision\n * @param {Array} args         Supposed to contain a single entry with\n *                             a BigNumber constructor\n * @return {number} precision\n * @private\n */\nfunction hasher (args) {\n  return args[0].precision\n}\n","\nexport const pi = Math.PI\nexport const tau = 2 * Math.PI\nexport const e = Math.E\nexport const phi = 1.61803398874989484820458683436563811772030917980576286213545\n","import Decimal from 'decimal.js'\nimport { factory } from '../../utils/factory'\n\nconst name = 'BigNumber'\nconst dependencies = ['?on', 'config']\n\nexport const createBigNumberClass = /* #__PURE__ */ factory(name, dependencies, ({ on, config }) => {\n  const BigNumber = Decimal.clone({ precision: config.precision })\n\n  /**\n   * Attach type information\n   */\n  BigNumber.prototype.type = 'BigNumber'\n  BigNumber.prototype.isBigNumber = true\n\n  /**\n   * Get a JSON representation of a BigNumber containing\n   * type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   */\n  BigNumber.prototype.toJSON = function () {\n    return {\n      mathjs: 'BigNumber',\n      value: this.toString()\n    }\n  }\n\n  /**\n   * Instantiate a BigNumber from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   * @return {BigNumber}\n   */\n  BigNumber.fromJSON = function (json) {\n    return new BigNumber(json.value)\n  }\n\n  if (on) {\n    // listen for changed in the configuration, automatically apply changed precision\n    on('config', function (curr, prev) {\n      if (curr.precision !== prev.precision) {\n        BigNumber.config({ precision: curr.precision })\n      }\n    })\n  }\n\n  return BigNumber\n}, { isClass: true })\n","import { factory } from '../../utils/factory'\n\nconst name = 'Matrix'\nconst dependencies = []\n\nexport const createMatrixClass = /* #__PURE__ */ factory(name, dependencies, () => {\n  /**\n   * @constructor Matrix\n   *\n   * A Matrix is a wrapper around an Array. A matrix can hold a multi dimensional\n   * array. A matrix can be constructed as:\n   *\n   *     let matrix = math.matrix(data)\n   *\n   * Matrix contains the functions to resize, get and set values, get the size,\n   * clone the matrix and to convert the matrix to a vector, array, or scalar.\n   * Furthermore, one can iterate over the matrix using map and forEach.\n   * The internal Array of the Matrix can be accessed using the function valueOf.\n   *\n   * Example usage:\n   *\n   *     let matrix = math.matrix([[1, 2], [3, 4]])\n   *     matix.size()              // [2, 2]\n   *     matrix.resize([3, 2], 5)\n   *     matrix.valueOf()          // [[1, 2], [3, 4], [5, 5]]\n   *     matrix.subset([1,2])       // 3 (indexes are zero-based)\n   *\n   */\n  function Matrix () {\n    if (!(this instanceof Matrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator')\n    }\n  }\n\n  /**\n   * Attach type information\n   */\n  Matrix.prototype.type = 'Matrix'\n  Matrix.prototype.isMatrix = true\n\n  /**\n   * Get the Matrix storage constructor for the given format.\n   *\n   * @param {string} format       The Matrix storage format.\n   *\n   * @return {Function}           The Matrix storage constructor.\n   */\n  Matrix.storage = function (format) {\n    // TODO: deprecated since v6.0.0. Clean up some day\n    throw new Error('Matrix.storage is deprecated since v6.0.0. ' +\n      'Use the factory function math.matrix instead.')\n  }\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()   // retrieve storage format\n   *\n   * @return {string}           The storage format.\n   */\n  Matrix.prototype.storage = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke storage on a Matrix interface')\n  }\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()    // retrieve matrix datatype\n   *\n   * @return {string}           The datatype.\n   */\n  Matrix.prototype.datatype = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke datatype on a Matrix interface')\n  }\n\n  /**\n   * Create a new Matrix With the type of the current matrix instance\n   * @param {Array | Object} data\n   * @param {string} [datatype]\n   */\n  Matrix.prototype.create = function (data, datatype) {\n    throw new Error('Cannot invoke create on a Matrix interface')\n  }\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  Matrix.prototype.subset = function (index, replacement, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke subset on a Matrix interface')\n  }\n\n  /**\n   * Get a single element from the matrix.\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  Matrix.prototype.get = function (index) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke get on a Matrix interface')\n  }\n\n  /**\n   * Replace a single element in the matrix.\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {Matrix} self\n   */\n  Matrix.prototype.set = function (index, value, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke set on a Matrix interface')\n  }\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  Matrix.prototype.resize = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke resize on a Matrix interface')\n  }\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  Matrix.prototype.reshape = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke reshape on a Matrix interface')\n  }\n\n  /**\n   * Create a clone of the matrix\n   * @return {Matrix} clone\n   */\n  Matrix.prototype.clone = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke clone on a Matrix interface')\n  }\n\n  /**\n   * Retrieve the size of the matrix.\n   * @returns {number[]} size\n   */\n  Matrix.prototype.size = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke size on a Matrix interface')\n  }\n\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Matrix} matrix\n   */\n  Matrix.prototype.map = function (callback, skipZeros) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke map on a Matrix interface')\n  }\n\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n  Matrix.prototype.forEach = function (callback) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke forEach on a Matrix interface')\n  }\n\n  /**\n   * Create an Array with a copy of the data of the Matrix\n   * @returns {Array} array\n   */\n  Matrix.prototype.toArray = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toArray on a Matrix interface')\n  }\n\n  /**\n   * Get the primitive value of the Matrix: a multidimensional array\n   * @returns {Array} array\n   */\n  Matrix.prototype.valueOf = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke valueOf on a Matrix interface')\n  }\n\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  Matrix.prototype.format = function (options) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke format on a Matrix interface')\n  }\n\n  /**\n   * Get a string representation of the matrix\n   * @returns {string} str\n   */\n  Matrix.prototype.toString = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toString on a Matrix interface')\n  }\n\n  return Matrix\n}, { isClass: true })\n","import { factory } from '../../utils/factory'\n\n// Source: https://en.wikipedia.org/wiki/Physical_constant\n\n// Universal constants\nexport const createSpeedOfLight = /* #__PURE__ */ unitFactory('speedOfLight', '299792458', 'm s^-1')\nexport const createGravitationConstant = /* #__PURE__ */ unitFactory('gravitationConstant', '6.67430e-11', 'm^3 kg^-1 s^-2')\nexport const createPlanckConstant = /* #__PURE__ */ unitFactory('planckConstant', '6.62607015e-34', 'J s')\nexport const createReducedPlanckConstant = /* #__PURE__ */ unitFactory('reducedPlanckConstant', '1.0545718176461565e-34', 'J s')\n\n// Electromagnetic constants\nexport const createMagneticConstant = /* #__PURE__ */ unitFactory('magneticConstant', '1.25663706212e-6', 'N A^-2')\nexport const createElectricConstant = /* #__PURE__ */ unitFactory('electricConstant', '8.8541878128e-12', 'F m^-1')\nexport const createVacuumImpedance = /* #__PURE__ */ unitFactory('vacuumImpedance', '376.730313667', 'ohm')\nexport const createCoulomb = /* #__PURE__ */ unitFactory('coulomb', '8.987551792261171e9', 'N m^2 C^-2')\nexport const createElementaryCharge = /* #__PURE__ */ unitFactory('elementaryCharge', '1.602176634e-19', 'C')\nexport const createBohrMagneton = /* #__PURE__ */ unitFactory('bohrMagneton', '9.2740100783e-24', 'J T^-1')\nexport const createConductanceQuantum = /* #__PURE__ */ unitFactory('conductanceQuantum', '7.748091729863649e-5', 'S')\nexport const createInverseConductanceQuantum = /* #__PURE__ */ unitFactory('inverseConductanceQuantum', '12906.403729652257', 'ohm')\nexport const createMagneticFluxQuantum = /* #__PURE__ */ unitFactory('magneticFluxQuantum', '2.0678338484619295e-15', 'Wb')\nexport const createNuclearMagneton = /* #__PURE__ */ unitFactory('nuclearMagneton', '5.0507837461e-27', 'J T^-1')\nexport const createKlitzing = /* #__PURE__ */ unitFactory('klitzing', '25812.807459304513', 'ohm')\nexport const createJosephson = /* #__PURE__ */ unitFactory('josephson', '4.835978484169836e14 Hz V', 'Hz V^-1') // TODO: support for Hz needed\n\n// Atomic and nuclear constants\nexport const createBohrRadius = /* #__PURE__ */ unitFactory('bohrRadius', '5.29177210903e-11', 'm')\nexport const createClassicalElectronRadius = /* #__PURE__ */ unitFactory('classicalElectronRadius', '2.8179403262e-15', 'm')\nexport const createElectronMass = /* #__PURE__ */ unitFactory('electronMass', '9.1093837015e-31', 'kg')\nexport const createFermiCoupling = /* #__PURE__ */ unitFactory('fermiCoupling', '1.1663787e-5', 'GeV^-2')\nexport const createFineStructure = numberFactory('fineStructure', 7.2973525693e-3)\nexport const createHartreeEnergy = /* #__PURE__ */ unitFactory('hartreeEnergy', '4.3597447222071e-18', 'J')\nexport const createProtonMass = /* #__PURE__ */ unitFactory('protonMass', '1.67262192369e-27', 'kg')\nexport const createDeuteronMass = /* #__PURE__ */ unitFactory('deuteronMass', '3.3435830926e-27', 'kg')\nexport const createNeutronMass = /* #__PURE__ */ unitFactory('neutronMass', '1.6749271613e-27', 'kg')\nexport const createQuantumOfCirculation = /* #__PURE__ */ unitFactory('quantumOfCirculation', '3.6369475516e-4', 'm^2 s^-1')\nexport const createRydberg = /* #__PURE__ */ unitFactory('rydberg', '10973731.568160', 'm^-1')\nexport const createThomsonCrossSection = /* #__PURE__ */ unitFactory('thomsonCrossSection', '6.6524587321e-29', 'm^2')\nexport const createWeakMixingAngle = numberFactory('weakMixingAngle', 0.22290)\nexport const createEfimovFactor = numberFactory('efimovFactor', 22.7)\n\n// Physico-chemical constants\nexport const createAtomicMass = /* #__PURE__ */ unitFactory('atomicMass', '1.66053906660e-27', 'kg')\nexport const createAvogadro = /* #__PURE__ */ unitFactory('avogadro', '6.02214076e23', 'mol^-1')\nexport const createBoltzmann = /* #__PURE__ */ unitFactory('boltzmann', '1.380649e-23', 'J K^-1')\nexport const createFaraday = /* #__PURE__ */ unitFactory('faraday', '96485.33212331001', 'C mol^-1')\nexport const createFirstRadiation = /* #__PURE__ */ unitFactory('firstRadiation', '3.7417718521927573e-16', 'W m^2')\n// export const createSpectralRadiance = /* #__PURE__ */ unitFactory('spectralRadiance', '1.1910429723971881e-16', 'W m^2 sr^-1') // TODO spectralRadiance\nexport const createLoschmidt = /* #__PURE__ */ unitFactory('loschmidt', '2.686780111798444e25', 'm^-3')\nexport const createGasConstant = /* #__PURE__ */ unitFactory('gasConstant', '8.31446261815324', 'J K^-1 mol^-1')\nexport const createMolarPlanckConstant = /* #__PURE__ */ unitFactory('molarPlanckConstant', '3.990312712893431e-10', 'J s mol^-1')\nexport const createMolarVolume = /* #__PURE__ */ unitFactory('molarVolume', '0.022413969545014137', 'm^3 mol^-1')\nexport const createSackurTetrode = numberFactory('sackurTetrode', -1.16487052358)\nexport const createSecondRadiation = /* #__PURE__ */ unitFactory('secondRadiation', '0.014387768775039337', 'm K')\nexport const createStefanBoltzmann = /* #__PURE__ */ unitFactory('stefanBoltzmann', '5.67037441918443e-8', 'W m^-2 K^-4')\nexport const createWienDisplacement = /* #__PURE__ */ unitFactory('wienDisplacement', '2.897771955e-3', 'm K')\n\n// Adopted values\nexport const createMolarMass = /* #__PURE__ */ unitFactory('molarMass', '0.99999999965e-3', 'kg mol^-1')\nexport const createMolarMassC12 = /* #__PURE__ */ unitFactory('molarMassC12', '11.9999999958e-3', 'kg mol^-1')\nexport const createGravity = /* #__PURE__ */ unitFactory('gravity', '9.80665', 'm s^-2')\n// atm is defined in Unit.js\n\n// Natural units\nexport const createPlanckLength = /* #__PURE__ */ unitFactory('planckLength', '1.616255e-35', 'm')\nexport const createPlanckMass = /* #__PURE__ */ unitFactory('planckMass', '2.176435e-8', 'kg')\nexport const createPlanckTime = /* #__PURE__ */ unitFactory('planckTime', '5.391245e-44', 's')\nexport const createPlanckCharge = /* #__PURE__ */ unitFactory('planckCharge', '1.87554603778e-18', 'C')\nexport const createPlanckTemperature = /* #__PURE__ */ unitFactory('planckTemperature', '1.416785e+32', 'K')\n\n// helper function to create a factory function which creates a physical constant,\n// a Unit with either a number value or a BigNumber value depending on the configuration\nfunction unitFactory (name, valueStr, unitStr) {\n  const dependencies = ['config', 'Unit', 'BigNumber']\n\n  return factory(name, dependencies, ({ config, Unit, BigNumber }) => {\n    // Note that we can parse into number or BigNumber.\n    // We do not parse into Fractions as that doesn't make sense: we would lose precision of the values\n    // Therefore we dont use Unit.parse()\n    const value = config.number === 'BigNumber'\n      ? new BigNumber(valueStr)\n      : parseFloat(valueStr)\n\n    const unit = new Unit(value, unitStr)\n    unit.fixPrefix = true\n    return unit\n  })\n}\n\n// helper function to create a factory function which creates a numeric constant,\n// either a number or BigNumber depending on the configuration\nfunction numberFactory (name, value) {\n  const dependencies = ['config', 'BigNumber']\n\n  return factory(name, dependencies, ({ config, BigNumber }) => {\n    return config.number === 'BigNumber'\n      ? new BigNumber(value)\n      : value\n  })\n}\n","import Fraction from 'fraction.js'\nimport { factory } from '../../utils/factory'\n\nconst name = 'Fraction'\nconst dependencies = []\n\nexport const createFractionClass = /* #__PURE__ */ factory(name, dependencies, () => {\n  /**\n   * Attach type information\n   */\n  Fraction.prototype.type = 'Fraction'\n  Fraction.prototype.isFraction = true\n\n  /**\n   * Get a JSON representation of a Fraction containing type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   */\n  Fraction.prototype.toJSON = function () {\n    return {\n      mathjs: 'Fraction',\n      n: this.s * this.n,\n      d: this.d\n    }\n  }\n\n  /**\n   * Instantiate a Fraction from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   * @return {BigNumber}\n   */\n  Fraction.fromJSON = function (json) {\n    return new Fraction(json)\n  }\n\n  return Fraction\n}, { isClass: true })\n","import { isArray, isBigNumber, isIndex, isMatrix, isNumber, isString, typeOf } from '../../utils/is'\nimport { arraySize, getArrayDataType, reshape, resize, unsqueeze, validate, validateIndex } from '../../utils/array'\nimport { format } from '../../utils/string'\nimport { isInteger } from '../../utils/number'\nimport { clone, deepStrictEqual } from '../../utils/object'\nimport { DimensionError } from '../../error/DimensionError'\nimport { factory } from '../../utils/factory'\n\nconst name = 'DenseMatrix'\nconst dependencies = [\n  'Matrix'\n]\n\nexport const createDenseMatrixClass = /* #__PURE__ */ factory(name, dependencies, ({ Matrix }) => {\n  /**\n   * Dense Matrix implementation. A regular, dense matrix, supporting multi-dimensional matrices. This is the default matrix type.\n   * @class DenseMatrix\n   */\n  function DenseMatrix (data, datatype) {\n    if (!(this instanceof DenseMatrix)) { throw new SyntaxError('Constructor must be called with the new operator') }\n    if (datatype && !isString(datatype)) { throw new Error('Invalid datatype: ' + datatype) }\n\n    if (isMatrix(data)) {\n      // check data is a DenseMatrix\n      if (data.type === 'DenseMatrix') {\n        // clone data & size\n        this._data = clone(data._data)\n        this._size = clone(data._size)\n        this._datatype = datatype || data._datatype\n      } else {\n        // build data from existing matrix\n        this._data = data.toArray()\n        this._size = data.size()\n        this._datatype = datatype || data._datatype\n      }\n    } else if (data && isArray(data.data) && isArray(data.size)) {\n      // initialize fields from JSON representation\n      this._data = data.data\n      this._size = data.size\n      this._datatype = datatype || data.datatype\n    } else if (isArray(data)) {\n      // replace nested Matrices with Arrays\n      this._data = preprocess(data)\n      // get the dimensions of the array\n      this._size = arraySize(this._data)\n      // verify the dimensions of the array, TODO: compute size while processing array\n      validate(this._data, this._size)\n      // data type unknown\n      this._datatype = datatype\n    } else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + typeOf(data) + ')')\n    } else {\n      // nothing provided\n      this._data = []\n      this._size = [0]\n      this._datatype = datatype\n    }\n  }\n\n  DenseMatrix.prototype = new Matrix()\n\n  /**\n   * Create a new DenseMatrix\n   */\n  DenseMatrix.prototype.createDenseMatrix = function (data, datatype) {\n    return new DenseMatrix(data, datatype)\n  }\n\n  /**\n   * Attach type information\n   */\n  DenseMatrix.prototype.type = 'DenseMatrix'\n  DenseMatrix.prototype.isDenseMatrix = true\n\n  /**\n   * Get the matrix type\n   *\n   * Usage:\n   *    const matrixType = matrix.getDataType()  // retrieves the matrix type\n   *\n   * @memberOf DenseMatrix\n   * @return {string}   type information; if multiple types are found from the Matrix, it will return \"mixed\"\n   */\n  DenseMatrix.prototype.getDataType = function () {\n    return getArrayDataType(this._data, typeOf)\n  }\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()  // retrieve storage format\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The storage format.\n   */\n  DenseMatrix.prototype.storage = function () {\n    return 'dense'\n  }\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()   // retrieve matrix datatype\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The datatype.\n   */\n  DenseMatrix.prototype.datatype = function () {\n    return this._datatype\n  }\n\n  /**\n   * Create a new DenseMatrix\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n  DenseMatrix.prototype.create = function (data, datatype) {\n    return new DenseMatrix(data, datatype)\n  }\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof DenseMatrix\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  DenseMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    switch (arguments.length) {\n      case 1:\n        return _get(this, index)\n\n        // intentional fall through\n      case 2:\n      case 3:\n        return _set(this, index, replacement, defaultValue)\n\n      default:\n        throw new SyntaxError('Wrong number of arguments')\n    }\n  }\n\n  /**\n   * Get a single element from the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  DenseMatrix.prototype.get = function (index) {\n    if (!isArray(index)) { throw new TypeError('Array expected') }\n    if (index.length !== this._size.length) { throw new DimensionError(index.length, this._size.length) }\n\n    // check index\n    for (let x = 0; x < index.length; x++) { validateIndex(index[x], this._size[x]) }\n\n    let data = this._data\n    for (let i = 0, ii = index.length; i < ii; i++) {\n      const indexI = index[i]\n      validateIndex(indexI, data.length)\n      data = data[indexI]\n    }\n\n    return data\n  }\n\n  /**\n   * Replace a single element in the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {DenseMatrix} self\n   */\n  DenseMatrix.prototype.set = function (index, value, defaultValue) {\n    if (!isArray(index)) { throw new TypeError('Array expected') }\n    if (index.length < this._size.length) { throw new DimensionError(index.length, this._size.length, '<') }\n\n    let i, ii, indexI\n\n    // enlarge matrix when needed\n    const size = index.map(function (i) {\n      return i + 1\n    })\n    _fit(this, size, defaultValue)\n\n    // traverse over the dimensions\n    let data = this._data\n    for (i = 0, ii = index.length - 1; i < ii; i++) {\n      indexI = index[i]\n      validateIndex(indexI, data.length)\n      data = data[indexI]\n    }\n\n    // set new value\n    indexI = index[index.length - 1]\n    validateIndex(indexI, data.length)\n    data[indexI] = value\n\n    return this\n  }\n\n  /**\n   * Get a submatrix of this matrix\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index   Zero-based index\n   * @private\n   */\n  function _get (matrix, index) {\n    if (!isIndex(index)) {\n      throw new TypeError('Invalid index')\n    }\n\n    const isScalar = index.isScalar()\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(index.min())\n    } else {\n      // validate dimensions\n      const size = index.size()\n      if (size.length !== matrix._size.length) {\n        throw new DimensionError(size.length, matrix._size.length)\n      }\n\n      // validate if any of the ranges in the index is out of range\n      const min = index.min()\n      const max = index.max()\n      for (let i = 0, ii = matrix._size.length; i < ii; i++) {\n        validateIndex(min[i], matrix._size[i])\n        validateIndex(max[i], matrix._size[i])\n      }\n\n      // retrieve submatrix\n      // TODO: more efficient when creating an empty matrix and setting _data and _size manually\n      return new DenseMatrix(_getSubmatrix(matrix._data, index, size.length, 0), matrix._datatype)\n    }\n  }\n\n  /**\n   * Recursively get a submatrix of a multi dimensional matrix.\n   * Index is not checked for correct number or length of dimensions.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim    Current dimension\n   * @return {Array} submatrix\n   * @private\n   */\n  function _getSubmatrix (data, index, dims, dim) {\n    const last = (dim === dims - 1)\n    const range = index.dimension(dim)\n\n    if (last) {\n      return range.map(function (i) {\n        validateIndex(i, data.length)\n        return data[i]\n      }).valueOf()\n    } else {\n      return range.map(function (i) {\n        validateIndex(i, data.length)\n        const child = data[i]\n        return _getSubmatrix(child, index, dims, dim + 1)\n      }).valueOf()\n    }\n  }\n\n  /**\n   * Replace a submatrix in this matrix\n   * Indexes are zero-based.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index\n   * @param {DenseMatrix | Array | *} submatrix\n   * @param {*} defaultValue          Default value, filled in on new entries when\n   *                                  the matrix is resized.\n   * @return {DenseMatrix} matrix\n   * @private\n   */\n  function _set (matrix, index, submatrix, defaultValue) {\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index')\n    }\n\n    // get index size and check whether the index contains a single value\n    const iSize = index.size()\n    const isScalar = index.isScalar()\n\n    // calculate the size of the submatrix, and convert it into an Array if needed\n    let sSize\n    if (isMatrix(submatrix)) {\n      sSize = submatrix.size()\n      submatrix = submatrix.valueOf()\n    } else {\n      sSize = arraySize(submatrix)\n    }\n\n    if (isScalar) {\n      // set a scalar\n\n      // check whether submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected')\n      }\n\n      matrix.set(index.min(), submatrix, defaultValue)\n    } else {\n      // set a submatrix\n\n      // validate dimensions\n      if (iSize.length < matrix._size.length) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<')\n      }\n\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        let i = 0\n        let outer = 0\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++\n        }\n        while (iSize[i] === 1) {\n          outer++\n          i++\n        }\n\n        // unsqueeze both outer and inner dimensions\n        submatrix = unsqueeze(submatrix, iSize.length, outer, sSize)\n      }\n\n      // check whether the size of the submatrix matches the index size\n      if (!deepStrictEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>')\n      }\n\n      // enlarge matrix when needed\n      const size = index.max().map(function (i) {\n        return i + 1\n      })\n      _fit(matrix, size, defaultValue)\n\n      // insert the sub matrix\n      const dims = iSize.length\n      const dim = 0\n      _setSubmatrix(matrix._data, index, submatrix, dims, dim)\n    }\n\n    return matrix\n  }\n\n  /**\n   * Replace a submatrix of a multi dimensional matrix.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {Array} submatrix\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim\n   * @private\n   */\n  function _setSubmatrix (data, index, submatrix, dims, dim) {\n    const last = (dim === dims - 1)\n    const range = index.dimension(dim)\n\n    if (last) {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex)\n        data[dataIndex] = submatrix[subIndex[0]]\n      })\n    } else {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex)\n        _setSubmatrix(data[dataIndex], index, submatrix[subIndex[0]], dims, dim + 1)\n      })\n    }\n  }\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof DenseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  DenseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!isArray(size)) { throw new TypeError('Array expected') }\n\n    // matrix to resize\n    const m = copy ? this.clone() : this\n    // resize matrix\n    return _resize(m, size, defaultValue)\n  }\n\n  function _resize (matrix, size, defaultValue) {\n    // check size\n    if (size.length === 0) {\n      // first value in matrix\n      let v = matrix._data\n      // go deep\n      while (isArray(v)) {\n        v = v[0]\n      }\n      return v\n    }\n    // resize matrix\n    matrix._size = size.slice(0) // copy the array\n    matrix._data = resize(matrix._data, matrix._size, defaultValue)\n    // return matrix\n    return matrix\n  }\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof DenseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  DenseMatrix.prototype.reshape = function (size, copy) {\n    const m = copy ? this.clone() : this\n\n    m._data = reshape(m._data, size)\n    m._size = size.slice(0)\n    return m\n  }\n\n  /**\n   * Enlarge the matrix when it is smaller than given size.\n   * If the matrix is larger or equal sized, nothing is done.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix           The matrix to be resized\n   * @param {number[]} size\n   * @param {*} defaultValue          Default value, filled in on new entries.\n   * @private\n   */\n  function _fit (matrix, size, defaultValue) {\n    const // copy the array\n      newSize = matrix._size.slice(0)\n\n    let changed = false\n\n    // add dimensions when needed\n    while (newSize.length < size.length) {\n      newSize.push(0)\n      changed = true\n    }\n\n    // enlarge size when needed\n    for (let i = 0, ii = size.length; i < ii; i++) {\n      if (size[i] > newSize[i]) {\n        newSize[i] = size[i]\n        changed = true\n      }\n    }\n\n    if (changed) {\n      // resize only when size is changed\n      _resize(matrix, newSize, defaultValue)\n    }\n  }\n\n  /**\n   * Create a clone of the matrix\n   * @memberof DenseMatrix\n   * @return {DenseMatrix} clone\n   */\n  DenseMatrix.prototype.clone = function () {\n    const m = new DenseMatrix({\n      data: clone(this._data),\n      size: clone(this._size),\n      datatype: this._datatype\n    })\n    return m\n  }\n\n  /**\n   * Retrieve the size of the matrix.\n   * @memberof DenseMatrix\n   * @returns {number[]} size\n   */\n  DenseMatrix.prototype.size = function () {\n    return this._size.slice(0) // return a clone of _size\n  }\n\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   *\n   * @return {DenseMatrix} matrix\n   */\n  DenseMatrix.prototype.map = function (callback) {\n    // matrix instance\n    const me = this\n    const recurse = function (value, index) {\n      if (isArray(value)) {\n        return value.map(function (child, i) {\n          return recurse(child, index.concat(i))\n        })\n      } else {\n        return callback(value, index, me)\n      }\n    }\n    // return dense format\n    return new DenseMatrix({\n      data: recurse(this._data, []),\n      size: clone(this._size),\n      datatype: this._datatype\n    })\n  }\n\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n  DenseMatrix.prototype.forEach = function (callback) {\n    // matrix instance\n    const me = this\n    const recurse = function (value, index) {\n      if (isArray(value)) {\n        value.forEach(function (child, i) {\n          recurse(child, index.concat(i))\n        })\n      } else {\n        callback(value, index, me)\n      }\n    }\n    recurse(this._data, [])\n  }\n\n  /**\n   * Create an Array with a copy of the data of the DenseMatrix\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n  DenseMatrix.prototype.toArray = function () {\n    return clone(this._data)\n  }\n\n  /**\n   * Get the primitive value of the DenseMatrix: a multidimensional array\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n  DenseMatrix.prototype.valueOf = function () {\n    return this._data\n  }\n\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof DenseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  DenseMatrix.prototype.format = function (options) {\n    return format(this._data, options)\n  }\n\n  /**\n   * Get a string representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {string} str\n   */\n  DenseMatrix.prototype.toString = function () {\n    return format(this._data)\n  }\n\n  /**\n   * Get a JSON representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {Object}\n   */\n  DenseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'DenseMatrix',\n      data: this._data,\n      size: this._size,\n      datatype: this._datatype\n    }\n  }\n\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof DenseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix with the diagonal values.\n   */\n  DenseMatrix.prototype.diagonal = function (k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) { k = k.toNumber() }\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number')\n      }\n    } else {\n      // default value\n      k = 0\n    }\n\n    const kSuper = k > 0 ? k : 0\n    const kSub = k < 0 ? -k : 0\n\n    // rows & columns\n    const rows = this._size[0]\n    const columns = this._size[1]\n\n    // number diagonal values\n    const n = Math.min(rows - kSub, columns - kSuper)\n\n    // x is a matrix get diagonal from matrix\n    const data = []\n\n    // loop rows\n    for (let i = 0; i < n; i++) {\n      data[i] = this._data[i + kSub][i + kSuper]\n    }\n\n    // create DenseMatrix\n    return new DenseMatrix({\n      data: data,\n      size: [n],\n      datatype: this._datatype\n    })\n  }\n\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {Array} size                     The matrix size.\n   * @param {number | Matrix | Array } value The values for the diagonal.\n   * @param {number | BigNumber} [k=0]       The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]          The default value for non-diagonal\n   * @param {string} [datatype]              The datatype for the diagonal\n   *\n   * @returns {DenseMatrix}\n   */\n  DenseMatrix.diagonal = function (size, value, k, defaultValue) {\n    if (!isArray(size)) { throw new TypeError('Array expected, size parameter') }\n    if (size.length !== 2) { throw new Error('Only two dimensions matrix are supported') }\n\n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (isBigNumber(s)) {\n        // convert it\n        s = s.toNumber()\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers')\n      }\n      return s\n    })\n\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) { k = k.toNumber() }\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number')\n      }\n    } else {\n      // default value\n      k = 0\n    }\n\n    const kSuper = k > 0 ? k : 0\n    const kSub = k < 0 ? -k : 0\n\n    // rows and columns\n    const rows = size[0]\n    const columns = size[1]\n\n    // number of non-zero items\n    const n = Math.min(rows - kSub, columns - kSuper)\n\n    // value extraction function\n    let _value\n\n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length')\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value[i]\n      }\n    } else if (isMatrix(value)) {\n      // matrix size\n      const ms = value.size()\n      // validate matrix\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length')\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value.get([i])\n      }\n    } else {\n      // define function\n      _value = function () {\n        // return value\n        return value\n      }\n    }\n\n    // discover default value if needed\n    if (!defaultValue) {\n      // check first value in array\n      defaultValue = isBigNumber(_value(0))\n        ? _value(0).mul(0) // trick to create a BigNumber with value zero\n        : 0\n    }\n\n    // empty array\n    let data = []\n\n    // check we need to resize array\n    if (size.length > 0) {\n      // resize array\n      data = resize(data, size, defaultValue)\n      // fill diagonal\n      for (let d = 0; d < n; d++) {\n        data[d + kSub][d + kSuper] = _value(d)\n      }\n    }\n\n    // create DenseMatrix\n    return new DenseMatrix({\n      data: data,\n      size: [rows, columns]\n    })\n  }\n\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof DenseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"DenseMatrix\", data: [], size: []}`,\n   *                       where mathjs is optional\n   * @returns {DenseMatrix}\n   */\n  DenseMatrix.fromJSON = function (json) {\n    return new DenseMatrix(json)\n  }\n\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  DenseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers')\n    }\n    // check dimensions\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported')\n    }\n    // validate index\n    validateIndex(i, this._size[0])\n    validateIndex(j, this._size[0])\n\n    // swap rows\n    DenseMatrix._swapRows(i, j, this._data)\n    // return current instance\n    return this\n  }\n\n  /**\n   * Swap rows i and j in Dense Matrix data structure.\n   *\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   * @param {Array} data     Matrix data\n   */\n  DenseMatrix._swapRows = function (i, j, data) {\n    // swap values i <-> j\n    const vi = data[i]\n    data[i] = data[j]\n    data[j] = vi\n  }\n\n  /**\n   * Preprocess data, which can be an Array or DenseMatrix with nested Arrays and\n   * Matrices. Replaces all nested Matrices with Arrays\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @return {Array} data\n   */\n  function preprocess (data) {\n    for (let i = 0, ii = data.length; i < ii; i++) {\n      const elem = data[i]\n      if (isArray(elem)) {\n        data[i] = preprocess(elem)\n      } else if (elem && elem.isMatrix === true) {\n        data[i] = preprocess(elem.valueOf())\n      }\n    }\n\n    return data\n  }\n\n  return DenseMatrix\n}, { isClass: true })\n","/**\n * Create a typed-function which checks the types of the arguments and\n * can match them against multiple provided signatures. The typed-function\n * automatically converts inputs in order to find a matching signature.\n * Typed functions throw informative errors in case of wrong input arguments.\n *\n * See the library [typed-function](https://github.com/josdejong/typed-function)\n * for detailed documentation.\n *\n * Syntax:\n *\n *     math.typed(name, signatures) : function\n *     math.typed(signatures) : function\n *\n * Examples:\n *\n *     // create a typed function with multiple types per argument (type union)\n *     const fn2 = typed({\n *       'number | boolean': function (b) {\n *         return 'b is a number or boolean'\n *       },\n *       'string, number | boolean': function (a, b) {\n *         return 'a is a string, b is a number or boolean'\n *       }\n *     })\n *\n *     // create a typed function with an any type argument\n *     const log = typed({\n *       'string, any': function (event, data) {\n *         console.log('event: ' + event + ', data: ' + JSON.stringify(data))\n *       }\n *     })\n *\n * @param {string} [name]                          Optional name for the typed-function\n * @param {Object<string, function>} signatures   Object with one or multiple function signatures\n * @returns {function} The created typed-function.\n */\n\nimport {\n  isAccessorNode,\n  isArray,\n  isArrayNode,\n  isAssignmentNode,\n  isBigNumber,\n  isBlockNode,\n  isBoolean,\n  isChain,\n  isComplex,\n  isConditionalNode,\n  isConstantNode,\n  isDate,\n  isDenseMatrix,\n  isFraction,\n  isFunction,\n  isFunctionAssignmentNode,\n  isFunctionNode,\n  isHelp,\n  isIndex,\n  isIndexNode,\n  isMatrix,\n  isNode,\n  isNull,\n  isNumber,\n  isObject,\n  isObjectNode,\n  isOperatorNode,\n  isParenthesisNode,\n  isRange,\n  isRangeNode,\n  isRegExp,\n  isResultSet,\n  isSparseMatrix,\n  isString,\n  isSymbolNode,\n  isUndefined,\n  isUnit\n} from '../../utils/is'\nimport typedFunction from 'typed-function'\nimport { digits } from '../../utils/number'\nimport { factory } from '../../utils/factory'\n\n// returns a new instance of typed-function\nlet _createTyped = function () {\n  // initially, return the original instance of typed-function\n  // consecutively, return a new instance from typed.create.\n  _createTyped = typedFunction.create\n  return typedFunction\n}\n\nconst dependencies = [\n  '?BigNumber',\n  '?Complex',\n  '?DenseMatrix',\n  '?Fraction'\n]\n\n/**\n * Factory function for creating a new typed instance\n * @param {Object} dependencies   Object with data types like Complex and BigNumber\n * @returns {Function}\n */\nexport const createTyped = /* #__PURE__ */ factory('typed', dependencies, function createTyped ({ BigNumber, Complex, DenseMatrix, Fraction }) {\n  // TODO: typed-function must be able to silently ignore signatures with unknown data types\n\n  // get a new instance of typed-function\n  const typed = _createTyped()\n\n  // define all types. The order of the types determines in which order function\n  // arguments are type-checked (so for performance it's important to put the\n  // most used types first).\n  typed.types = [\n    { name: 'number', test: isNumber },\n    { name: 'Complex', test: isComplex },\n    { name: 'BigNumber', test: isBigNumber },\n    { name: 'Fraction', test: isFraction },\n    { name: 'Unit', test: isUnit },\n    { name: 'string', test: isString },\n    { name: 'Chain', test: isChain },\n    { name: 'Array', test: isArray },\n    { name: 'Matrix', test: isMatrix },\n    { name: 'DenseMatrix', test: isDenseMatrix },\n    { name: 'SparseMatrix', test: isSparseMatrix },\n    { name: 'Range', test: isRange },\n    { name: 'Index', test: isIndex },\n    { name: 'boolean', test: isBoolean },\n    { name: 'ResultSet', test: isResultSet },\n    { name: 'Help', test: isHelp },\n    { name: 'function', test: isFunction },\n    { name: 'Date', test: isDate },\n    { name: 'RegExp', test: isRegExp },\n    { name: 'null', test: isNull },\n    { name: 'undefined', test: isUndefined },\n\n    { name: 'AccessorNode', test: isAccessorNode },\n    { name: 'ArrayNode', test: isArrayNode },\n    { name: 'AssignmentNode', test: isAssignmentNode },\n    { name: 'BlockNode', test: isBlockNode },\n    { name: 'ConditionalNode', test: isConditionalNode },\n    { name: 'ConstantNode', test: isConstantNode },\n    { name: 'FunctionNode', test: isFunctionNode },\n    { name: 'FunctionAssignmentNode', test: isFunctionAssignmentNode },\n    { name: 'IndexNode', test: isIndexNode },\n    { name: 'Node', test: isNode },\n    { name: 'ObjectNode', test: isObjectNode },\n    { name: 'OperatorNode', test: isOperatorNode },\n    { name: 'ParenthesisNode', test: isParenthesisNode },\n    { name: 'RangeNode', test: isRangeNode },\n    { name: 'SymbolNode', test: isSymbolNode },\n\n    { name: 'Object', test: isObject } // order 'Object' last, it matches on other classes too\n  ]\n\n  typed.conversions = [\n    {\n      from: 'number',\n      to: 'BigNumber',\n      convert: function (x) {\n        if (!BigNumber) {\n          throwNoBignumber(x)\n        }\n\n        // note: conversion from number to BigNumber can fail if x has >15 digits\n        if (digits(x) > 15) {\n          throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' +\n            '(value: ' + x + '). ' +\n            'Use function bignumber(x) to convert to BigNumber.')\n        }\n        return new BigNumber(x)\n      }\n    }, {\n      from: 'number',\n      to: 'Complex',\n      convert: function (x) {\n        if (!Complex) {\n          throwNoComplex(x)\n        }\n\n        return new Complex(x, 0)\n      }\n    }, {\n      from: 'number',\n      to: 'string',\n      convert: function (x) {\n        return x + ''\n      }\n    }, {\n      from: 'BigNumber',\n      to: 'Complex',\n      convert: function (x) {\n        if (!Complex) {\n          throwNoComplex(x)\n        }\n\n        return new Complex(x.toNumber(), 0)\n      }\n    }, {\n      from: 'Fraction',\n      to: 'BigNumber',\n      convert: function (x) {\n        throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' +\n          'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.')\n      }\n    }, {\n      from: 'Fraction',\n      to: 'Complex',\n      convert: function (x) {\n        if (!Complex) {\n          throwNoComplex(x)\n        }\n\n        return new Complex(x.valueOf(), 0)\n      }\n    }, {\n      from: 'number',\n      to: 'Fraction',\n      convert: function (x) {\n        if (!Fraction) {\n          throwNoFraction(x)\n        }\n\n        const f = new Fraction(x)\n        if (f.valueOf() !== x) {\n          throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' +\n            '(value: ' + x + '). ' +\n            'Use function fraction(x) to convert to Fraction.')\n        }\n        return f\n      }\n    }, {\n      // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`\n      //  from: 'Fraction',\n      //  to: 'number',\n      //  convert: function (x) {\n      //    return x.valueOf()\n      //  }\n      // }, {\n      from: 'string',\n      to: 'number',\n      convert: function (x) {\n        const n = Number(x)\n        if (isNaN(n)) {\n          throw new Error('Cannot convert \"' + x + '\" to a number')\n        }\n        return n\n      }\n    }, {\n      from: 'string',\n      to: 'BigNumber',\n      convert: function (x) {\n        if (!BigNumber) {\n          throwNoBignumber(x)\n        }\n\n        try {\n          return new BigNumber(x)\n        } catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to BigNumber')\n        }\n      }\n    }, {\n      from: 'string',\n      to: 'Fraction',\n      convert: function (x) {\n        if (!Fraction) {\n          throwNoFraction(x)\n        }\n\n        try {\n          return new Fraction(x)\n        } catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to Fraction')\n        }\n      }\n    }, {\n      from: 'string',\n      to: 'Complex',\n      convert: function (x) {\n        if (!Complex) {\n          throwNoComplex(x)\n        }\n\n        try {\n          return new Complex(x)\n        } catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to Complex')\n        }\n      }\n    }, {\n      from: 'boolean',\n      to: 'number',\n      convert: function (x) {\n        return +x\n      }\n    }, {\n      from: 'boolean',\n      to: 'BigNumber',\n      convert: function (x) {\n        if (!BigNumber) {\n          throwNoBignumber(x)\n        }\n\n        return new BigNumber(+x)\n      }\n    }, {\n      from: 'boolean',\n      to: 'Fraction',\n      convert: function (x) {\n        if (!Fraction) {\n          throwNoFraction(x)\n        }\n\n        return new Fraction(+x)\n      }\n    }, {\n      from: 'boolean',\n      to: 'string',\n      convert: function (x) {\n        return String(x)\n      }\n    }, {\n      from: 'Array',\n      to: 'Matrix',\n      convert: function (array) {\n        if (!DenseMatrix) {\n          throwNoMatrix()\n        }\n\n        return new DenseMatrix(array)\n      }\n    }, {\n      from: 'Matrix',\n      to: 'Array',\n      convert: function (matrix) {\n        return matrix.valueOf()\n      }\n    }\n  ]\n\n  return typed\n})\n\nfunction throwNoBignumber (x) {\n  throw new Error(`Cannot convert value ${x} into a BigNumber: no class 'BigNumber' provided`)\n}\n\nfunction throwNoComplex (x) {\n  throw new Error(`Cannot convert value ${x} into a Complex number: no class 'Complex' provided`)\n}\n\nfunction throwNoMatrix () {\n  throw new Error(`Cannot convert array into a Matrix: no class 'DenseMatrix' provided`)\n}\n\nfunction throwNoFraction (x) {\n  throw new Error(`Cannot convert value ${x} into a Fraction, no class 'Fraction' provided.`)\n}\n","import { isCollection, isMatrix } from './is'\nimport { IndexError } from '../error/IndexError'\nimport { arraySize } from './array'\n\n/**\n * Test whether an array contains collections\n * @param {Array} array\n * @returns {boolean} Returns true when the array contains one or multiple\n *                    collections (Arrays or Matrices). Returns false otherwise.\n */\nexport function containsCollections (array) {\n  for (let i = 0; i < array.length; i++) {\n    if (isCollection(array[i])) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Recursively loop over all elements in a given multi dimensional array\n * and invoke the callback on each of the elements.\n * @param {Array | Matrix} array\n * @param {Function} callback     The callback method is invoked with one\n *                                parameter: the current element in the array\n */\nexport function deepForEach (array, callback) {\n  if (isMatrix(array)) {\n    array = array.valueOf()\n  }\n\n  for (let i = 0, ii = array.length; i < ii; i++) {\n    const value = array[i]\n\n    if (Array.isArray(value)) {\n      deepForEach(value, callback)\n    } else {\n      callback(value)\n    }\n  }\n}\n\n/**\n * Execute the callback function element wise for each element in array and any\n * nested array\n * Returns an array with the results\n * @param {Array | Matrix} array\n * @param {Function} callback   The callback is called with two parameters:\n *                              value1 and value2, which contain the current\n *                              element of both arrays.\n * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n *\n * @return {Array | Matrix} res\n */\nexport function deepMap (array, callback, skipZeros) {\n  if (array && (typeof array.map === 'function')) {\n    // TODO: replace array.map with a for loop to improve performance\n    return array.map(function (x) {\n      return deepMap(x, callback, skipZeros)\n    })\n  } else {\n    return callback(array)\n  }\n}\n\n/**\n * Reduce a given matrix or array to a new matrix or\n * array with one less dimension, applying the given\n * callback in the selected dimension.\n * @param {Array | Matrix} mat\n * @param {number} dim\n * @param {Function} callback\n * @return {Array | Matrix} res\n */\nexport function reduce (mat, dim, callback) {\n  const size = Array.isArray(mat) ? arraySize(mat) : mat.size()\n  if (dim < 0 || (dim >= size.length)) {\n    // TODO: would be more clear when throwing a DimensionError here\n    throw new IndexError(dim, size.length)\n  }\n\n  if (isMatrix(mat)) {\n    return mat.create(_reduce(mat.valueOf(), dim, callback))\n  } else {\n    return _reduce(mat, dim, callback)\n  }\n}\n\n/**\n * Recursively reduce a matrix\n * @param {Array} mat\n * @param {number} dim\n * @param {Function} callback\n * @returns {Array} ret\n * @private\n */\nfunction _reduce (mat, dim, callback) {\n  let i, ret, val, tran\n\n  if (dim <= 0) {\n    if (!Array.isArray(mat[0])) {\n      val = mat[0]\n      for (i = 1; i < mat.length; i++) {\n        val = callback(val, mat[i])\n      }\n      return val\n    } else {\n      tran = _switch(mat)\n      ret = []\n      for (i = 0; i < tran.length; i++) {\n        ret[i] = _reduce(tran[i], dim - 1, callback)\n      }\n      return ret\n    }\n  } else {\n    ret = []\n    for (i = 0; i < mat.length; i++) {\n      ret[i] = _reduce(mat[i], dim - 1, callback)\n    }\n    return ret\n  }\n}\n\n/**\n * Transpose a matrix\n * @param {Array} mat\n * @returns {Array} ret\n * @private\n */\nfunction _switch (mat) {\n  const I = mat.length\n  const J = mat[0].length\n  let i, j\n  const ret = []\n  for (j = 0; j < J; j++) {\n    const tmp = []\n    for (i = 0; i < I; i++) {\n      tmp.push(mat[i][j])\n    }\n    ret.push(tmp)\n  }\n  return ret\n}\n\n// TODO: document function scatter\nexport function scatter (a, j, w, x, u, mark, c, f, inverse, update, value) {\n  // a arrays\n  const avalues = a._values\n  const aindex = a._index\n  const aptr = a._ptr\n  // c arrays\n  const cindex = c._index\n\n  // vars\n  let k, k0, k1, i\n\n  // check we need to process values (pattern matrix)\n  if (x) {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k]\n      // check value exists in current j\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark\n        // add i to pattern of C\n        cindex.push(i)\n        // x(i) = A, check we need to call function this time\n        if (update) {\n          // copy value to workspace calling callback function\n          x[i] = inverse ? f(avalues[k], value) : f(value, avalues[k])\n          // function was called on current row\n          u[i] = mark\n        } else {\n          // copy value to workspace\n          x[i] = avalues[k]\n        }\n      } else {\n        // i exists in C already\n        x[i] = inverse ? f(avalues[k], x[i]) : f(x[i], avalues[k])\n        // function was called on current row\n        u[i] = mark\n      }\n    }\n  } else {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k]\n      // check value exists in current j\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark\n        // add i to pattern of C\n        cindex.push(i)\n      } else {\n        // indicate function was called on current row\n        u[i] = mark\n      }\n    }\n  }\n}\n","import { deepMap } from '../../utils/collection'\nimport { isInteger as isIntegerNumber } from '../../utils/number'\nimport { factory } from '../../utils/factory'\n\nconst name = 'isInteger'\nconst dependencies = ['typed']\n\nexport const createIsInteger = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Test whether a value is an integer number.\n   * The function supports `number`, `BigNumber`, and `Fraction`.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isInteger(x)\n   *\n   * Examples:\n   *\n   *    math.isInteger(2)                     // returns true\n   *    math.isInteger(0)                     // returns true\n   *    math.isInteger(0.5)                   // returns false\n   *    math.isInteger(math.bignumber(500))   // returns true\n   *    math.isInteger(math.fraction(4))      // returns true\n   *    math.isInteger('3')                   // returns true\n   *    math.isInteger([3, 0.5, -2])          // returns [true, false, true]\n   *    math.isInteger(math.complex('2-4i')   // throws an error\n   *\n   * See also:\n   *\n   *    isNumeric, isPositive, isNegative, isZero\n   *\n   * @param {number | BigNumber | Fraction | Array | Matrix} x   Value to be tested\n   * @return {boolean}  Returns true when `x` contains a numeric, integer value.\n   *                    Throws an error in case of an unknown data type.\n   */\n  const isInteger = typed(name, {\n    'number': isIntegerNumber, // TODO: what to do with isInteger(add(0.1, 0.2))  ?\n\n    'BigNumber': function (x) {\n      return x.isInt()\n    },\n\n    'Fraction': function (x) {\n      return x.d === 1 && isFinite(x.n)\n    },\n\n    'Array | Matrix': function (x) {\n      return deepMap(x, isInteger)\n    }\n  })\n\n  return isInteger\n})\n","import { deepMap } from '../../utils/collection'\nimport { factory } from '../../utils/factory'\n\nconst name = 'isNumeric'\nconst dependencies = ['typed']\n\nexport const createIsNumeric = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Test whether a value is an numeric value.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isNumeric(x)\n   *\n   * Examples:\n   *\n   *    math.isNumeric(2)                     // returns true\n   *    math.isNumeric('2')                   // returns true\n   *    math.hasNumericValue('2')             // returns true\n   *    math.isNumeric(0)                     // returns true\n   *    math.isNumeric(math.bignumber(500))   // returns true\n   *    math.isNumeric(math.fraction(4))      // returns true\n   *    math.isNumeric(math.complex('2-4i')   // returns false\n   *    math.isNumeric([2.3, 'foo', false])   // returns [true, false, true]\n   *\n   * See also:\n   *\n   *    isZero, isPositive, isNegative, isInteger, hasNumericValue\n   *\n   * @param {*} x       Value to be tested\n   * @return {boolean}  Returns true when `x` is a `number`, `BigNumber`,\n   *                    `Fraction`, or `boolean`. Returns false for other types.\n   *                    Throws an error in case of unknown types.\n   */\n  const isNumeric = typed(name, {\n    'number | BigNumber | Fraction | boolean': function () {\n      return true\n    },\n\n    'Complex | Unit | string | null | undefined | Node': function () {\n      return false\n    },\n\n    'Array | Matrix': function (x) {\n      return deepMap(x, isNumeric)\n    }\n  })\n\n  return isNumeric\n})\n","import { isInteger } from '../../utils/number'\n\nconst n1 = 'number'\n\nexport function isIntegerNumber (x) {\n  return isInteger(x)\n}\nisIntegerNumber.signature = n1\n\nexport function isNegativeNumber (x) {\n  return x < 0\n}\nisNegativeNumber.signature = n1\n\nexport function isPositiveNumber (x) {\n  return x > 0\n}\nisPositiveNumber.signature = n1\n\nexport function isZeroNumber (x) {\n  return x === 0\n}\nisZeroNumber.signature = n1\n\nexport function isNaNNumber (x) {\n  return Number.isNaN(x)\n}\nisNaNNumber.signature = n1\n","import { deepMap } from '../../utils/collection'\nimport { factory } from '../../utils/factory'\nimport { isPositiveNumber } from '../../plain/number'\n\nconst name = 'isPositive'\nconst dependencies = ['typed']\n\nexport const createIsPositive = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Test whether a value is positive: larger than zero.\n   * The function supports types `number`, `BigNumber`, `Fraction`, and `Unit`.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isPositive(x)\n   *\n   * Examples:\n   *\n   *    math.isPositive(3)                     // returns true\n   *    math.isPositive(-2)                    // returns false\n   *    math.isPositive(0)                     // returns false\n   *    math.isPositive(-0)                    // returns false\n   *    math.isPositive(0.5)                   // returns true\n   *    math.isPositive(math.bignumber(2))     // returns true\n   *    math.isPositive(math.fraction(-2, 5))  // returns false\n   *    math.isPositive(math.fraction(1,3))    // returns false\n   *    math.isPositive('2')                   // returns true\n   *    math.isPositive([2, 0, -3])            // returns [true, false, false]\n   *\n   * See also:\n   *\n   *    isNumeric, isZero, isNegative, isInteger\n   *\n   * @param {number | BigNumber | Fraction | Unit | Array | Matrix} x  Value to be tested\n   * @return {boolean}  Returns true when `x` is larger than zero.\n   *                    Throws an error in case of an unknown data type.\n   */\n  const isPositive = typed(name, {\n    'number': isPositiveNumber,\n\n    'BigNumber': function (x) {\n      return !x.isNeg() && !x.isZero() && !x.isNaN()\n    },\n\n    'Fraction': function (x) {\n      return x.s > 0 && x.n > 0\n    },\n\n    'Unit': function (x) {\n      return isPositive(x.value)\n    },\n\n    'Array | Matrix': function (x) {\n      return deepMap(x, isPositive)\n    }\n  })\n\n  return isPositive\n})\n","import { deepMap } from '../../utils/collection'\nimport { factory } from '../../utils/factory'\nimport { isNaNNumber } from '../../plain/number'\n\nconst name = 'isNaN'\nconst dependencies = ['typed']\n\nexport const createIsNaN = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Test whether a value is NaN (not a number).\n   * The function supports types `number`, `BigNumber`, `Fraction`, `Unit` and `Complex`.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isNaN(x)\n   *\n   * Examples:\n   *\n   *    math.isNaN(3)                     // returns false\n   *    math.isNaN(NaN)                   // returns true\n   *    math.isNaN(0)                     // returns false\n   *    math.isNaN(math.bignumber(NaN))   // returns true\n   *    math.isNaN(math.bignumber(0))     // returns false\n   *    math.isNaN(math.fraction(-2, 5))  // returns false\n   *    math.isNaN('-2')                  // returns false\n   *    math.isNaN([2, 0, -3, NaN]')      // returns [false, false, false, true]\n   *\n   * See also:\n   *\n   *    isNumeric, isNegative, isPositive, isZero, isInteger\n   *\n   * @param {number | BigNumber | Fraction | Unit | Array | Matrix} x  Value to be tested\n   * @return {boolean}  Returns true when `x` is NaN.\n   *                    Throws an error in case of an unknown data type.\n   */\n  return typed(name, {\n    'number': isNaNNumber,\n\n    'BigNumber': function (x) {\n      return x.isNaN()\n    },\n\n    'Fraction': function (x) {\n      return false\n    },\n\n    'Complex': function (x) {\n      return x.isNaN()\n    },\n\n    'Unit': function (x) {\n      return Number.isNaN(x.value)\n    },\n\n    'Array | Matrix': function (x) {\n      return deepMap(x, Number.isNaN)\n    }\n  })\n})\n","/**\n * Compares two BigNumbers.\n * @param {BigNumber} x       First value to compare\n * @param {BigNumber} y       Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n */\nexport function nearlyEqual (x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon === null || epsilon === undefined) {\n    return x.eq(y)\n  }\n\n  // use \"==\" operator, handles infinities\n  if (x.eq(y)) {\n    return true\n  }\n\n  // NaN\n  if (x.isNaN() || y.isNaN()) {\n    return false\n  }\n\n  // at this point x and y should be finite\n  if (x.isFinite() && y.isFinite()) {\n    // check numbers are very close, needed when comparing numbers near zero\n    const diff = x.minus(y).abs()\n    if (diff.isZero()) {\n      return true\n    } else {\n      // use relative error\n      const max = x.constructor.max(x.abs(), y.abs())\n      return diff.lte(max.times(epsilon))\n    }\n  }\n\n  // Infinite and Number or negative Infinite and positive Infinite cases\n  return false\n}\n","import { nearlyEqual } from './number'\n\n/**\n * Test whether two complex values are equal provided a given epsilon.\n * Does not use or change the global Complex.EPSILON setting\n * @param {Complex} x\n * @param {Complex} y\n * @param {number} epsilon\n * @returns {boolean}\n */\nexport function complexEquals (x, y, epsilon) {\n  return nearlyEqual(x.re, y.re, epsilon) && nearlyEqual(x.im, y.im, epsilon)\n}\n","import { nearlyEqual as bigNearlyEqual } from '../../utils/bignumber/nearlyEqual'\nimport { nearlyEqual } from '../../utils/number'\nimport { factory } from '../../utils/factory'\nimport { complexEquals } from '../../utils/complex'\n\nconst name = 'equalScalar'\nconst dependencies = ['typed', 'config']\n\nexport const createEqualScalar = /* #__PURE__ */ factory(name, dependencies, ({ typed, config }) => {\n  /**\n   * Test whether two scalar values are nearly equal.\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit} x   First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex} y          Second value to compare\n   * @return {boolean}                                                  Returns true when the compared values are equal, else returns false\n   * @private\n   */\n  const equalScalar = typed(name, {\n\n    'boolean, boolean': function (x, y) {\n      return x === y\n    },\n\n    'number, number': function (x, y) {\n      return nearlyEqual(x, y, config.epsilon)\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.eq(y) || bigNearlyEqual(x, y, config.epsilon)\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.equals(y)\n    },\n\n    'Complex, Complex': function (x, y) {\n      return complexEquals(x, y, config.epsilon)\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base')\n      }\n      return equalScalar(x.value, y.value)\n    }\n  })\n\n  return equalScalar\n})\n\nexport const createEqualScalarNumber = factory(name, ['typed', 'config'], ({ typed, config }) => {\n  return typed(name, {\n    'number, number': function (x, y) {\n      return nearlyEqual(x, y, config.epsilon)\n    }\n  })\n})\n","import { factory } from '../utils/factory'\nimport { deepMap } from '../utils/collection'\n\nconst name = 'number'\nconst dependencies = ['typed']\n\nexport const createNumber = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Create a number or convert a string, boolean, or unit to a number.\n   * When value is a matrix, all elements will be converted to number.\n   *\n   * Syntax:\n   *\n   *    math.number(value)\n   *    math.number(unit, valuelessUnit)\n   *\n   * Examples:\n   *\n   *    math.number(2)                         // returns number 2\n   *    math.number('7.2')                     // returns number 7.2\n   *    math.number(true)                      // returns number 1\n   *    math.number([true, false, true, true]) // returns [1, 0, 1, 1]\n   *    math.number(math.unit('52cm'), 'm')    // returns 0.52\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, matrix, string, unit\n   *\n   * @param {string | number | BigNumber | Fraction | boolean | Array | Matrix | Unit | null} [value]  Value to be converted\n   * @param {Unit | string} [valuelessUnit] A valueless unit, used to convert a unit to a number\n   * @return {number | Array | Matrix} The created number\n   */\n  const number = typed('number', {\n    '': function () {\n      return 0\n    },\n\n    'number': function (x) {\n      return x\n    },\n\n    'string': function (x) {\n      if (x === 'NaN') return NaN\n      const num = Number(x)\n      if (isNaN(num)) {\n        throw new SyntaxError('String \"' + x + '\" is no valid number')\n      }\n      return num\n    },\n\n    'BigNumber': function (x) {\n      return x.toNumber()\n    },\n\n    'Fraction': function (x) {\n      return x.valueOf()\n    },\n\n    'Unit': function (x) {\n      throw new Error('Second argument with valueless unit expected')\n    },\n\n    'null': function (x) {\n      return 0\n    },\n\n    'Unit, string | Unit': function (unit, valuelessUnit) {\n      return unit.toNumber(valuelessUnit)\n    },\n\n    'Array | Matrix': function (x) {\n      return deepMap(x, number)\n    }\n  })\n\n  return number\n})\n","import { isInteger, log2, log10, cbrt, expm1, sign, toFixed, log1p } from '../../utils/number'\n\nconst n1 = 'number'\nconst n2 = 'number, number'\n\nexport function absNumber (a) {\n  return Math.abs(a)\n}\nabsNumber.signature = n1\n\nexport function addNumber (a, b) {\n  return a + b\n}\naddNumber.signature = n2\n\nexport function subtractNumber (a, b) {\n  return a - b\n}\nsubtractNumber.signature = n2\n\nexport function multiplyNumber (a, b) {\n  return a * b\n}\nmultiplyNumber.signature = n2\n\nexport function divideNumber (a, b) {\n  return a / b\n}\ndivideNumber.signature = n2\n\nexport function unaryMinusNumber (x) {\n  return -x\n}\nunaryMinusNumber.signature = n1\n\nexport function unaryPlusNumber (x) {\n  return x\n}\nunaryPlusNumber.signature = n1\n\nexport function cbrtNumber (x) {\n  return cbrt(x)\n}\ncbrtNumber.signature = n1\n\nexport function ceilNumber (x) {\n  return Math.ceil(x)\n}\nceilNumber.signature = n1\n\nexport function cubeNumber (x) {\n  return x * x * x\n}\ncubeNumber.signature = n1\n\nexport function expNumber (x) {\n  return Math.exp(x)\n}\nexpNumber.signature = n1\n\nexport function expm1Number (x) {\n  return expm1(x)\n}\nexpm1Number.signature = n1\n\nexport function fixNumber (x) {\n  return (x > 0) ? Math.floor(x) : Math.ceil(x)\n}\nfixNumber.signature = n1\n\nexport function floorNumber (x) {\n  return Math.floor(x)\n}\nfloorNumber.signature = n1\n\n/**\n * Calculate gcd for numbers\n * @param {number} a\n * @param {number} b\n * @returns {number} Returns the greatest common denominator of a and b\n */\nexport function gcdNumber (a, b) {\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function gcd must be integer numbers')\n  }\n\n  // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  let r\n  while (b !== 0) {\n    r = a % b\n    a = b\n    b = r\n  }\n  return (a < 0) ? -a : a\n}\ngcdNumber.signature = n2\n\n/**\n * Calculate lcm for two numbers\n * @param {number} a\n * @param {number} b\n * @returns {number} Returns the least common multiple of a and b\n */\nexport function lcmNumber (a, b) {\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function lcm must be integer numbers')\n  }\n\n  if (a === 0 || b === 0) {\n    return 0\n  }\n\n  // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  // evaluate lcm here inline to reduce overhead\n  let t\n  const prod = a * b\n  while (b !== 0) {\n    t = b\n    b = a % t\n    a = t\n  }\n  return Math.abs(prod / a)\n}\nlcmNumber.signature = n2\n\n/**\n * Calculate the logarithm of a value.\n * @param {number} x\n * @return {number}\n */\nexport function logNumber (x) {\n  return Math.log(x)\n}\nlogNumber.signature = n1\n\n/**\n * Calculate the 10-base logarithm of a number\n * @param {number} x\n * @return {number}\n */\nexport function log10Number (x) {\n  return log10(x)\n}\nlog10Number.signature = n1\n\n/**\n * Calculate the 2-base logarithm of a number\n * @param {number} x\n * @return {number}\n */\nexport function log2Number (x) {\n  return log2(x)\n}\nlog2Number.signature = n1\n\n/**\n * Calculate the natural logarithm of a `number+1`\n * @param {number} x\n * @returns {number}\n */\nexport function log1pNumber (x) {\n  return log1p(x)\n}\nlog1pNumber.signature = n1\n\n/**\n * Calculate the modulus of two numbers\n * @param {number} x\n * @param {number} y\n * @returns {number} res\n * @private\n */\nexport function modNumber (x, y) {\n  if (y > 0) {\n    // We don't use JavaScript's % operator here as this doesn't work\n    // correctly for x < 0 and x === 0\n    // see https://en.wikipedia.org/wiki/Modulo_operation\n    return x - y * Math.floor(x / y)\n  } else if (y === 0) {\n    return x\n  } else { // y < 0\n    // TODO: implement mod for a negative divisor\n    throw new Error('Cannot calculate mod for a negative divisor')\n  }\n}\nmodNumber.signature = n2\n\n/**\n * Calculate the nth root of a, solve x^root == a\n * http://rosettacode.org/wiki/Nth_root#JavaScript\n * @param {number} a\n * @param {number} root\n * @private\n */\nexport function nthRootNumber (a, root) {\n  const inv = root < 0\n  if (inv) {\n    root = -root\n  }\n\n  if (root === 0) {\n    throw new Error('Root must be non-zero')\n  }\n  if (a < 0 && (Math.abs(root) % 2 !== 1)) {\n    throw new Error('Root must be odd when a is negative.')\n  }\n\n  // edge cases zero and infinity\n  if (a === 0) {\n    return inv ? Infinity : 0\n  }\n  if (!isFinite(a)) {\n    return inv ? 0 : a\n  }\n\n  let x = Math.pow(Math.abs(a), 1 / root)\n  // If a < 0, we require that root is an odd integer,\n  // so (-1) ^ (1/root) = -1\n  x = a < 0 ? -x : x\n  return inv ? 1 / x : x\n\n  // Very nice algorithm, but fails with nthRoot(-2, 3).\n  // Newton's method has some well-known problems at times:\n  // https://en.wikipedia.org/wiki/Newton%27s_method#Failure_analysis\n  /*\n  let x = 1 // Initial guess\n  let xPrev = 1\n  let i = 0\n  const iMax = 10000\n  do {\n    const delta = (a / Math.pow(x, root - 1) - x) / root\n    xPrev = x\n    x = x + delta\n    i++\n  }\n  while (xPrev !== x && i < iMax)\n\n  if (xPrev !== x) {\n    throw new Error('Function nthRoot failed to converge')\n  }\n\n  return inv ? 1 / x : x\n  */\n}\nnthRootNumber.signature = n2\n\nexport function signNumber (x) {\n  return sign(x)\n}\nsignNumber.signature = n1\n\nexport function sqrtNumber (x) {\n  return Math.sqrt(x)\n}\nsqrtNumber.signature = n1\n\nexport function squareNumber (x) {\n  return x * x\n}\nsquareNumber.signature = n1\n\n/**\n * Calculate xgcd for two numbers\n * @param {number} a\n * @param {number} b\n * @return {number} result\n * @private\n */\nexport function xgcdNumber (a, b) {\n  // source: https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm\n  let t // used to swap two variables\n  let q // quotient\n  let r // remainder\n  let x = 0\n  let lastx = 1\n  let y = 1\n  let lasty = 0\n\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function xgcd must be integer numbers')\n  }\n\n  while (b) {\n    q = Math.floor(a / b)\n    r = a - q * b\n\n    t = x\n    x = lastx - q * x\n    lastx = t\n\n    t = y\n    y = lasty - q * y\n    lasty = t\n\n    a = b\n    b = r\n  }\n\n  let res\n  if (a < 0) {\n    res = [-a, -lastx, -lasty]\n  } else {\n    res = [a, a ? lastx : 0, lasty]\n  }\n  return res\n}\nxgcdNumber.signature = n2\n\n/**\n * Calculates the power of x to y, x^y, for two numbers.\n * @param {number} x\n * @param {number} y\n * @return {number} res\n */\nexport function powNumber (x, y) {\n  // x^Infinity === 0 if -1 < x < 1\n  // A real number 0 is returned instead of complex(0)\n  if ((x * x < 1 && y === Infinity) ||\n    (x * x > 1 && y === -Infinity)) {\n    return 0\n  }\n\n  return Math.pow(x, y)\n}\npowNumber.signature = n2\n\n/**\n * round a number to the given number of decimals, or to zero if decimals is\n * not provided\n * @param {number} value\n * @param {number} decimals       number of decimals, between 0 and 15 (0 by default)\n * @return {number} roundedValue\n */\nexport function roundNumber (value, decimals = 0) {\n  return parseFloat(toFixed(value, decimals))\n}\nroundNumber.signature = n2\n\n/**\n * Calculate the norm of a number, the absolute value.\n * @param {number} x\n * @return {number}\n */\nexport function normNumber (x) {\n  return Math.abs(x)\n}\nnormNumber.signature = n1\n","import { factory } from '../../utils/factory'\nimport { deepMap } from '../../utils/collection'\nimport { cubeNumber } from '../../plain/number'\n\nconst name = 'cube'\nconst dependencies = ['typed']\n\nexport const createCube = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Compute the cube of a value, `x * x * x`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.cube(x)\n   *\n   * Examples:\n   *\n   *    math.cube(2)            // returns number 8\n   *    math.pow(2, 3)          // returns number 8\n   *    math.cube(4)            // returns number 64\n   *    4 * 4 * 4               // returns number 64\n   *\n   *    math.cube([1, 2, 3, 4]) // returns Array [1, 8, 27, 64]\n   *\n   * See also:\n   *\n   *    multiply, square, pow, cbrt\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x  Number for which to calculate the cube\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} Cube of x\n   */\n  const cube = typed(name, {\n    'number': cubeNumber,\n\n    'Complex': function (x) {\n      return x.mul(x).mul(x) // Is faster than pow(x, 3)\n    },\n\n    'BigNumber': function (x) {\n      return x.times(x).times(x)\n    },\n\n    'Fraction': function (x) {\n      return x.pow(3) // Is faster than mul()mul()mul()\n    },\n\n    'Array | Matrix': function (x) {\n      // deep map collection, skip zeros since cube(0) = 0\n      return deepMap(x, cube, true)\n    },\n\n    'Unit': function (x) {\n      return x.pow(3)\n    }\n  })\n\n  return cube\n})\n","import { factory } from '../../utils/factory'\nimport { multiplyNumber } from '../../plain/number'\n\nconst name = 'multiplyScalar'\nconst dependencies = ['typed']\n\nexport const createMultiplyScalar = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Multiply two scalar values, `x * y`.\n   * This function is meant for internal use: it is used by the public function\n   * `multiply`\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to multiply\n   * @param  {number | BigNumber | Fraction | Complex} y          Second value to multiply\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Multiplication of `x` and `y`\n   * @private\n   */\n  const multiplyScalar = typed('multiplyScalar', {\n\n    'number, number': multiplyNumber,\n\n    'Complex, Complex': function (x, y) {\n      return x.mul(y)\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.times(y)\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.mul(y)\n    },\n\n    'number | Fraction | BigNumber | Complex, Unit': function (x, y) {\n      const res = y.clone()\n      res.value = (res.value === null) ? res._normalize(x) : multiplyScalar(res.value, x)\n      return res\n    },\n\n    'Unit, number | Fraction | BigNumber | Complex': function (x, y) {\n      const res = x.clone()\n      res.value = (res.value === null) ? res._normalize(y) : multiplyScalar(res.value, y)\n      return res\n    },\n\n    'Unit, Unit': function (x, y) {\n      return x.multiply(y)\n    }\n\n  })\n\n  return multiplyScalar\n})\n","import { isInteger } from '../../utils/number'\n\nconst n1 = 'number'\nconst n2 = 'number, number'\n\nexport function bitAndNumber (x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function bitAnd')\n  }\n\n  return x & y\n}\nbitAndNumber.signature = n2\n\nexport function bitNotNumber (x) {\n  if (!isInteger(x)) {\n    throw new Error('Integer expected in function bitNot')\n  }\n\n  return ~x\n}\nbitNotNumber.signature = n1\n\nexport function bitOrNumber (x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function bitOr')\n  }\n\n  return x | y\n}\nbitOrNumber.signature = n2\n\nexport function bitXorNumber (x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function bitXor')\n  }\n\n  return x ^ y\n}\nbitXorNumber.signature = n2\n\nexport function leftShiftNumber (x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function leftShift')\n  }\n\n  return x << y\n}\nleftShiftNumber.signature = n2\n\nexport function rightArithShiftNumber (x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function rightArithShift')\n  }\n\n  return x >> y\n}\nrightArithShiftNumber.signature = n2\n\nexport function rightLogShiftNumber (x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function rightLogShift')\n  }\n\n  return x >>> y\n}\nrightLogShiftNumber.signature = n2\n","import { bitNotBigNumber } from '../../utils/bignumber/bitwise'\nimport { deepMap } from '../../utils/collection'\nimport { factory } from '../../utils/factory'\nimport { bitNotNumber } from '../../plain/number'\n\nconst name = 'bitNot'\nconst dependencies = ['typed']\n\nexport const createBitNot = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Bitwise NOT value, `~x`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the best prefix base.\n   *\n   * Syntax:\n   *\n   *    math.bitNot(x)\n   *\n   * Examples:\n   *\n   *    math.bitNot(1)               // returns number -2\n   *\n   *    math.bitNot([2, -3, 4])      // returns Array [-3, 2, 5]\n   *\n   * See also:\n   *\n   *    bitAnd, bitOr, bitXor, leftShift, rightArithShift, rightLogShift\n   *\n   * @param  {number | BigNumber | Array | Matrix} x Value to not\n   * @return {number | BigNumber | Array | Matrix} NOT of `x`\n   */\n  const bitNot = typed(name, {\n    'number': bitNotNumber,\n\n    'BigNumber': bitNotBigNumber,\n\n    'Array | Matrix': function (x) {\n      return deepMap(x, bitNot)\n    }\n  })\n\n  return bitNot\n})\n","const n1 = 'number'\nconst n2 = 'number, number'\n\nexport function notNumber (x) {\n  return !x\n}\nnotNumber.signature = n1\n\nexport function orNumber (x, y) {\n  return !!(x || y)\n}\norNumber.signature = n2\n\nexport function xorNumber (x, y) {\n  return !!x !== !!y\n}\nxorNumber.signature = n2\n\nexport function andNumber (x, y) {\n  return !!(x && y)\n}\nandNumber.signature = n2\n","import { deepMap } from '../../utils/collection'\nimport { sign } from '../../utils/number'\nimport { factory } from '../../utils/factory'\n\nconst name = 'erf'\nconst dependencies = [\n  'typed'\n]\n\nexport const createErf = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Compute the erf function of a value using a rational Chebyshev\n   * approximations for different intervals of x.\n   *\n   * This is a translation of W. J. Cody's Fortran implementation from 1987\n   * ( https://www.netlib.org/specfun/erf ). See the AMS publication\n   * \"Rational Chebyshev Approximations for the Error Function\" by W. J. Cody\n   * for an explanation of this process.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.erf(x)\n   *\n   * Examples:\n   *\n   *    math.erf(0.2)    // returns 0.22270258921047847\n   *    math.erf(-0.5)   // returns -0.5204998778130465\n   *    math.erf(4)      // returns 0.9999999845827421\n   *\n   * @param {number | Array | Matrix} x   A real number\n   * @return {number | Array | Matrix}    The erf of `x`\n   */\n  const erf = typed('name', {\n    'number': function (x) {\n      const y = Math.abs(x)\n\n      if (y >= MAX_NUM) {\n        return sign(x)\n      }\n      if (y <= THRESH) {\n        return sign(x) * erf1(y)\n      }\n      if (y <= 4.0) {\n        return sign(x) * (1 - erfc2(y))\n      }\n      return sign(x) * (1 - erfc3(y))\n    },\n\n    'Array | Matrix': function (n) {\n      return deepMap(n, erf)\n    }\n\n    // TODO: For complex numbers, use the approximation for the Faddeeva function\n    //  from \"More Efficient Computation of the Complex Error Function\" (AMS)\n\n  })\n\n  /**\n   * Approximates the error function erf() for x <= 0.46875 using this function:\n   *               n\n   * erf(x) = x * sum (p_j * x^(2j)) / (q_j * x^(2j))\n   *              j=0\n   */\n  function erf1 (y) {\n    const ysq = y * y\n    let xnum = P[0][4] * ysq\n    let xden = ysq\n    let i\n\n    for (i = 0; i < 3; i += 1) {\n      xnum = (xnum + P[0][i]) * ysq\n      xden = (xden + Q[0][i]) * ysq\n    }\n    return y * (xnum + P[0][3]) / (xden + Q[0][3])\n  }\n\n  /**\n   * Approximates the complement of the error function erfc() for\n   * 0.46875 <= x <= 4.0 using this function:\n   *                       n\n   * erfc(x) = e^(-x^2) * sum (p_j * x^j) / (q_j * x^j)\n   *                      j=0\n   */\n  function erfc2 (y) {\n    let xnum = P[1][8] * y\n    let xden = y\n    let i\n\n    for (i = 0; i < 7; i += 1) {\n      xnum = (xnum + P[1][i]) * y\n      xden = (xden + Q[1][i]) * y\n    }\n    const result = (xnum + P[1][7]) / (xden + Q[1][7])\n    const ysq = parseInt(y * 16) / 16\n    const del = (y - ysq) * (y + ysq)\n    return Math.exp(-ysq * ysq) * Math.exp(-del) * result\n  }\n\n  /**\n   * Approximates the complement of the error function erfc() for x > 4.0 using\n   * this function:\n   *\n   * erfc(x) = (e^(-x^2) / x) * [ 1/sqrt(pi) +\n   *               n\n   *    1/(x^2) * sum (p_j * x^(-2j)) / (q_j * x^(-2j)) ]\n   *              j=0\n   */\n  function erfc3 (y) {\n    let ysq = 1 / (y * y)\n    let xnum = P[2][5] * ysq\n    let xden = ysq\n    let i\n\n    for (i = 0; i < 4; i += 1) {\n      xnum = (xnum + P[2][i]) * ysq\n      xden = (xden + Q[2][i]) * ysq\n    }\n    let result = ysq * (xnum + P[2][4]) / (xden + Q[2][4])\n    result = (SQRPI - result) / y\n    ysq = parseInt(y * 16) / 16\n    const del = (y - ysq) * (y + ysq)\n    return Math.exp(-ysq * ysq) * Math.exp(-del) * result\n  }\n\n  return erf\n})\n\n/**\n * Upper bound for the first approximation interval, 0 <= x <= THRESH\n * @constant\n */\nconst THRESH = 0.46875\n\n/**\n * Constant used by W. J. Cody's Fortran77 implementation to denote sqrt(pi)\n * @constant\n */\nconst SQRPI = 5.6418958354775628695e-1\n\n/**\n * Coefficients for each term of the numerator sum (p_j) for each approximation\n * interval (see W. J. Cody's paper for more details)\n * @constant\n */\nconst P = [[\n  3.16112374387056560e00, 1.13864154151050156e02,\n  3.77485237685302021e02, 3.20937758913846947e03,\n  1.85777706184603153e-1\n], [\n  5.64188496988670089e-1, 8.88314979438837594e00,\n  6.61191906371416295e01, 2.98635138197400131e02,\n  8.81952221241769090e02, 1.71204761263407058e03,\n  2.05107837782607147e03, 1.23033935479799725e03,\n  2.15311535474403846e-8\n], [\n  3.05326634961232344e-1, 3.60344899949804439e-1,\n  1.25781726111229246e-1, 1.60837851487422766e-2,\n  6.58749161529837803e-4, 1.63153871373020978e-2\n]]\n\n/**\n * Coefficients for each term of the denominator sum (q_j) for each approximation\n * interval (see W. J. Cody's paper for more details)\n * @constant\n */\nconst Q = [[\n  2.36012909523441209e01, 2.44024637934444173e02,\n  1.28261652607737228e03, 2.84423683343917062e03\n], [\n  1.57449261107098347e01, 1.17693950891312499e02,\n  5.37181101862009858e02, 1.62138957456669019e03,\n  3.29079923573345963e03, 4.36261909014324716e03,\n  3.43936767414372164e03, 1.23033935480374942e03\n], [\n  2.56852019228982242e00, 1.87295284992346047e00,\n  5.27905102951428412e-1, 6.05183413124413191e-2,\n  2.33520497626869185e-3\n]]\n\n/**\n * Maximum/minimum safe numbers to input to erf() (in ES6+, this number is\n * Number.[MAX|MIN]_SAFE_INTEGER). erf() for all numbers beyond this limit will\n * return 1\n */\nconst MAX_NUM = Math.pow(2, 53)\n","import { acosh, asinh, atanh, cosh, sign, sinh, tanh } from '../../utils/number'\n\nconst n1 = 'number'\nconst n2 = 'number, number'\n\nexport function acosNumber (x) {\n  return Math.acos(x)\n}\nacosNumber.signature = n1\n\nexport function acoshNumber (x) {\n  return acosh(x)\n}\nacoshNumber.signature = n1\n\nexport function acotNumber (x) {\n  return Math.atan(1 / x)\n}\nacotNumber.signature = n1\n\nexport function acothNumber (x) {\n  return isFinite(x)\n    ? (Math.log((x + 1) / x) + Math.log(x / (x - 1))) / 2\n    : 0\n}\nacothNumber.signature = n1\n\nexport function acscNumber (x) {\n  return Math.asin(1 / x)\n}\nacscNumber.signature = n1\n\nexport function acschNumber (x) {\n  const xInv = 1 / x\n  return Math.log(xInv + Math.sqrt(xInv * xInv + 1))\n}\nacschNumber.signature = n1\n\nexport function asecNumber (x) {\n  return Math.acos(1 / x)\n}\nasecNumber.signature = n1\n\nexport function asechNumber (x) {\n  const xInv = 1 / x\n  const ret = Math.sqrt(xInv * xInv - 1)\n  return Math.log(ret + xInv)\n}\nasechNumber.signature = n1\n\nexport function asinNumber (x) {\n  return Math.asin(x)\n}\nasinNumber.signature = n1\n\nexport function asinhNumber (x) {\n  return asinh(x)\n}\nasinhNumber.signature = n1\n\nexport function atanNumber (x) {\n  return Math.atan(x)\n}\natanNumber.signature = n1\n\nexport function atan2Number (y, x) {\n  return Math.atan2(y, x)\n}\natan2Number.signature = n2\n\nexport function atanhNumber (x) {\n  return atanh(x)\n}\natanhNumber.signature = n1\n\nexport function cosNumber (x) {\n  return Math.cos(x)\n}\ncosNumber.signature = n1\n\nexport function coshNumber (x) {\n  return cosh(x)\n}\ncoshNumber.signature = n1\n\nexport function cotNumber (x) {\n  return 1 / Math.tan(x)\n}\ncotNumber.signature = n1\n\nexport function cothNumber (x) {\n  const e = Math.exp(2 * x)\n  return (e + 1) / (e - 1)\n}\ncothNumber.signature = n1\n\nexport function cscNumber (x) {\n  return 1 / Math.sin(x)\n}\ncscNumber.signature = n1\n\nexport function cschNumber (x) {\n  // consider values close to zero (+/-)\n  if (x === 0) {\n    return Number.POSITIVE_INFINITY\n  } else {\n    return Math.abs(2 / (Math.exp(x) - Math.exp(-x))) * sign(x)\n  }\n}\ncschNumber.signature = n1\n\nexport function secNumber (x) {\n  return 1 / Math.cos(x)\n}\nsecNumber.signature = n1\n\nexport function sechNumber (x) {\n  return 2 / (Math.exp(x) + Math.exp(-x))\n}\nsechNumber.signature = n1\n\nexport function sinNumber (x) {\n  return Math.sin(x)\n}\nsinNumber.signature = n1\n\nexport function sinhNumber (x) {\n  return sinh(x)\n}\nsinhNumber.signature = n1\n\nexport function tanNumber (x) {\n  return Math.tan(x)\n}\ntanNumber.signature = n1\n\nexport function tanhNumber (x) {\n  return tanh(x)\n}\ntanhNumber.signature = n1\n","/** @param {number} i\n *  @param {number} n\n *  @returns {number} product of i to n\n */\nexport function product (i, n) {\n  let half\n  if (n < i) {\n    return 1\n  }\n  if (n === i) {\n    return n\n  }\n  half = (n + i) >> 1 // divide (n + i) by 2 and truncate to integer\n  return product(i, half) * product(half + 1, n)\n}\n","import { isInteger } from '../../utils/number'\nimport { product } from '../../utils/product'\n\nexport function combinationsNumber (n, k) {\n  let prodrange, nMinusk\n\n  if (!isInteger(n) || n < 0) {\n    throw new TypeError('Positive integer value expected in function combinations')\n  }\n  if (!isInteger(k) || k < 0) {\n    throw new TypeError('Positive integer value expected in function combinations')\n  }\n  if (k > n) {\n    throw new TypeError('k must be less than or equal to n')\n  }\n\n  nMinusk = n - k\n\n  if (k < nMinusk) {\n    prodrange = product(nMinusk + 1, n)\n    return prodrange / product(1, k)\n  }\n  prodrange = product(k + 1, n)\n  return prodrange / product(1, nMinusk)\n}\ncombinationsNumber.signature = 'number, number'\n","/**\n * Log a console.warn message only once\n */\nexport const warnOnce = (() => {\n  const messages = {}\n\n  return function warnOnce (...args) {\n    const message = args.join(', ')\n\n    if (!messages[message]) {\n      messages[message] = true\n\n      console.warn('Warning:', ...args)\n    }\n  }\n})()\n","import { factory } from '../../utils/factory'\nimport { randomMatrix } from './util/randomMatrix'\nimport { createRng } from './util/seededRNG'\nimport { isMatrix } from '../../utils/is'\n\nconst name = 'randomInt'\nconst dependencies = ['typed', 'config', '?on']\n\nexport const createRandomInt = /* #__PURE__ */ factory(name, dependencies, ({ typed, config, on }) => {\n  // seeded pseudo random number generator\n  let rng = createRng(config.randomSeed)\n\n  if (on) {\n    on('config', function (curr, prev) {\n      if (curr.randomSeed !== prev.randomSeed) {\n        rng = createRng(curr.randomSeed)\n      }\n    })\n  }\n\n  /**\n   * Return a random integer number larger or equal to `min` and smaller than `max`\n   * using a uniform distribution.\n   *\n   * Syntax:\n   *\n   *     math.randomInt()                // generate a random integer between 0 and 1\n   *     math.randomInt(max)             // generate a random integer between 0 and max\n   *     math.randomInt(min, max)        // generate a random integer between min and max\n   *     math.randomInt(size)            // generate a matrix with random integer between 0 and 1\n   *     math.randomInt(size, max)       // generate a matrix with random integer between 0 and max\n   *     math.randomInt(size, min, max)  // generate a matrix with random integer between min and max\n   *\n   * Examples:\n   *\n   *     math.randomInt(100)    // returns a random integer between 0 and 100\n   *     math.randomInt(30, 40) // returns a random integer between 30 and 40\n   *     math.randomInt([2, 3]) // returns a 2x3 matrix with random integers between 0 and 1\n   *\n   * See also:\n   *\n   *     random, pickRandom\n   *\n   * @param {Array | Matrix} [size] If provided, an array or matrix with given\n   *                                size and filled with random values is returned\n   * @param {number} [min]  Minimum boundary for the random value, included\n   * @param {number} [max]  Maximum boundary for the random value, excluded\n   * @return {number | Array | Matrix} A random integer value\n   */\n  return typed(name, {\n    '': () => _randomInt(0, 1),\n    'number': (max) => _randomInt(0, max),\n    'number, number': (min, max) => _randomInt(min, max),\n    'Array | Matrix': (size) => _randomIntMatrix(size, 0, 1),\n    'Array | Matrix, number': (size, max) => _randomIntMatrix(size, 0, max),\n    'Array | Matrix, number, number': (size, min, max) => _randomIntMatrix(size, min, max)\n  })\n\n  function _randomIntMatrix (size, min, max) {\n    const res = randomMatrix(size.valueOf(), () => _randomInt(min, max))\n    return isMatrix(size) ? size.create(res) : res\n  }\n\n  function _randomInt (min, max) {\n    return Math.floor(min + rng() * (max - min))\n  }\n})\n","import { factory } from '../../../utils/factory'\nimport { deepMap } from '../../../utils/collection'\n\nconst name = 'fraction'\nconst dependencies = ['typed', 'Fraction']\n\nexport const createFraction = /* #__PURE__ */ factory(name, dependencies, ({ typed, Fraction }) => {\n  /**\n   * Create a fraction convert a value to a fraction.\n   *\n   * Syntax:\n   *     math.fraction(numerator, denominator)\n   *     math.fraction({n: numerator, d: denominator})\n   *     math.fraction(matrix: Array | Matrix)         Turn all matrix entries\n   *                                                   into fractions\n   *\n   * Examples:\n   *\n   *     math.fraction(1, 3)\n   *     math.fraction('2/3')\n   *     math.fraction({n: 2, d: 3})\n   *     math.fraction([0.2, 0.25, 1.25])\n   *\n   * See also:\n   *\n   *    bignumber, number, string, unit\n   *\n   * @param {number | string | Fraction | BigNumber | Array | Matrix} [args]\n   *            Arguments specifying the numerator and denominator of\n   *            the fraction\n   * @return {Fraction | Array | Matrix} Returns a fraction\n   */\n  const fraction = typed('fraction', {\n    'number': function (x) {\n      if (!isFinite(x) || isNaN(x)) {\n        throw new Error(x + ' cannot be represented as a fraction')\n      }\n\n      return new Fraction(x)\n    },\n\n    'string': function (x) {\n      return new Fraction(x)\n    },\n\n    'number, number': function (numerator, denominator) {\n      return new Fraction(numerator, denominator)\n    },\n\n    'null': function (x) {\n      return new Fraction(0)\n    },\n\n    'BigNumber': function (x) {\n      return new Fraction(x.toString())\n    },\n\n    'Fraction': function (x) {\n      return x // fractions are immutable\n    },\n\n    'Object': function (x) {\n      return new Fraction(x)\n    },\n\n    'Array | Matrix': function (x) {\n      return deepMap(x, fraction)\n    }\n  })\n\n  return fraction\n})\n","import { factory } from '../../utils/factory'\nimport { deepMap } from '../../utils/collection'\nimport { unaryMinusNumber } from '../../plain/number'\n\nconst name = 'unaryMinus'\nconst dependencies = ['typed']\n\nexport const createUnaryMinus = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Inverse the sign of a value, apply a unary minus operation.\n   *\n   * For matrices, the function is evaluated element wise. Boolean values and\n   * strings will be converted to a number. For complex numbers, both real and\n   * complex value are inverted.\n   *\n   * Syntax:\n   *\n   *    math.unaryMinus(x)\n   *\n   * Examples:\n   *\n   *    math.unaryMinus(3.5)      // returns -3.5\n   *    math.unaryMinus(-4.2)     // returns 4.2\n   *\n   * See also:\n   *\n   *    add, subtract, unaryPlus\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Number to be inverted.\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Returns the value with inverted sign.\n   */\n  const unaryMinus = typed(name, {\n    'number': unaryMinusNumber,\n\n    'Complex': function (x) {\n      return x.neg()\n    },\n\n    'BigNumber': function (x) {\n      return x.neg()\n    },\n\n    'Fraction': function (x) {\n      return x.neg()\n    },\n\n    'Unit': function (x) {\n      const res = x.clone()\n      res.value = unaryMinus(x.value)\n      return res\n    },\n\n    'Array | Matrix': function (x) {\n      // deep map collection, skip zeros since unaryMinus(0) = 0\n      return deepMap(x, unaryMinus, true)\n    }\n\n    // TODO: add support for string\n  })\n\n  return unaryMinus\n})\n","import { factory } from '../../utils/factory'\nimport { addNumber } from '../../plain/number'\n\nconst name = 'addScalar'\nconst dependencies = ['typed']\n\nexport const createAddScalar = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Add two scalar values, `x + y`.\n   * This function is meant for internal use: it is used by the public function\n   * `add`\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to add\n   * @param  {number | BigNumber | Fraction | Complex} y          Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Sum of `x` and `y`\n   * @private\n   */\n  const addScalar = typed(name, {\n\n    'number, number': addNumber,\n\n    'Complex, Complex': function (x, y) {\n      return x.add(y)\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.plus(y)\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.add(y)\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (x.value === null || x.value === undefined) throw new Error('Parameter x contains a unit with undefined value')\n      if (y.value === null || y.value === undefined) throw new Error('Parameter y contains a unit with undefined value')\n      if (!x.equalBase(y)) throw new Error('Units do not match')\n\n      const res = x.clone()\n      res.value = addScalar(res.value, y.value)\n      res.fixPrefix = false\n      return res\n    }\n  })\n\n  return addScalar\n})\n","import { factory } from '../../utils/factory'\nimport { deepMap } from '../../utils/collection'\n\nconst name = 'sqrt'\nconst dependencies = ['config', 'typed', 'Complex']\n\nexport const createSqrt = /* #__PURE__ */ factory(name, dependencies, ({ config, typed, Complex }) => {\n  /**\n   * Calculate the square root of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sqrt(x)\n   *\n   * Examples:\n   *\n   *    math.sqrt(25)                // returns 5\n   *    math.square(5)               // returns 25\n   *    math.sqrt(-4)                // returns Complex 2i\n   *\n   * See also:\n   *\n   *    square, multiply, cube, cbrt, sqrtm\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix | Unit} x\n   *            Value for which to calculate the square root.\n   * @return {number | BigNumber | Complex | Array | Matrix | Unit}\n   *            Returns the square root of `x`\n   */\n  const sqrt = typed('sqrt', {\n    'number': _sqrtNumber,\n\n    'Complex': function (x) {\n      return x.sqrt()\n    },\n\n    'BigNumber': function (x) {\n      if (!x.isNegative() || config.predictable) {\n        return x.sqrt()\n      } else {\n        // negative value -> downgrade to number to do complex value computation\n        return _sqrtNumber(x.toNumber())\n      }\n    },\n\n    'Array | Matrix': function (x) {\n      // deep map collection, skip zeros since sqrt(0) = 0\n      return deepMap(x, sqrt, true)\n    },\n\n    'Unit': function (x) {\n      // Someday will work for complex units when they are implemented\n      return x.pow(0.5)\n    }\n\n  })\n\n  /**\n   * Calculate sqrt for a number\n   * @param {number} x\n   * @returns {number | Complex} Returns the square root of x\n   * @private\n   */\n  function _sqrtNumber (x) {\n    if (isNaN(x)) {\n      return NaN\n    } else if (x >= 0 || config.predictable) {\n      return Math.sqrt(x)\n    } else {\n      return new Complex(x, 0).sqrt()\n    }\n  }\n\n  return sqrt\n})\n","import { flatten } from '../../utils/array'\nimport { factory } from '../../utils/factory'\n\nconst name = 'mode'\nconst dependencies = ['typed', 'isNaN', 'isNumeric']\n\nexport const createMode = /* #__PURE__ */ factory(name, dependencies, ({ typed, isNaN, isNumeric }) => {\n  /**\n  * Computes the mode of a set of numbers or a list with values(numbers or characters).\n  * If there are more than one modes, it returns a list of those values.\n  *\n  * Syntax:\n  *\n  *     math.mode(a, b, c, ...)\n  *     math.mode(A)\n  *\n  * Examples:\n  *\n  *     math.mode(2, 1, 4, 3, 1)                            // returns [1]\n  *     math.mode([1, 2.7, 3.2, 4, 2.7])                    // returns [2.7]\n  *     math.mode(1, 4, 6, 1, 6)                             // returns [1, 6]\n  *     math.mode('a','a','b','c')                           // returns [\"a\"]\n  *     math.mode(1, 1.5, 'abc')                             // returns [1, 1.5, \"abc\"]\n  *\n  * See also:\n  *\n  *     median,\n  *     mean\n  *\n  * @param {... *} args  A single matrix\n  * @return {*} The mode of all values\n  */\n  return typed(name, {\n    'Array | Matrix': _mode,\n\n    '...': function (args) {\n      return _mode(args)\n    }\n  })\n\n  /**\n   * Calculates the mode in an 1-dimensional array\n   * @param {Array} values\n   * @return {Array} mode\n   * @private\n   */\n  function _mode (values) {\n    values = flatten(values.valueOf())\n    const num = values.length\n    if (num === 0) {\n      throw new Error('Cannot calculate mode of an empty array')\n    }\n\n    const count = {}\n    let mode = []\n    let max = 0\n    for (let i = 0; i < values.length; i++) {\n      const value = values[i]\n\n      if (isNumeric(value) && isNaN(value)) {\n        throw new Error('Cannot calculate mode of an array containing NaN values')\n      }\n\n      if (!(value in count)) {\n        count[value] = 0\n      }\n\n      count[value]++\n\n      if (count[value] === max) {\n        mode.push(value)\n      } else if (count[value] > max) {\n        max = count[value]\n        mode = [value]\n      }\n    }\n    return mode\n  }\n})\n","import { factory } from '../../utils/factory'\nimport { deepMap } from '../../utils/collection'\nimport { acoshNumber } from '../../plain/number'\n\nconst name = 'acosh'\nconst dependencies = ['typed', 'config', 'Complex']\n\nexport const createAcosh = /* #__PURE__ */ factory(name, dependencies, ({ typed, config, Complex }) => {\n  /**\n   * Calculate the hyperbolic arccos of a value,\n   * defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acosh(x)\n   *\n   * Examples:\n   *\n   *    math.acosh(1.5)       // returns 0.9624236501192069\n   *\n   * See also:\n   *\n   *    cosh, asinh, atanh\n   *\n   * @param {number | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Hyperbolic arccosine of x\n   */\n  const acosh = typed(name, {\n    'number': function (x) {\n      if (x >= 1 || config.predictable) {\n        return acoshNumber(x)\n      }\n      if (x <= -1) {\n        return new Complex(Math.log(Math.sqrt(x * x - 1) - x), Math.PI)\n      }\n      return new Complex(x, 0).acosh()\n    },\n\n    'Complex': function (x) {\n      return x.acosh()\n    },\n\n    'BigNumber': function (x) {\n      return x.acosh()\n    },\n\n    'Array | Matrix': function (x) {\n      return deepMap(x, acosh)\n    }\n  })\n\n  return acosh\n})\n","import { isArray, isBigNumber, isIndex, isMatrix, isNumber, isString, typeOf } from '../../utils/is'\nimport { isInteger } from '../../utils/number'\nimport { format } from '../../utils/string'\nimport { clone, deepStrictEqual } from '../../utils/object'\nimport { arraySize, getArrayDataType, unsqueeze, validateIndex } from '../../utils/array'\nimport { factory } from '../../utils/factory'\nimport { DimensionError } from '../../error/DimensionError'\n\nconst name = 'SparseMatrix'\nconst dependencies = [\n  'typed',\n  'equalScalar',\n  'Matrix'\n]\n\nexport const createSparseMatrixClass = /* #__PURE__ */ factory(name, dependencies, ({ typed, equalScalar, Matrix }) => {\n  /**\n   * Sparse Matrix implementation. This type implements a Compressed Column Storage format\n   * for sparse matrices.\n   * @class SparseMatrix\n   */\n  function SparseMatrix (data, datatype) {\n    if (!(this instanceof SparseMatrix)) { throw new SyntaxError('Constructor must be called with the new operator') }\n    if (datatype && !isString(datatype)) { throw new Error('Invalid datatype: ' + datatype) }\n\n    if (isMatrix(data)) {\n      // create from matrix\n      _createFromMatrix(this, data, datatype)\n    } else if (data && isArray(data.index) && isArray(data.ptr) && isArray(data.size)) {\n      // initialize fields\n      this._values = data.values\n      this._index = data.index\n      this._ptr = data.ptr\n      this._size = data.size\n      this._datatype = datatype || data.datatype\n    } else if (isArray(data)) {\n      // create from array\n      _createFromArray(this, data, datatype)\n    } else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + typeOf(data) + ')')\n    } else {\n      // nothing provided\n      this._values = []\n      this._index = []\n      this._ptr = [0]\n      this._size = [0, 0]\n      this._datatype = datatype\n    }\n  }\n\n  function _createFromMatrix (matrix, source, datatype) {\n    // check matrix type\n    if (source.type === 'SparseMatrix') {\n      // clone arrays\n      matrix._values = source._values ? clone(source._values) : undefined\n      matrix._index = clone(source._index)\n      matrix._ptr = clone(source._ptr)\n      matrix._size = clone(source._size)\n      matrix._datatype = datatype || source._datatype\n    } else {\n      // build from matrix data\n      _createFromArray(matrix, source.valueOf(), datatype || source._datatype)\n    }\n  }\n\n  function _createFromArray (matrix, data, datatype) {\n    // initialize fields\n    matrix._values = []\n    matrix._index = []\n    matrix._ptr = []\n    matrix._datatype = datatype\n    // discover rows & columns, do not use math.size() to avoid looping array twice\n    const rows = data.length\n    let columns = 0\n\n    // equal signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n\n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar\n      // convert 0 to the same datatype\n      zero = typed.convert(0, datatype)\n    }\n\n    // check we have rows (empty array)\n    if (rows > 0) {\n      // column index\n      let j = 0\n      do {\n        // store pointer to values index\n        matrix._ptr.push(matrix._index.length)\n        // loop rows\n        for (let i = 0; i < rows; i++) {\n          // current row\n          const row = data[i]\n          // check row is an array\n          if (isArray(row)) {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < row.length) { columns = row.length }\n            // check row has column\n            if (j < row.length) {\n              // value\n              const v = row[j]\n              // check value != 0\n              if (!eq(v, zero)) {\n                // store value\n                matrix._values.push(v)\n                // index\n                matrix._index.push(i)\n              }\n            }\n          } else {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < 1) { columns = 1 }\n            // check value != 0 (row is a scalar)\n            if (!eq(row, zero)) {\n              // store value\n              matrix._values.push(row)\n              // index\n              matrix._index.push(i)\n            }\n          }\n        }\n        // increment index\n        j++\n      }\n      while (j < columns)\n    }\n    // store number of values in ptr\n    matrix._ptr.push(matrix._index.length)\n    // size\n    matrix._size = [rows, columns]\n  }\n\n  SparseMatrix.prototype = new Matrix()\n\n  /**\n   * Create a new SparseMatrix\n   */\n  SparseMatrix.prototype.createSparseMatrix = function (data, datatype) {\n    return new SparseMatrix(data, datatype)\n  }\n\n  /**\n   * Attach type information\n   */\n  SparseMatrix.prototype.type = 'SparseMatrix'\n  SparseMatrix.prototype.isSparseMatrix = true\n\n  /**\n   * Get the matrix type\n   *\n   * Usage:\n   *    const matrixType = matrix.getDataType()  // retrieves the matrix type\n   *\n   * @memberOf SparseMatrix\n   * @return {string}   type information; if multiple types are found from the Matrix, it will return \"mixed\"\n   */\n  SparseMatrix.prototype.getDataType = function () {\n    return getArrayDataType(this._values, typeOf)\n  }\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()   // retrieve storage format\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The storage format.\n   */\n  SparseMatrix.prototype.storage = function () {\n    return 'sparse'\n  }\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()    // retrieve matrix datatype\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The datatype.\n   */\n  SparseMatrix.prototype.datatype = function () {\n    return this._datatype\n  }\n\n  /**\n   * Create a new SparseMatrix\n   * @memberof SparseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n  SparseMatrix.prototype.create = function (data, datatype) {\n    return new SparseMatrix(data, datatype)\n  }\n\n  /**\n   * Get the matrix density.\n   *\n   * Usage:\n   *     const density = matrix.density()                   // retrieve matrix density\n   *\n   * @memberof SparseMatrix\n   * @return {number}           The matrix density.\n   */\n  SparseMatrix.prototype.density = function () {\n    // rows & columns\n    const rows = this._size[0]\n    const columns = this._size[1]\n    // calculate density\n    return rows !== 0 && columns !== 0 ? (this._index.length / (rows * columns)) : 0\n  }\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof SparseMatrix\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  SparseMatrix.prototype.subset = function (index, replacement, defaultValue) { // check it is a pattern matrix\n    if (!this._values) { throw new Error('Cannot invoke subset on a Pattern only matrix') }\n\n    // check arguments\n    switch (arguments.length) {\n      case 1:\n        return _getsubset(this, index)\n\n        // intentional fall through\n      case 2:\n      case 3:\n        return _setsubset(this, index, replacement, defaultValue)\n\n      default:\n        throw new SyntaxError('Wrong number of arguments')\n    }\n  }\n\n  function _getsubset (matrix, idx) {\n    // check idx\n    if (!isIndex(idx)) {\n      throw new TypeError('Invalid index')\n    }\n\n    const isScalar = idx.isScalar()\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(idx.min())\n    }\n    // validate dimensions\n    const size = idx.size()\n    if (size.length !== matrix._size.length) {\n      throw new DimensionError(size.length, matrix._size.length)\n    }\n\n    // vars\n    let i, ii, k, kk\n\n    // validate if any of the ranges in the index is out of range\n    const min = idx.min()\n    const max = idx.max()\n    for (i = 0, ii = matrix._size.length; i < ii; i++) {\n      validateIndex(min[i], matrix._size[i])\n      validateIndex(max[i], matrix._size[i])\n    }\n\n    // matrix arrays\n    const mvalues = matrix._values\n    const mindex = matrix._index\n    const mptr = matrix._ptr\n\n    // rows & columns dimensions for result matrix\n    const rows = idx.dimension(0)\n    const columns = idx.dimension(1)\n\n    // workspace & permutation vector\n    const w = []\n    const pv = []\n\n    // loop rows in resulting matrix\n    rows.forEach(function (i, r) {\n      // update permutation vector\n      pv[i] = r[0]\n      // mark i in workspace\n      w[i] = true\n    })\n\n    // result matrix arrays\n    const values = mvalues ? [] : undefined\n    const index = []\n    const ptr = []\n\n    // loop columns in result matrix\n    columns.forEach(function (j) {\n      // update ptr\n      ptr.push(index.length)\n      // loop values in column j\n      for (k = mptr[j], kk = mptr[j + 1]; k < kk; k++) {\n        // row\n        i = mindex[k]\n        // check row is in result matrix\n        if (w[i] === true) {\n          // push index\n          index.push(pv[i])\n          // check we need to process values\n          if (values) { values.push(mvalues[k]) }\n        }\n      }\n    })\n    // update ptr\n    ptr.push(index.length)\n\n    // return matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: size,\n      datatype: matrix._datatype\n    })\n  }\n\n  function _setsubset (matrix, index, submatrix, defaultValue) {\n    // check index\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index')\n    }\n\n    // get index size and check whether the index contains a single value\n    const iSize = index.size()\n    const isScalar = index.isScalar()\n\n    // calculate the size of the submatrix, and convert it into an Array if needed\n    let sSize\n    if (isMatrix(submatrix)) {\n      // submatrix size\n      sSize = submatrix.size()\n      // use array representation\n      submatrix = submatrix.toArray()\n    } else {\n      // get submatrix size (array, scalar)\n      sSize = arraySize(submatrix)\n    }\n\n    // check index is a scalar\n    if (isScalar) {\n      // verify submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected')\n      }\n      // set value\n      matrix.set(index.min(), submatrix, defaultValue)\n    } else {\n      // validate dimensions, index size must be one or two dimensions\n      if (iSize.length !== 1 && iSize.length !== 2) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<')\n      }\n\n      // check submatrix and index have the same dimensions\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        let i = 0\n        let outer = 0\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++\n        }\n        while (iSize[i] === 1) {\n          outer++\n          i++\n        }\n        // unsqueeze both outer and inner dimensions\n        submatrix = unsqueeze(submatrix, iSize.length, outer, sSize)\n      }\n\n      // check whether the size of the submatrix matches the index size\n      if (!deepStrictEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>')\n      }\n\n      // offsets\n      const x0 = index.min()[0]\n      const y0 = index.min()[1]\n\n      // submatrix rows and columns\n      const m = sSize[0]\n      const n = sSize[1]\n\n      // loop submatrix\n      for (let x = 0; x < m; x++) {\n        // loop columns\n        for (let y = 0; y < n; y++) {\n          // value at i, j\n          const v = submatrix[x][y]\n          // invoke set (zero value will remove entry from matrix)\n          matrix.set([x + x0, y + y0], v, defaultValue)\n        }\n      }\n    }\n    return matrix\n  }\n\n  /**\n   * Get a single element from the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  SparseMatrix.prototype.get = function (index) {\n    if (!isArray(index)) { throw new TypeError('Array expected') }\n    if (index.length !== this._size.length) { throw new DimensionError(index.length, this._size.length) }\n\n    // check it is a pattern matrix\n    if (!this._values) { throw new Error('Cannot invoke get on a Pattern only matrix') }\n\n    // row and column\n    const i = index[0]\n    const j = index[1]\n\n    // check i, j are valid\n    validateIndex(i, this._size[0])\n    validateIndex(j, this._size[1])\n\n    // find value index\n    const k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index)\n    // check k is prior to next column k and it is in the correct row\n    if (k < this._ptr[j + 1] && this._index[k] === i) { return this._values[k] }\n\n    return 0\n  }\n\n  /**\n   * Replace a single element in the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} v\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be set to zero.\n   * @return {SparseMatrix} self\n   */\n  SparseMatrix.prototype.set = function (index, v, defaultValue) {\n    if (!isArray(index)) { throw new TypeError('Array expected') }\n    if (index.length !== this._size.length) { throw new DimensionError(index.length, this._size.length) }\n\n    // check it is a pattern matrix\n    if (!this._values) { throw new Error('Cannot invoke set on a Pattern only matrix') }\n\n    // row and column\n    const i = index[0]\n    const j = index[1]\n\n    // rows & columns\n    let rows = this._size[0]\n    let columns = this._size[1]\n\n    // equal signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n\n    if (isString(this._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [this._datatype, this._datatype]) || equalScalar\n      // convert 0 to the same datatype\n      zero = typed.convert(0, this._datatype)\n    }\n\n    // check we need to resize matrix\n    if (i > rows - 1 || j > columns - 1) {\n      // resize matrix\n      _resize(this, Math.max(i + 1, rows), Math.max(j + 1, columns), defaultValue)\n      // update rows & columns\n      rows = this._size[0]\n      columns = this._size[1]\n    }\n\n    // check i, j are valid\n    validateIndex(i, rows)\n    validateIndex(j, columns)\n\n    // find value index\n    const k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index)\n    // check k is prior to next column k and it is in the correct row\n    if (k < this._ptr[j + 1] && this._index[k] === i) {\n      // check value != 0\n      if (!eq(v, zero)) {\n        // update value\n        this._values[k] = v\n      } else {\n        // remove value from matrix\n        _remove(k, j, this._values, this._index, this._ptr)\n      }\n    } else {\n      // insert value @ (i, j)\n      _insert(k, i, j, v, this._values, this._index, this._ptr)\n    }\n\n    return this\n  }\n\n  function _getValueIndex (i, top, bottom, index) {\n    // check row is on the bottom side\n    if (bottom - top === 0) { return bottom }\n    // loop rows [top, bottom[\n    for (let r = top; r < bottom; r++) {\n      // check we found value index\n      if (index[r] === i) { return r }\n    }\n    // we did not find row\n    return top\n  }\n\n  function _remove (k, j, values, index, ptr) {\n    // remove value @ k\n    values.splice(k, 1)\n    index.splice(k, 1)\n    // update pointers\n    for (let x = j + 1; x < ptr.length; x++) { ptr[x]-- }\n  }\n\n  function _insert (k, i, j, v, values, index, ptr) {\n    // insert value\n    values.splice(k, 0, v)\n    // update row for k\n    index.splice(k, 0, i)\n    // update column pointers\n    for (let x = j + 1; x < ptr.length; x++) { ptr[x]++ }\n  }\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof SparseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  SparseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!isArray(size)) { throw new TypeError('Array expected') }\n    if (size.length !== 2) { throw new Error('Only two dimensions matrix are supported') }\n\n    // check sizes\n    size.forEach(function (value) {\n      if (!isNumber(value) || !isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' +\n                            '(size: ' + format(size) + ')')\n      }\n    })\n\n    // matrix to resize\n    const m = copy ? this.clone() : this\n    // resize matrix\n    return _resize(m, size[0], size[1], defaultValue)\n  }\n\n  function _resize (matrix, rows, columns, defaultValue) {\n    // value to insert at the time of growing matrix\n    let value = defaultValue || 0\n\n    // equal signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar\n      // convert 0 to the same datatype\n      zero = typed.convert(0, matrix._datatype)\n      // convert value to the same datatype\n      value = typed.convert(value, matrix._datatype)\n    }\n\n    // should we insert the value?\n    const ins = !eq(value, zero)\n\n    // old columns and rows\n    const r = matrix._size[0]\n    let c = matrix._size[1]\n\n    let i, j, k\n\n    // check we need to increase columns\n    if (columns > c) {\n      // loop new columns\n      for (j = c; j < columns; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._values.length\n        // check we need to insert matrix._values\n        if (ins) {\n          // loop rows\n          for (i = 0; i < r; i++) {\n            // add new matrix._values\n            matrix._values.push(value)\n            // update matrix._index\n            matrix._index.push(i)\n          }\n        }\n      }\n      // store number of matrix._values in matrix._ptr\n      matrix._ptr[columns] = matrix._values.length\n    } else if (columns < c) {\n      // truncate matrix._ptr\n      matrix._ptr.splice(columns + 1, c - columns)\n      // truncate matrix._values and matrix._index\n      matrix._values.splice(matrix._ptr[columns], matrix._values.length)\n      matrix._index.splice(matrix._ptr[columns], matrix._index.length)\n    }\n    // update columns\n    c = columns\n\n    // check we need to increase rows\n    if (rows > r) {\n      // check we have to insert values\n      if (ins) {\n        // inserts\n        let n = 0\n        // loop columns\n        for (j = 0; j < c; j++) {\n          // update matrix._ptr for current column\n          matrix._ptr[j] = matrix._ptr[j] + n\n          // where to insert matrix._values\n          k = matrix._ptr[j + 1] + n\n          // pointer\n          let p = 0\n          // loop new rows, initialize pointer\n          for (i = r; i < rows; i++, p++) {\n            // add value\n            matrix._values.splice(k + p, 0, value)\n            // update matrix._index\n            matrix._index.splice(k + p, 0, i)\n            // increment inserts\n            n++\n          }\n        }\n        // store number of matrix._values in matrix._ptr\n        matrix._ptr[c] = matrix._values.length\n      }\n    } else if (rows < r) {\n      // deletes\n      let d = 0\n      // loop columns\n      for (j = 0; j < c; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._ptr[j] - d\n        // where matrix._values start for next column\n        const k0 = matrix._ptr[j]\n        const k1 = matrix._ptr[j + 1] - d\n        // loop matrix._index\n        for (k = k0; k < k1; k++) {\n          // row\n          i = matrix._index[k]\n          // check we need to delete value and matrix._index\n          if (i > rows - 1) {\n            // remove value\n            matrix._values.splice(k, 1)\n            // remove item from matrix._index\n            matrix._index.splice(k, 1)\n            // increase deletes\n            d++\n          }\n        }\n      }\n      // update matrix._ptr for current column\n      matrix._ptr[j] = matrix._values.length\n    }\n    // update matrix._size\n    matrix._size[0] = rows\n    matrix._size[1] = columns\n    // return matrix\n    return matrix\n  }\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof SparseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  SparseMatrix.prototype.reshape = function (size, copy) {\n    // validate arguments\n    if (!isArray(size)) { throw new TypeError('Array expected') }\n    if (size.length !== 2) { throw new Error('Sparse matrices can only be reshaped in two dimensions') }\n\n    // check sizes\n    size.forEach(function (value) {\n      if (!isNumber(value) || !isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' +\n                            '(size: ' + format(size) + ')')\n      }\n    })\n\n    // m * n must not change\n    if (this._size[0] * this._size[1] !== size[0] * size[1]) {\n      throw new Error('Reshaping sparse matrix will result in the wrong number of elements')\n    }\n\n    // matrix to reshape\n    const m = copy ? this.clone() : this\n\n    // return unchanged if the same shape\n    if (this._size[0] === size[0] && this._size[1] === size[1]) {\n      return m\n    }\n\n    // Convert to COO format (generate a column index)\n    const colIndex = []\n    for (let i = 0; i < m._ptr.length; i++) {\n      for (let j = 0; j < m._ptr[i + 1] - m._ptr[i]; j++) {\n        colIndex.push(i)\n      }\n    }\n\n    // Clone the values array\n    const values = m._values.slice()\n\n    // Clone the row index array\n    const rowIndex = m._index.slice()\n\n    // Transform the (row, column) indices\n    for (let i = 0; i < m._index.length; i++) {\n      const r1 = rowIndex[i]\n      const c1 = colIndex[i]\n      const flat = r1 * m._size[1] + c1\n      colIndex[i] = flat % size[1]\n      rowIndex[i] = Math.floor(flat / size[1])\n    }\n\n    // Now reshaping is supposed to preserve the row-major order, BUT these sparse matrices are stored\n    // in column-major order, so we have to reorder the value array now. One option is to use a multisort,\n    // sorting several arrays based on some other array.\n\n    // OR, we could easily just:\n\n    // 1. Remove all values from the matrix\n    m._values.length = 0\n    m._index.length = 0\n    m._ptr.length = size[1] + 1\n    m._size = size.slice()\n    for (let i = 0; i < m._ptr.length; i++) {\n      m._ptr[i] = 0\n    }\n\n    // 2. Re-insert all elements in the proper order (simplified code from SparseMatrix.prototype.set)\n    // This step is probably the most time-consuming\n    for (let h = 0; h < values.length; h++) {\n      const i = rowIndex[h]\n      const j = colIndex[h]\n      const v = values[h]\n      const k = _getValueIndex(i, m._ptr[j], m._ptr[j + 1], m._index)\n      _insert(k, i, j, v, m._values, m._index, m._ptr)\n    }\n\n    // The value indices are inserted out of order, but apparently that's... still OK?\n\n    return m\n  }\n\n  /**\n   * Create a clone of the matrix\n   * @memberof SparseMatrix\n   * @return {SparseMatrix} clone\n   */\n  SparseMatrix.prototype.clone = function () {\n    const m = new SparseMatrix({\n      values: this._values ? clone(this._values) : undefined,\n      index: clone(this._index),\n      ptr: clone(this._ptr),\n      size: clone(this._size),\n      datatype: this._datatype\n    })\n    return m\n  }\n\n  /**\n   * Retrieve the size of the matrix.\n   * @memberof SparseMatrix\n   * @returns {number[]} size\n   */\n  SparseMatrix.prototype.size = function () {\n    return this._size.slice(0) // copy the Array\n  }\n\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {SparseMatrix} matrix\n   */\n  SparseMatrix.prototype.map = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values) { throw new Error('Cannot invoke map on a Pattern only matrix') }\n    // matrix instance\n    const me = this\n    // rows and columns\n    const rows = this._size[0]\n    const columns = this._size[1]\n    // invoke callback\n    const invoke = function (v, i, j) {\n      // invoke callback\n      return callback(v, [i, j], me)\n    }\n    // invoke _map\n    return _map(this, 0, rows - 1, 0, columns - 1, invoke, skipZeros)\n  }\n\n  /**\n   * Create a new matrix with the results of the callback function executed on the interval\n   * [minRow..maxRow, minColumn..maxColumn].\n   */\n  function _map (matrix, minRow, maxRow, minColumn, maxColumn, callback, skipZeros) {\n    // result arrays\n    const values = []\n    const index = []\n    const ptr = []\n\n    // equal signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar\n      // convert 0 to the same datatype\n      zero = typed.convert(0, matrix._datatype)\n    }\n\n    // invoke callback\n    const invoke = function (v, x, y) {\n      // invoke callback\n      v = callback(v, x, y)\n      // check value != 0\n      if (!eq(v, zero)) {\n        // store value\n        values.push(v)\n        // index\n        index.push(x)\n      }\n    }\n    // loop columns\n    for (let j = minColumn; j <= maxColumn; j++) {\n      // store pointer to values index\n      ptr.push(values.length)\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      const k0 = matrix._ptr[j]\n      const k1 = matrix._ptr[j + 1]\n\n      if (skipZeros) {\n        // loop k within [k0, k1[\n        for (let k = k0; k < k1; k++) {\n          // row index\n          const i = matrix._index[k]\n          // check i is in range\n          if (i >= minRow && i <= maxRow) {\n            // value @ k\n            invoke(matrix._values[k], i - minRow, j - minColumn)\n          }\n        }\n      } else {\n        // create a cache holding all defined values\n        const values = {}\n        for (let k = k0; k < k1; k++) {\n          const i = matrix._index[k]\n          values[i] = matrix._values[k]\n        }\n\n        // loop over all rows (indexes can be unordered so we can't use that),\n        // and either read the value or zero\n        for (let i = minRow; i <= maxRow; i++) {\n          const value = (i in values) ? values[i] : 0\n          invoke(value, i - minRow, j - minColumn)\n        }\n      }\n    }\n\n    // store number of values in ptr\n    ptr.push(values.length)\n    // return sparse matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [maxRow - minRow + 1, maxColumn - minColumn + 1]\n    })\n  }\n\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   */\n  SparseMatrix.prototype.forEach = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values) { throw new Error('Cannot invoke forEach on a Pattern only matrix') }\n    // matrix instance\n    const me = this\n    // rows and columns\n    const rows = this._size[0]\n    const columns = this._size[1]\n    // loop columns\n    for (let j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      const k0 = this._ptr[j]\n      const k1 = this._ptr[j + 1]\n\n      if (skipZeros) {\n        // loop k within [k0, k1[\n        for (let k = k0; k < k1; k++) {\n          // row index\n          const i = this._index[k]\n\n          // value @ k\n          callback(this._values[k], [i, j], me)\n        }\n      } else {\n        // create a cache holding all defined values\n        const values = {}\n        for (let k = k0; k < k1; k++) {\n          const i = this._index[k]\n          values[i] = this._values[k]\n        }\n\n        // loop over all rows (indexes can be unordered so we can't use that),\n        // and either read the value or zero\n        for (let i = 0; i < rows; i++) {\n          const value = (i in values) ? values[i] : 0\n          callback(value, [i, j], me)\n        }\n      }\n    }\n  }\n\n  /**\n   * Create an Array with a copy of the data of the SparseMatrix\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n  SparseMatrix.prototype.toArray = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, true)\n  }\n\n  /**\n   * Get the primitive value of the SparseMatrix: a two dimensions array\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n  SparseMatrix.prototype.valueOf = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, false)\n  }\n\n  function _toArray (values, index, ptr, size, copy) {\n    // rows and columns\n    const rows = size[0]\n    const columns = size[1]\n    // result\n    const a = []\n    // vars\n    let i, j\n    // initialize array\n    for (i = 0; i < rows; i++) {\n      a[i] = []\n      for (j = 0; j < columns; j++) { a[i][j] = 0 }\n    }\n\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      const k0 = ptr[j]\n      const k1 = ptr[j + 1]\n      // loop k within [k0, k1[\n      for (let k = k0; k < k1; k++) {\n        // row index\n        i = index[k]\n        // set value (use one for pattern matrix)\n        a[i][j] = values ? (copy ? clone(values[k]) : values[k]) : 1\n      }\n    }\n    return a\n  }\n\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof SparseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  SparseMatrix.prototype.format = function (options) {\n    // rows and columns\n    const rows = this._size[0]\n    const columns = this._size[1]\n    // density\n    const density = this.density()\n    // rows & columns\n    let str = 'Sparse Matrix [' + format(rows, options) + ' x ' + format(columns, options) + '] density: ' + format(density, options) + '\\n'\n    // loop columns\n    for (let j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      const k0 = this._ptr[j]\n      const k1 = this._ptr[j + 1]\n      // loop k within [k0, k1[\n      for (let k = k0; k < k1; k++) {\n        // row index\n        const i = this._index[k]\n        // append value\n        str += '\\n    (' + format(i, options) + ', ' + format(j, options) + ') ==> ' + (this._values ? format(this._values[k], options) : 'X')\n      }\n    }\n    return str\n  }\n\n  /**\n   * Get a string representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {string} str\n   */\n  SparseMatrix.prototype.toString = function () {\n    return format(this.toArray())\n  }\n\n  /**\n   * Get a JSON representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {Object}\n   */\n  SparseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'SparseMatrix',\n      values: this._values,\n      index: this._index,\n      ptr: this._ptr,\n      size: this._size,\n      datatype: this._datatype\n    }\n  }\n\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof SparseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix vector with the diagonal values.\n   */\n  SparseMatrix.prototype.diagonal = function (k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) { k = k.toNumber() }\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number')\n      }\n    } else {\n      // default value\n      k = 0\n    }\n\n    const kSuper = k > 0 ? k : 0\n    const kSub = k < 0 ? -k : 0\n\n    // rows & columns\n    const rows = this._size[0]\n    const columns = this._size[1]\n\n    // number diagonal values\n    const n = Math.min(rows - kSub, columns - kSuper)\n\n    // diagonal arrays\n    const values = []\n    const index = []\n    const ptr = []\n    // initial ptr value\n    ptr[0] = 0\n    // loop columns\n    for (let j = kSuper; j < columns && values.length < n; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      const k0 = this._ptr[j]\n      const k1 = this._ptr[j + 1]\n      // loop x within [k0, k1[\n      for (let x = k0; x < k1; x++) {\n        // row index\n        const i = this._index[x]\n        // check row\n        if (i === j - kSuper + kSub) {\n          // value on this column\n          values.push(this._values[x])\n          // store row\n          index[values.length - 1] = i - kSub\n          // exit loop\n          break\n        }\n      }\n    }\n    // close ptr\n    ptr.push(values.length)\n    // return matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [n, 1]\n    })\n  }\n\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof SparseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"SparseMatrix\", \"values\": [], \"index\": [], \"ptr\": [], \"size\": []}`,\n   *                       where mathjs is optional\n   * @returns {SparseMatrix}\n   */\n  SparseMatrix.fromJSON = function (json) {\n    return new SparseMatrix(json)\n  }\n\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {Array} size                       The matrix size.\n   * @param {number | Array | Matrix } value   The values for the diagonal.\n   * @param {number | BigNumber} [k=0]         The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]            The default value for non-diagonal\n   * @param {string} [datatype]                The Matrix datatype, values must be of this datatype.\n   *\n   * @returns {SparseMatrix}\n   */\n  SparseMatrix.diagonal = function (size, value, k, defaultValue, datatype) {\n    if (!isArray(size)) { throw new TypeError('Array expected, size parameter') }\n    if (size.length !== 2) { throw new Error('Only two dimensions matrix are supported') }\n\n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (isBigNumber(s)) {\n        // convert it\n        s = s.toNumber()\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers')\n      }\n      return s\n    })\n\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) { k = k.toNumber() }\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number')\n      }\n    } else {\n      // default value\n      k = 0\n    }\n\n    // equal signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n\n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar\n      // convert 0 to the same datatype\n      zero = typed.convert(0, datatype)\n    }\n\n    const kSuper = k > 0 ? k : 0\n    const kSub = k < 0 ? -k : 0\n\n    // rows and columns\n    const rows = size[0]\n    const columns = size[1]\n\n    // number of non-zero items\n    const n = Math.min(rows - kSub, columns - kSuper)\n\n    // value extraction function\n    let _value\n\n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length')\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value[i]\n      }\n    } else if (isMatrix(value)) {\n      // matrix size\n      const ms = value.size()\n      // validate matrix\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length')\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value.get([i])\n      }\n    } else {\n      // define function\n      _value = function () {\n        // return value\n        return value\n      }\n    }\n\n    // create arrays\n    const values = []\n    const index = []\n    const ptr = []\n\n    // loop items\n    for (let j = 0; j < columns; j++) {\n      // number of rows with value\n      ptr.push(values.length)\n      // diagonal index\n      const i = j - kSuper\n      // check we need to set diagonal value\n      if (i >= 0 && i < n) {\n        // get value @ i\n        const v = _value(i)\n        // check for zero\n        if (!eq(v, zero)) {\n          // column\n          index.push(i + kSub)\n          // add value\n          values.push(v)\n        }\n      }\n    }\n    // last value should be number of values\n    ptr.push(values.length)\n    // create SparseMatrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [rows, columns]\n    })\n  }\n\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  SparseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers')\n    }\n    // check dimensions\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported')\n    }\n    // validate index\n    validateIndex(i, this._size[0])\n    validateIndex(j, this._size[0])\n\n    // swap rows\n    SparseMatrix._swapRows(i, j, this._size[1], this._values, this._index, this._ptr)\n    // return current instance\n    return this\n  }\n\n  /**\n   * Loop rows with data in column j.\n   *\n   * @param {number} j            Column\n   * @param {Array} values        Matrix values\n   * @param {Array} index         Matrix row indeces\n   * @param {Array} ptr           Matrix column pointers\n   * @param {Function} callback   Callback function invoked for every row in column j\n   */\n  SparseMatrix._forEachRow = function (j, values, index, ptr, callback) {\n    // indeces for column j\n    const k0 = ptr[j]\n    const k1 = ptr[j + 1]\n    // loop\n    for (let k = k0; k < k1; k++) {\n      // invoke callback\n      callback(index[k], values[k])\n    }\n  }\n\n  /**\n   * Swap rows x and y in Sparse Matrix data structures.\n   *\n   * @param {number} x         Matrix row index 1\n   * @param {number} y         Matrix row index 2\n   * @param {number} columns   Number of columns in matrix\n   * @param {Array} values     Matrix values\n   * @param {Array} index      Matrix row indeces\n   * @param {Array} ptr        Matrix column pointers\n   */\n  SparseMatrix._swapRows = function (x, y, columns, values, index, ptr) {\n    // loop columns\n    for (let j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      const k0 = ptr[j]\n      const k1 = ptr[j + 1]\n      // find value index @ x\n      const kx = _getValueIndex(x, k0, k1, index)\n      // find value index @ x\n      const ky = _getValueIndex(y, k0, k1, index)\n      // check both rows exist in matrix\n      if (kx < k1 && ky < k1 && index[kx] === x && index[ky] === y) {\n        // swap values (check for pattern matrix)\n        if (values) {\n          const v = values[kx]\n          values[kx] = values[ky]\n          values[ky] = v\n        }\n        // next column\n        continue\n      }\n      // check x row exist & no y row\n      if (kx < k1 && index[kx] === x && (ky >= k1 || index[ky] !== y)) {\n        // value @ x (check for pattern matrix)\n        const vx = values ? values[kx] : undefined\n        // insert value @ y\n        index.splice(ky, 0, y)\n        if (values) { values.splice(ky, 0, vx) }\n        // remove value @ x (adjust array index if needed)\n        index.splice(ky <= kx ? kx + 1 : kx, 1)\n        if (values) { values.splice(ky <= kx ? kx + 1 : kx, 1) }\n        // next column\n        continue\n      }\n      // check y row exist & no x row\n      if (ky < k1 && index[ky] === y && (kx >= k1 || index[kx] !== x)) {\n        // value @ y (check for pattern matrix)\n        const vy = values ? values[ky] : undefined\n        // insert value @ x\n        index.splice(kx, 0, x)\n        if (values) { values.splice(kx, 0, vy) }\n        // remove value @ y (adjust array index if needed)\n        index.splice(kx <= ky ? ky + 1 : ky, 1)\n        if (values) { values.splice(kx <= ky ? ky + 1 : ky, 1) }\n      }\n    }\n  }\n\n  return SparseMatrix\n}, { isClass: true })\n","import { factory } from '../../../utils/factory'\n\nconst name = 'matrix'\nconst dependencies = [ 'typed', 'Matrix', 'DenseMatrix', 'SparseMatrix' ]\n\nexport const createMatrix = /* #__PURE__ */ factory(name, dependencies, ({ typed, Matrix, DenseMatrix, SparseMatrix }) => {\n  /**\n   * Create a Matrix. The function creates a new `math.Matrix` object from\n   * an `Array`. A Matrix has utility functions to manipulate the data in the\n   * matrix, like getting the size and getting or setting values in the matrix.\n   * Supported storage formats are 'dense' and 'sparse'.\n   *\n   * Syntax:\n   *\n   *    math.matrix()                         // creates an empty matrix using default storage format (dense).\n   *    math.matrix(data)                     // creates a matrix with initial data using default storage format (dense).\n   *    math.matrix('dense')                  // creates an empty matrix using the given storage format.\n   *    math.matrix(data, 'dense')            // creates a matrix with initial data using the given storage format.\n   *    math.matrix(data, 'sparse')           // creates a sparse matrix with initial data.\n   *    math.matrix(data, 'sparse', 'number') // creates a sparse matrix with initial data, number data type.\n   *\n   * Examples:\n   *\n   *    let m = math.matrix([[1, 2], [3, 4]])\n   *    m.size()                        // Array [2, 2]\n   *    m.resize([3, 2], 5)\n   *    m.valueOf()                     // Array [[1, 2], [3, 4], [5, 5]]\n   *    m.get([1, 0])                    // number 3\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, number, string, unit, sparse\n   *\n   * @param {Array | Matrix} [data]    A multi dimensional array\n   * @param {string} [format]          The Matrix storage format\n   *\n   * @return {Matrix} The created matrix\n   */\n  return typed(name, {\n    '': function () {\n      return _create([])\n    },\n\n    'string': function (format) {\n      return _create([], format)\n    },\n\n    'string, string': function (format, datatype) {\n      return _create([], format, datatype)\n    },\n\n    'Array': function (data) {\n      return _create(data)\n    },\n\n    'Matrix': function (data) {\n      return _create(data, data.storage())\n    },\n\n    'Array | Matrix, string': _create,\n\n    'Array | Matrix, string, string': _create\n  })\n\n  /**\n   * Create a new Matrix with given storage format\n   * @param {Array} data\n   * @param {string} [format]\n   * @param {string} [datatype]\n   * @returns {Matrix} Returns a new Matrix\n   * @private\n   */\n  function _create (data, format, datatype) {\n    // get storage format constructor\n    if (format === 'dense' || format === 'default' || format === undefined) {\n      return new DenseMatrix(data, datatype)\n    }\n\n    if (format === 'sparse') {\n      return new SparseMatrix(data, datatype)\n    }\n\n    throw new TypeError('Unknown matrix type ' + JSON.stringify(format) + '.')\n  }\n})\n","import { factory } from '../../../utils/factory'\nimport { DimensionError } from '../../../error/DimensionError'\n\nconst name = 'algorithm01'\nconst dependencies = ['typed']\n\nexport const createAlgorithm01 = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  Dij          ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  return function algorithm1 (denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    const adata = denseMatrix._data\n    const asize = denseMatrix._size\n    const adt = denseMatrix._datatype\n    // sparse matrix arrays\n    const bvalues = sparseMatrix._values\n    const bindex = sparseMatrix._index\n    const bptr = sparseMatrix._ptr\n    const bsize = sparseMatrix._size\n    const bdt = sparseMatrix._datatype\n\n    // validate dimensions\n    if (asize.length !== bsize.length) { throw new DimensionError(asize.length, bsize.length) }\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) { throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')') }\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!bvalues) { throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix') }\n\n    // rows & columns\n    const rows = asize[0]\n    const columns = asize[1]\n\n    // process data types\n    const dt = typeof adt === 'string' && adt === bdt ? adt : undefined\n    // callback function\n    const cf = dt ? typed.find(callback, [dt, dt]) : callback\n\n    // vars\n    let i, j\n\n    // result (DenseMatrix)\n    const cdata = []\n    // initialize c\n    for (i = 0; i < rows; i++) { cdata[i] = [] }\n\n    // workspace\n    const x = []\n    // marks indicating we have a value in x for a given column\n    const w = []\n\n    // loop columns in b\n    for (j = 0; j < columns; j++) {\n      // column mark\n      const mark = j + 1\n      // values in column j\n      for (let k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k]\n        // update workspace\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k])\n        // mark i as updated\n        w[i] = mark\n      }\n      // loop rows\n      for (i = 0; i < rows; i++) {\n        // check row is in workspace\n        if (w[i] === mark) {\n          // c[i][j] was already calculated\n          cdata[i][j] = x[i]\n        } else {\n          // item does not exist in S\n          cdata[i][j] = adata[i][j]\n        }\n      }\n    }\n\n    // return dense matrix\n    return denseMatrix.createDenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    })\n  }\n})\n","import { factory } from '../../../utils/factory'\nimport { DimensionError } from '../../../error/DimensionError'\n\nconst name = 'algorithm04'\nconst dependencies = ['typed', 'equalScalar']\n\nexport const createAlgorithm04 = /* #__PURE__ */ factory(name, dependencies, ({ typed, equalScalar }) => {\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MAX(NNZA, NNZB) times\n   *\n   *\n   *          ┌  f(Aij, Bij)  ; A(i,j) !== 0 && B(i,j) !== 0\n   * C(i,j) = ┤  A(i,j)       ; A(i,j) !== 0\n   *          └  B(i,j)       ; B(i,j) !== 0\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  return function algorithm04 (a, b, callback) {\n    // sparse matrix arrays\n    const avalues = a._values\n    const aindex = a._index\n    const aptr = a._ptr\n    const asize = a._size\n    const adt = a._datatype\n    // sparse matrix arrays\n    const bvalues = b._values\n    const bindex = b._index\n    const bptr = b._ptr\n    const bsize = b._size\n    const bdt = b._datatype\n\n    // validate dimensions\n    if (asize.length !== bsize.length) { throw new DimensionError(asize.length, bsize.length) }\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) { throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')') }\n\n    // rows & columns\n    const rows = asize[0]\n    const columns = asize[1]\n\n    // datatype\n    let dt\n    // equal signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n    // callback signature to use\n    let cf = callback\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt\n      // find signature that matches (dt, dt)\n      eq = typed.find(equalScalar, [dt, dt])\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt)\n      // callback\n      cf = typed.find(callback, [dt, dt])\n    }\n\n    // result arrays\n    const cvalues = avalues && bvalues ? [] : undefined\n    const cindex = []\n    const cptr = []\n    // matrix\n    const c = a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    })\n\n    // workspace\n    const xa = avalues && bvalues ? [] : undefined\n    const xb = avalues && bvalues ? [] : undefined\n    // marks indicating we have a value in x for a given column\n    const wa = []\n    const wb = []\n\n    // vars\n    let i, j, k, k0, k1\n\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length\n      // columns mark\n      const mark = j + 1\n      // loop A(:,j)\n      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = aindex[k]\n        // update c\n        cindex.push(i)\n        // update workspace\n        wa[i] = mark\n        // check we need to process values\n        if (xa) { xa[i] = avalues[k] }\n      }\n      // loop B(:,j)\n      for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k]\n        // check row exists in A\n        if (wa[i] === mark) {\n          // update record in xa @ i\n          if (xa) {\n            // invoke callback\n            const v = cf(xa[i], bvalues[k])\n            // check for zero\n            if (!eq(v, zero)) {\n              // update workspace\n              xa[i] = v\n            } else {\n              // remove mark (index will be removed later)\n              wa[i] = null\n            }\n          }\n        } else {\n          // update c\n          cindex.push(i)\n          // update workspace\n          wb[i] = mark\n          // check we need to process values\n          if (xb) { xb[i] = bvalues[k] }\n        }\n      }\n      // check we need to process values (non pattern matrix)\n      if (xa && xb) {\n        // initialize first index in j\n        k = cptr[j]\n        // loop index in j\n        while (k < cindex.length) {\n          // row\n          i = cindex[k]\n          // check workspace has value @ i\n          if (wa[i] === mark) {\n            // push value (Aij != 0 || (Aij != 0 && Bij != 0))\n            cvalues[k] = xa[i]\n            // increment pointer\n            k++\n          } else if (wb[i] === mark) {\n            // push value (bij != 0)\n            cvalues[k] = xb[i]\n            // increment pointer\n            k++\n          } else {\n            // remove index @ k\n            cindex.splice(k, 1)\n          }\n        }\n      }\n    }\n    // update cptr\n    cptr[columns] = cindex.length\n\n    // return sparse matrix\n    return c\n  }\n})\n","import { factory } from '../../../utils/factory'\n\nconst name = 'algorithm10'\nconst dependencies = ['typed', 'DenseMatrix']\n\nexport const createAlgorithm10 = /* #__PURE__ */ factory(name, dependencies, ({ typed, DenseMatrix }) => {\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  b          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  return function algorithm10 (s, b, callback, inverse) {\n    // sparse matrix arrays\n    const avalues = s._values\n    const aindex = s._index\n    const aptr = s._ptr\n    const asize = s._size\n    const adt = s._datatype\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!avalues) { throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value') }\n\n    // rows & columns\n    const rows = asize[0]\n    const columns = asize[1]\n\n    // datatype\n    let dt\n    // callback signature to use\n    let cf = callback\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt\n      // convert b to the same datatype\n      b = typed.convert(b, dt)\n      // callback\n      cf = typed.find(callback, [dt, dt])\n    }\n\n    // result arrays\n    const cdata = []\n    // matrix\n    const c = new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    })\n\n    // workspaces\n    const x = []\n    // marks indicating we have a value in x for a given column\n    const w = []\n\n    // loop columns\n    for (let j = 0; j < columns; j++) {\n      // columns mark\n      const mark = j + 1\n      // values in j\n      for (let k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        const r = aindex[k]\n        // update workspace\n        x[r] = avalues[k]\n        w[r] = mark\n      }\n      // loop rows\n      for (let i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = []\n        }\n        // check sparse matrix has a value @ i,j\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b)\n        } else {\n          // dense matrix value @ i, j\n          cdata[i][j] = b\n        }\n      }\n    }\n\n    // return sparse matrix\n    return c\n  }\n})\n","import { factory } from '../../../utils/factory'\nimport { DimensionError } from '../../../error/DimensionError'\n\nconst name = 'algorithm13'\nconst dependencies = ['typed']\n\nexport const createAlgorithm13 = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, Bij..z).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, Bij..z)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Matrix}   b                 The DenseMatrix instance (B)\n   * @param {Function} callback          The f(Aij..z,Bij..z) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97658658\n   */\n  return function algorithm13 (a, b, callback) {\n    // a arrays\n    const adata = a._data\n    const asize = a._size\n    const adt = a._datatype\n    // b arrays\n    const bdata = b._data\n    const bsize = b._size\n    const bdt = b._datatype\n    // c arrays\n    const csize = []\n\n    // validate dimensions\n    if (asize.length !== bsize.length) { throw new DimensionError(asize.length, bsize.length) }\n\n    // validate each one of the dimension sizes\n    for (let s = 0; s < asize.length; s++) {\n      // must match\n      if (asize[s] !== bsize[s]) { throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')') }\n      // update dimension in c\n      csize[s] = asize[s]\n    }\n\n    // datatype\n    let dt\n    // callback signature to use\n    let cf = callback\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt\n      // callback\n      cf = typed.find(callback, [dt, dt])\n    }\n\n    // populate cdata, iterate through dimensions\n    const cdata = csize.length > 0 ? _iterate(cf, 0, csize, csize[0], adata, bdata) : []\n\n    // c matrix\n    return a.createDenseMatrix({\n      data: cdata,\n      size: csize,\n      datatype: dt\n    })\n  }\n\n  // recursive function\n  function _iterate (f, level, s, n, av, bv) {\n    // initialize array for this level\n    const cv = []\n    // check we reach the last level\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (let i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = f(av[i], bv[i])\n      }\n    } else {\n      // iterate current level\n      for (let j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv[j])\n      }\n    }\n    return cv\n  }\n})\n","import { factory } from '../../../utils/factory'\nimport { clone } from '../../../utils/object'\n\nconst name = 'algorithm14'\nconst dependencies = ['typed']\n\nexport const createAlgorithm14 = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, b).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, b)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij..z,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Aij..z)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97659042\n   */\n  return function algorithm14 (a, b, callback, inverse) {\n    // a arrays\n    const adata = a._data\n    const asize = a._size\n    const adt = a._datatype\n\n    // datatype\n    let dt\n    // callback signature to use\n    let cf = callback\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt\n      // convert b to the same datatype\n      b = typed.convert(b, dt)\n      // callback\n      cf = typed.find(callback, [dt, dt])\n    }\n\n    // populate cdata, iterate through dimensions\n    const cdata = asize.length > 0 ? _iterate(cf, 0, asize, asize[0], adata, b, inverse) : []\n\n    // c matrix\n    return a.createDenseMatrix({\n      data: cdata,\n      size: clone(asize),\n      datatype: dt\n    })\n  }\n\n  // recursive function\n  function _iterate (f, level, s, n, av, bv, inverse) {\n    // initialize array for this level\n    const cv = []\n    // check we reach the last level\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (let i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = inverse ? f(bv, av[i]) : f(av[i], bv)\n      }\n    } else {\n      // iterate current level\n      for (let j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv, inverse)\n      }\n    }\n    return cv\n  }\n})\n","import { factory } from '../../../utils/factory'\nimport { DimensionError } from '../../../error/DimensionError'\n\nconst name = 'algorithm03'\nconst dependencies = ['typed']\n\nexport const createAlgorithm03 = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Iterates over SparseMatrix items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked M*N times.\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  f(Dij, 0)    ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (C)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  return function algorithm03 (denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    const adata = denseMatrix._data\n    const asize = denseMatrix._size\n    const adt = denseMatrix._datatype\n    // sparse matrix arrays\n    const bvalues = sparseMatrix._values\n    const bindex = sparseMatrix._index\n    const bptr = sparseMatrix._ptr\n    const bsize = sparseMatrix._size\n    const bdt = sparseMatrix._datatype\n\n    // validate dimensions\n    if (asize.length !== bsize.length) { throw new DimensionError(asize.length, bsize.length) }\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) { throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')') }\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!bvalues) { throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix') }\n\n    // rows & columns\n    const rows = asize[0]\n    const columns = asize[1]\n\n    // datatype\n    let dt\n    // zero value\n    let zero = 0\n    // callback signature to use\n    let cf = callback\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt)\n      // callback\n      cf = typed.find(callback, [dt, dt])\n    }\n\n    // result (DenseMatrix)\n    const cdata = []\n\n    // initialize dense matrix\n    for (let z = 0; z < rows; z++) {\n      // initialize row\n      cdata[z] = []\n    }\n\n    // workspace\n    const x = []\n    // marks indicating we have a value in x for a given column\n    const w = []\n\n    // loop columns in b\n    for (let j = 0; j < columns; j++) {\n      // column mark\n      const mark = j + 1\n      // values in column j\n      for (let k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        const i = bindex[k]\n        // update workspace\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k])\n        w[i] = mark\n      }\n      // process workspace\n      for (let y = 0; y < rows; y++) {\n        // check we have a calculated value for current row\n        if (w[y] === mark) {\n          // use calculated value\n          cdata[y][j] = x[y]\n        } else {\n          // calculate value\n          cdata[y][j] = inverse ? cf(zero, adata[y][j]) : cf(adata[y][j], zero)\n        }\n      }\n    }\n\n    // return dense matrix\n    return denseMatrix.createDenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    })\n  }\n})\n","import { factory } from '../../../utils/factory'\nimport { DimensionError } from '../../../error/DimensionError'\n\nconst name = 'algorithm05'\nconst dependencies = ['typed', 'equalScalar']\n\nexport const createAlgorithm05 = /* #__PURE__ */ factory(name, dependencies, ({ typed, equalScalar }) => {\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MAX(NNZA, NNZB) times\n   *\n   *\n   *          ┌  f(Aij, Bij)  ; A(i,j) !== 0 || B(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  return function algorithm05 (a, b, callback) {\n    // sparse matrix arrays\n    const avalues = a._values\n    const aindex = a._index\n    const aptr = a._ptr\n    const asize = a._size\n    const adt = a._datatype\n    // sparse matrix arrays\n    const bvalues = b._values\n    const bindex = b._index\n    const bptr = b._ptr\n    const bsize = b._size\n    const bdt = b._datatype\n\n    // validate dimensions\n    if (asize.length !== bsize.length) { throw new DimensionError(asize.length, bsize.length) }\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) { throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')') }\n\n    // rows & columns\n    const rows = asize[0]\n    const columns = asize[1]\n\n    // datatype\n    let dt\n    // equal signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n    // callback signature to use\n    let cf = callback\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt\n      // find signature that matches (dt, dt)\n      eq = typed.find(equalScalar, [dt, dt])\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt)\n      // callback\n      cf = typed.find(callback, [dt, dt])\n    }\n\n    // result arrays\n    const cvalues = avalues && bvalues ? [] : undefined\n    const cindex = []\n    const cptr = []\n    // matrix\n    const c = a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    })\n\n    // workspaces\n    const xa = cvalues ? [] : undefined\n    const xb = cvalues ? [] : undefined\n    // marks indicating we have a value in x for a given column\n    const wa = []\n    const wb = []\n\n    // vars\n    let i, j, k, k1\n\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length\n      // columns mark\n      const mark = j + 1\n      // loop values A(:,j)\n      for (k = aptr[j], k1 = aptr[j + 1]; k < k1; k++) {\n        // row\n        i = aindex[k]\n        // push index\n        cindex.push(i)\n        // update workspace\n        wa[i] = mark\n        // check we need to process values\n        if (xa) { xa[i] = avalues[k] }\n      }\n      // loop values B(:,j)\n      for (k = bptr[j], k1 = bptr[j + 1]; k < k1; k++) {\n        // row\n        i = bindex[k]\n        // check row existed in A\n        if (wa[i] !== mark) {\n          // push index\n          cindex.push(i)\n        }\n        // update workspace\n        wb[i] = mark\n        // check we need to process values\n        if (xb) { xb[i] = bvalues[k] }\n      }\n      // check we need to process values (non pattern matrix)\n      if (cvalues) {\n        // initialize first index in j\n        k = cptr[j]\n        // loop index in j\n        while (k < cindex.length) {\n          // row\n          i = cindex[k]\n          // marks\n          const wai = wa[i]\n          const wbi = wb[i]\n          // check Aij or Bij are nonzero\n          if (wai === mark || wbi === mark) {\n            // matrix values @ i,j\n            const va = wai === mark ? xa[i] : zero\n            const vb = wbi === mark ? xb[i] : zero\n            // Cij\n            const vc = cf(va, vb)\n            // check for zero\n            if (!eq(vc, zero)) {\n              // push value\n              cvalues.push(vc)\n              // increment pointer\n              k++\n            } else {\n              // remove value @ i, do not increment pointer\n              cindex.splice(k, 1)\n            }\n          }\n        }\n      }\n    }\n    // update cptr\n    cptr[columns] = cindex.length\n\n    // return sparse matrix\n    return c\n  }\n})\n","import { factory } from '../../../utils/factory'\n\nconst name = 'algorithm11'\nconst dependencies = ['typed', 'equalScalar']\n\nexport const createAlgorithm11 = /* #__PURE__ */ factory(name, dependencies, ({ typed, equalScalar }) => {\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  0          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  return function algorithm11 (s, b, callback, inverse) {\n    // sparse matrix arrays\n    const avalues = s._values\n    const aindex = s._index\n    const aptr = s._ptr\n    const asize = s._size\n    const adt = s._datatype\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!avalues) { throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value') }\n\n    // rows & columns\n    const rows = asize[0]\n    const columns = asize[1]\n\n    // datatype\n    let dt\n    // equal signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n    // callback signature to use\n    let cf = callback\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt\n      // find signature that matches (dt, dt)\n      eq = typed.find(equalScalar, [dt, dt])\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt)\n      // convert b to the same datatype\n      b = typed.convert(b, dt)\n      // callback\n      cf = typed.find(callback, [dt, dt])\n    }\n\n    // result arrays\n    const cvalues = []\n    const cindex = []\n    const cptr = []\n    // matrix\n    const c = s.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    })\n\n    // loop columns\n    for (let j = 0; j < columns; j++) {\n      // initialize ptr\n      cptr[j] = cindex.length\n      // values in j\n      for (let k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        const i = aindex[k]\n        // invoke callback\n        const v = inverse ? cf(b, avalues[k]) : cf(avalues[k], b)\n        // check value is zero\n        if (!eq(v, zero)) {\n          // push index & value\n          cindex.push(i)\n          cvalues.push(v)\n        }\n      }\n    }\n    // update ptr\n    cptr[columns] = cindex.length\n\n    // return sparse matrix\n    return c\n  }\n})\n","import { factory } from '../../../utils/factory'\n\nconst name = 'algorithm12'\nconst dependencies = ['typed', 'DenseMatrix']\n\nexport const createAlgorithm12 = /* #__PURE__ */ factory(name, dependencies, ({ typed, DenseMatrix }) => {\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked MxN times.\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  f(0, b)    ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  return function algorithm12 (s, b, callback, inverse) {\n    // sparse matrix arrays\n    const avalues = s._values\n    const aindex = s._index\n    const aptr = s._ptr\n    const asize = s._size\n    const adt = s._datatype\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!avalues) { throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value') }\n\n    // rows & columns\n    const rows = asize[0]\n    const columns = asize[1]\n\n    // datatype\n    let dt\n    // callback signature to use\n    let cf = callback\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt\n      // convert b to the same datatype\n      b = typed.convert(b, dt)\n      // callback\n      cf = typed.find(callback, [dt, dt])\n    }\n\n    // result arrays\n    const cdata = []\n    // matrix\n    const c = new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    })\n\n    // workspaces\n    const x = []\n    // marks indicating we have a value in x for a given column\n    const w = []\n\n    // loop columns\n    for (let j = 0; j < columns; j++) {\n      // columns mark\n      const mark = j + 1\n      // values in j\n      for (let k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        const r = aindex[k]\n        // update workspace\n        x[r] = avalues[k]\n        w[r] = mark\n      }\n      // loop rows\n      for (let i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = []\n        }\n        // check sparse matrix has a value @ i,j\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b)\n        } else {\n          // dense matrix value @ i, j\n          cdata[i][j] = inverse ? cf(b, 0) : cf(0, b)\n        }\n      }\n    }\n\n    // return sparse matrix\n    return c\n  }\n})\n","import { factory } from '../../../utils/factory'\nimport { DimensionError } from '../../../error/DimensionError'\n\nconst name = 'algorithm07'\nconst dependencies = ['typed', 'DenseMatrix']\n\nexport const createAlgorithm07 = /* #__PURE__ */ factory(name, dependencies, ({ typed, DenseMatrix }) => {\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B items (zero and nonzero) and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j) = f(Aij, Bij)\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  return function algorithm07 (a, b, callback) {\n    // sparse matrix arrays\n    const asize = a._size\n    const adt = a._datatype\n    // sparse matrix arrays\n    const bsize = b._size\n    const bdt = b._datatype\n\n    // validate dimensions\n    if (asize.length !== bsize.length) { throw new DimensionError(asize.length, bsize.length) }\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) { throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')') }\n\n    // rows & columns\n    const rows = asize[0]\n    const columns = asize[1]\n\n    // datatype\n    let dt\n    // zero value\n    let zero = 0\n    // callback signature to use\n    let cf = callback\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt)\n      // callback\n      cf = typed.find(callback, [dt, dt])\n    }\n\n    // vars\n    let i, j\n\n    // result arrays\n    const cdata = []\n    // initialize c\n    for (i = 0; i < rows; i++) { cdata[i] = [] }\n\n    // matrix\n    const c = new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    })\n\n    // workspaces\n    const xa = []\n    const xb = []\n    // marks indicating we have a value in x for a given column\n    const wa = []\n    const wb = []\n\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // columns mark\n      const mark = j + 1\n      // scatter the values of A(:,j) into workspace\n      _scatter(a, j, wa, xa, mark)\n      // scatter the values of B(:,j) into workspace\n      _scatter(b, j, wb, xb, mark)\n      // loop rows\n      for (i = 0; i < rows; i++) {\n        // matrix values @ i,j\n        const va = wa[i] === mark ? xa[i] : zero\n        const vb = wb[i] === mark ? xb[i] : zero\n        // invoke callback\n        cdata[i][j] = cf(va, vb)\n      }\n    }\n\n    // return sparse matrix\n    return c\n  }\n\n  function _scatter (m, j, w, x, mark) {\n    // a arrays\n    const values = m._values\n    const index = m._index\n    const ptr = m._ptr\n    // loop values in column j\n    for (let k = ptr[j], k1 = ptr[j + 1]; k < k1; k++) {\n      // row\n      const i = index[k]\n      // update workspace\n      w[i] = mark\n      x[i] = values[k]\n    }\n  }\n})\n","import { isMatrix } from '../../utils/is'\nimport { arraySize } from '../../utils/array'\nimport { isInteger } from '../../utils/number'\nimport { factory } from '../../utils/factory'\n\nconst name = 'diag'\nconst dependencies = ['typed', 'matrix', 'DenseMatrix', 'SparseMatrix']\n\nexport const createDiag = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix, DenseMatrix, SparseMatrix }) => {\n  /**\n   * Create a diagonal matrix or retrieve the diagonal of a matrix\n   *\n   * When `x` is a vector, a matrix with vector `x` on the diagonal will be returned.\n   * When `x` is a two dimensional matrix, the matrixes `k`th diagonal will be returned as vector.\n   * When k is positive, the values are placed on the super diagonal.\n   * When k is negative, the values are placed on the sub diagonal.\n   *\n   * Syntax:\n   *\n   *     math.diag(X)\n   *     math.diag(X, format)\n   *     math.diag(X, k)\n   *     math.diag(X, k, format)\n   *\n   * Examples:\n   *\n   *     // create a diagonal matrix\n   *     math.diag([1, 2, 3])      // returns [[1, 0, 0], [0, 2, 0], [0, 0, 3]]\n   *     math.diag([1, 2, 3], 1)   // returns [[0, 1, 0, 0], [0, 0, 2, 0], [0, 0, 0, 3]]\n   *     math.diag([1, 2, 3], -1)  // returns [[0, 0, 0], [1, 0, 0], [0, 2, 0], [0, 0, 3]]\n   *\n   *    // retrieve the diagonal from a matrix\n   *    const a = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n   *    math.diag(a)   // returns [1, 5, 9]\n   *\n   * See also:\n   *\n   *     ones, zeros, identity\n   *\n   * @param {Matrix | Array} x          A two dimensional matrix or a vector\n   * @param {number | BigNumber} [k=0]  The diagonal where the vector will be filled\n   *                                    in or retrieved.\n   * @param {string} [format='dense']   The matrix storage format.\n   *\n   * @returns {Matrix | Array} Diagonal matrix from input vector, or diagonal from input matrix.\n   */\n  return typed(name, {\n    // FIXME: simplify this huge amount of signatures as soon as typed-function supports optional arguments\n\n    'Array': function (x) {\n      return _diag(x, 0, arraySize(x), null)\n    },\n\n    'Array, number': function (x, k) {\n      return _diag(x, k, arraySize(x), null)\n    },\n\n    'Array, BigNumber': function (x, k) {\n      return _diag(x, k.toNumber(), arraySize(x), null)\n    },\n\n    'Array, string': function (x, format) {\n      return _diag(x, 0, arraySize(x), format)\n    },\n\n    'Array, number, string': function (x, k, format) {\n      return _diag(x, k, arraySize(x), format)\n    },\n\n    'Array, BigNumber, string': function (x, k, format) {\n      return _diag(x, k.toNumber(), arraySize(x), format)\n    },\n\n    'Matrix': function (x) {\n      return _diag(x, 0, x.size(), x.storage())\n    },\n\n    'Matrix, number': function (x, k) {\n      return _diag(x, k, x.size(), x.storage())\n    },\n\n    'Matrix, BigNumber': function (x, k) {\n      return _diag(x, k.toNumber(), x.size(), x.storage())\n    },\n\n    'Matrix, string': function (x, format) {\n      return _diag(x, 0, x.size(), format)\n    },\n\n    'Matrix, number, string': function (x, k, format) {\n      return _diag(x, k, x.size(), format)\n    },\n\n    'Matrix, BigNumber, string': function (x, k, format) {\n      return _diag(x, k.toNumber(), x.size(), format)\n    }\n  })\n\n  /**\n   * Creeate diagonal matrix from a vector or vice versa\n   * @param {Array | Matrix} x\n   * @param {number} k\n   * @param {string} format Storage format for matrix. If null,\n   *                          an Array is returned\n   * @returns {Array | Matrix}\n   * @private\n   */\n  function _diag (x, k, size, format) {\n    if (!isInteger(k)) {\n      throw new TypeError('Second parameter in function diag must be an integer')\n    }\n\n    const kSuper = k > 0 ? k : 0\n    const kSub = k < 0 ? -k : 0\n\n    // check dimensions\n    switch (size.length) {\n      case 1:\n        return _createDiagonalMatrix(x, k, format, size[0], kSub, kSuper)\n      case 2:\n        return _getDiagonal(x, k, format, size, kSub, kSuper)\n    }\n    throw new RangeError('Matrix for function diag must be 2 dimensional')\n  }\n\n  function _createDiagonalMatrix (x, k, format, l, kSub, kSuper) {\n    // matrix size\n    const ms = [l + kSub, l + kSuper]\n\n    if (format && format !== 'sparse' && format !== 'dense') {\n      throw new TypeError(`Unknown matrix type ${format}\"`)\n    }\n\n    // create diagonal matrix\n    const m = format === 'sparse'\n      ? SparseMatrix.diagonal(ms, x, k)\n      : DenseMatrix.diagonal(ms, x, k)\n    // check we need to return a matrix\n    return format !== null ? m : m.valueOf()\n  }\n\n  function _getDiagonal (x, k, format, s, kSub, kSuper) {\n    // check x is a Matrix\n    if (isMatrix(x)) {\n      // get diagonal matrix\n      const dm = x.diagonal(k)\n      // check we need to return a matrix\n      if (format !== null) {\n        // check we need to change matrix format\n        if (format !== dm.storage()) { return matrix(dm, format) }\n        return dm\n      }\n      return dm.valueOf()\n    }\n    // vector size\n    const n = Math.min(s[0] - kSub, s[1] - kSuper)\n    // diagonal values\n    const vector = []\n    // loop diagonal\n    for (let i = 0; i < n; i++) {\n      vector[i] = x[i + kSub][i + kSuper]\n    }\n    // check we need to return a matrix\n    return format !== null ? matrix(vector) : vector\n  }\n})\n","import { isBigNumber } from '../../utils/is'\nimport { resize } from '../../utils/array'\nimport { isInteger } from '../../utils/number'\nimport { factory } from '../../utils/factory'\n\nconst name = 'identity'\nconst dependencies = [\n  'typed',\n  'config',\n  'matrix',\n  'BigNumber',\n  'DenseMatrix',\n  'SparseMatrix'\n]\n\nexport const createIdentity = /* #__PURE__ */ factory(name, dependencies, ({ typed, config, matrix, BigNumber, DenseMatrix, SparseMatrix }) => {\n  /**\n   * Create a 2-dimensional identity matrix with size m x n or n x n.\n   * The matrix has ones on the diagonal and zeros elsewhere.\n   *\n   * Syntax:\n   *\n   *    math.identity(n)\n   *    math.identity(n, format)\n   *    math.identity(m, n)\n   *    math.identity(m, n, format)\n   *    math.identity([m, n])\n   *    math.identity([m, n], format)\n   *\n   * Examples:\n   *\n   *    math.identity(3)                    // returns [[1, 0, 0], [0, 1, 0], [0, 0, 1]]\n   *    math.identity(3, 2)                 // returns [[1, 0], [0, 1], [0, 0]]\n   *\n   *    const A = [[1, 2, 3], [4, 5, 6]]\n   *    math.identity(math.size(A))         // returns [[1, 0, 0], [0, 1, 0]]\n   *\n   * See also:\n   *\n   *    diag, ones, zeros, size, range\n   *\n   * @param {...number | Matrix | Array} size   The size for the matrix\n   * @param {string} [format]                   The Matrix storage format\n   *\n   * @return {Matrix | Array | number} A matrix with ones on the diagonal.\n   */\n  return typed(name, {\n    '': function () {\n      return (config.matrix === 'Matrix') ? matrix([]) : []\n    },\n\n    'string': function (format) {\n      return matrix(format)\n    },\n\n    'number | BigNumber': function (rows) {\n      return _identity(rows, rows, config.matrix === 'Matrix' ? 'dense' : undefined)\n    },\n\n    'number | BigNumber, string': function (rows, format) {\n      return _identity(rows, rows, format)\n    },\n\n    'number | BigNumber, number | BigNumber': function (rows, cols) {\n      return _identity(rows, cols, config.matrix === 'Matrix' ? 'dense' : undefined)\n    },\n\n    'number | BigNumber, number | BigNumber, string': function (rows, cols, format) {\n      return _identity(rows, cols, format)\n    },\n\n    'Array': function (size) {\n      return _identityVector(size)\n    },\n\n    'Array, string': function (size, format) {\n      return _identityVector(size, format)\n    },\n\n    'Matrix': function (size) {\n      return _identityVector(size.valueOf(), size.storage())\n    },\n\n    'Matrix, string': function (size, format) {\n      return _identityVector(size.valueOf(), format)\n    }\n  })\n\n  function _identityVector (size, format) {\n    switch (size.length) {\n      case 0: return format ? matrix(format) : []\n      case 1: return _identity(size[0], size[0], format)\n      case 2: return _identity(size[0], size[1], format)\n      default: throw new Error('Vector containing two values expected')\n    }\n  }\n\n  /**\n   * Create an identity matrix\n   * @param {number | BigNumber} rows\n   * @param {number | BigNumber} cols\n   * @param {string} [format]\n   * @returns {Matrix}\n   * @private\n   */\n  function _identity (rows, cols, format) {\n    // BigNumber constructor with the right precision\n    const Big = (isBigNumber(rows) || isBigNumber(cols))\n      ? BigNumber\n      : null\n\n    if (isBigNumber(rows)) rows = rows.toNumber()\n    if (isBigNumber(cols)) cols = cols.toNumber()\n\n    if (!isInteger(rows) || rows < 1) {\n      throw new Error('Parameters in function identity must be positive integers')\n    }\n    if (!isInteger(cols) || cols < 1) {\n      throw new Error('Parameters in function identity must be positive integers')\n    }\n\n    const one = Big ? new BigNumber(1) : 1\n    const defaultValue = Big ? new Big(0) : 0\n    const size = [rows, cols]\n\n    // check we need to return a matrix\n    if (format) {\n      // create diagonal matrix (use optimized implementation for storage format)\n      if (format === 'sparse') {\n        return SparseMatrix.diagonal(size, one, 0, defaultValue)\n      }\n      if (format === 'dense') {\n        return DenseMatrix.diagonal(size, one, 0, defaultValue)\n      }\n      throw new TypeError(`Unknown matrix type \"${format}\"`)\n    }\n\n    // create and resize array\n    const res = resize([], size, defaultValue)\n    // fill in ones on the diagonal\n    const minimum = rows < cols ? rows : cols\n    // fill diagonal\n    for (let d = 0; d < minimum; d++) {\n      res[d][d] = one\n    }\n    return res\n  }\n})\n","import { reshape as arrayReshape } from '../../utils/array'\nimport { factory } from '../../utils/factory'\n\nconst name = 'reshape'\nconst dependencies = ['typed', 'isInteger', 'matrix']\n\nexport const createReshape = /* #__PURE__ */ factory(name, dependencies, ({ typed, isInteger, matrix }) => {\n  /**\n   * Reshape a multi dimensional array to fit the specified dimensions\n   *\n   * Syntax:\n   *\n   *     math.reshape(x, sizes)\n   *\n   * Examples:\n   *\n   *     math.reshape([1, 2, 3, 4, 5, 6], [2, 3])\n   *     // returns Array  [[1, 2, 3], [4, 5, 6]]\n   *\n   *     math.reshape([[1, 2], [3, 4]], [1, 4])\n   *     // returns Array  [[1, 2, 3, 4]]\n   *\n   *     math.reshape([[1, 2], [3, 4]], [4])\n   *     // returns Array [1, 2, 3, 4]\n   *\n   *     const x = math.matrix([1, 2, 3, 4, 5, 6, 7, 8])\n   *     math.reshape(x, [2, 2, 2])\n   *     // returns Matrix [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]\n   *\n   * See also:\n   *\n   *     size, squeeze, resize\n   *\n   * @param {Array | Matrix | *} x  Matrix to be reshaped\n   * @param {number[]} sizes        One dimensional array with integral sizes for\n   *                                each dimension\n   *\n   * @return {* | Array | Matrix}   A reshaped clone of matrix `x`\n   *\n   * @throws {TypeError}            If `sizes` does not contain solely integers\n   * @throws {DimensionError}       If the product of the new dimension sizes does\n   *                                not equal that of the old ones\n   */\n  return typed(name, {\n\n    'Matrix, Array': function (x, sizes) {\n      if (x.reshape) {\n        return x.reshape(sizes)\n      } else {\n        return matrix(arrayReshape(x.valueOf(), sizes))\n      }\n    },\n\n    'Array, Array': function (x, sizes) {\n      sizes.forEach(function (size) {\n        if (!isInteger(size)) {\n          throw new TypeError('Invalid size for dimension: ' + size)\n        }\n      })\n      return arrayReshape(x, sizes)\n    }\n\n  })\n})\n","\nexport function noBignumber () {\n  throw new Error('No \"bignumber\" implementation available')\n}\n\nexport function noFraction () {\n  throw new Error('No \"fraction\" implementation available')\n}\n\nexport function noMatrix () {\n  throw new Error('No \"matrix\" implementation available')\n}\n\nexport function noIndexClass () {\n  throw new Error('No \"Index\" implementation available')\n}\n\nexport function noSubset () {\n  throw new Error('No \"matrix\" implementation available')\n}\n","import { isBigNumber } from '../../utils/is'\nimport { isInteger } from '../../utils/number'\nimport { resize } from '../../utils/array'\nimport { factory } from '../../utils/factory'\n\nconst name = 'zeros'\nconst dependencies = ['typed', 'config', 'matrix', 'BigNumber']\n\nexport const createZeros = /* #__PURE__ */ factory(name, dependencies, ({ typed, config, matrix, BigNumber }) => {\n  /**\n   * Create a matrix filled with zeros. The created matrix can have one or\n   * multiple dimensions.\n   *\n   * Syntax:\n   *\n   *    math.zeros(m)\n   *    math.zeros(m, format)\n   *    math.zeros(m, n)\n   *    math.zeros(m, n, format)\n   *    math.zeros([m, n])\n   *    math.zeros([m, n], format)\n   *\n   * Examples:\n   *\n   *    math.zeros(3)                  // returns [0, 0, 0]\n   *    math.zeros(3, 2)               // returns [[0, 0], [0, 0], [0, 0]]\n   *    math.zeros(3, 'dense')         // returns [0, 0, 0]\n   *\n   *    const A = [[1, 2, 3], [4, 5, 6]]\n   *    math.zeros(math.size(A))       // returns [[0, 0, 0], [0, 0, 0]]\n   *\n   * See also:\n   *\n   *    ones, identity, size, range\n   *\n   * @param {...number | Array} size    The size of each dimension of the matrix\n   * @param {string} [format]           The Matrix storage format\n   *\n   * @return {Array | Matrix}           A matrix filled with zeros\n   */\n  return typed(name, {\n    '': function () {\n      return (config.matrix === 'Array')\n        ? _zeros([])\n        : _zeros([], 'default')\n    },\n\n    // math.zeros(m, n, p, ..., format)\n    // TODO: more accurate signature '...number | BigNumber, string' as soon as typed-function supports this\n    '...number | BigNumber | string': function (size) {\n      const last = size[size.length - 1]\n      if (typeof last === 'string') {\n        const format = size.pop()\n        return _zeros(size, format)\n      } else if (config.matrix === 'Array') {\n        return _zeros(size)\n      } else {\n        return _zeros(size, 'default')\n      }\n    },\n\n    'Array': _zeros,\n\n    'Matrix': function (size) {\n      const format = size.storage()\n      return _zeros(size.valueOf(), format)\n    },\n\n    'Array | Matrix, string': function (size, format) {\n      return _zeros(size.valueOf(), format)\n    }\n  })\n\n  /**\n   * Create an Array or Matrix with zeros\n   * @param {Array} size\n   * @param {string} [format='default']\n   * @return {Array | Matrix}\n   * @private\n   */\n  function _zeros (size, format) {\n    const hasBigNumbers = _normalize(size)\n    const defaultValue = hasBigNumbers ? new BigNumber(0) : 0\n    _validate(size)\n\n    if (format) {\n      // return a matrix\n      const m = matrix(format)\n      if (size.length > 0) {\n        return m.resize(size, defaultValue)\n      }\n      return m\n    } else {\n      // return an Array\n      const arr = []\n      if (size.length > 0) {\n        return resize(arr, size, defaultValue)\n      }\n      return arr\n    }\n  }\n\n  // replace BigNumbers with numbers, returns true if size contained BigNumbers\n  function _normalize (size) {\n    let hasBigNumbers = false\n    size.forEach(function (value, index, arr) {\n      if (isBigNumber(value)) {\n        hasBigNumbers = true\n        arr[index] = value.toNumber()\n      }\n    })\n    return hasBigNumbers\n  }\n\n  // validate arguments\n  function _validate (size) {\n    size.forEach(function (value) {\n      if (typeof value !== 'number' || !isInteger(value) || value < 0) {\n        throw new Error('Parameters in function zeros must be positive integers')\n      }\n    })\n  }\n})\n\n// TODO: zeros contains almost the same code as ones. Reuse this?\n","import { factory } from '../../utils/factory'\nimport { deepMap } from '../../utils/collection'\nimport { isInteger } from '../../utils/number'\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11'\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12'\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14'\nimport { roundNumber } from '../../plain/number'\n\nconst NO_INT = 'Number of decimals in function round must be an integer'\n\nconst name = 'round'\nconst dependencies = [\n  'typed',\n  'matrix',\n  'equalScalar',\n  'zeros',\n  'BigNumber',\n  'DenseMatrix'\n]\n\nexport const createRound = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix, equalScalar, zeros, BigNumber, DenseMatrix }) => {\n  const algorithm11 = createAlgorithm11({ typed, equalScalar })\n  const algorithm12 = createAlgorithm12({ typed, DenseMatrix })\n  const algorithm14 = createAlgorithm14({ typed })\n\n  /**\n   * Round a value towards the nearest integer.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.round(x)\n   *    math.round(x, n)\n   *\n   * Examples:\n   *\n   *    math.round(3.2)              // returns number 3\n   *    math.round(3.8)              // returns number 4\n   *    math.round(-4.2)             // returns number -4\n   *    math.round(-4.7)             // returns number -5\n   *    math.round(math.pi, 3)       // returns number 3.142\n   *    math.round(123.45678, 2)     // returns number 123.46\n   *\n   *    const c = math.complex(3.2, -2.7)\n   *    math.round(c)                // returns Complex 3 - 3i\n   *\n   *    math.round([3.2, 3.8, -4.7]) // returns Array [3, 4, -5]\n   *\n   * See also:\n   *\n   *    ceil, fix, floor\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n  const round = typed(name, {\n    ...roundNumberSignatures,\n\n    'Complex': function (x) {\n      return x.round()\n    },\n\n    'Complex, number': function (x, n) {\n      if (n % 1) { throw new TypeError(NO_INT) }\n\n      return x.round(n)\n    },\n\n    'Complex, BigNumber': function (x, n) {\n      if (!n.isInteger()) { throw new TypeError(NO_INT) }\n\n      const _n = n.toNumber()\n      return x.round(_n)\n    },\n\n    'number, BigNumber': function (x, n) {\n      if (!n.isInteger()) { throw new TypeError(NO_INT) }\n\n      return new BigNumber(x).toDecimalPlaces(n.toNumber())\n    },\n\n    'BigNumber': function (x) {\n      return x.toDecimalPlaces(0)\n    },\n\n    'BigNumber, BigNumber': function (x, n) {\n      if (!n.isInteger()) { throw new TypeError(NO_INT) }\n\n      return x.toDecimalPlaces(n.toNumber())\n    },\n\n    'Fraction': function (x) {\n      return x.round()\n    },\n\n    'Fraction, number': function (x, n) {\n      if (n % 1) { throw new TypeError(NO_INT) }\n      return x.round(n)\n    },\n\n    'Array | Matrix': function (x) {\n      // deep map collection, skip zeros since round(0) = 0\n      return deepMap(x, round, true)\n    },\n\n    'SparseMatrix, number | BigNumber': function (x, y) {\n      return algorithm11(x, y, round, false)\n    },\n\n    'DenseMatrix, number | BigNumber': function (x, y) {\n      return algorithm14(x, y, round, false)\n    },\n\n    'number | Complex | BigNumber, SparseMatrix': function (x, y) {\n      // check scalar is zero\n      if (equalScalar(x, 0)) {\n        // do not execute algorithm, result will be a zero matrix\n        return zeros(y.size(), y.storage())\n      }\n      return algorithm12(y, x, round, true)\n    },\n\n    'number | Complex | BigNumber, DenseMatrix': function (x, y) {\n      // check scalar is zero\n      if (equalScalar(x, 0)) {\n        // do not execute algorithm, result will be a zero matrix\n        return zeros(y.size(), y.storage())\n      }\n      return algorithm14(y, x, round, true)\n    },\n\n    'Array, number | BigNumber': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, round, false).valueOf()\n    },\n\n    'number | Complex | BigNumber, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, round, true).valueOf()\n    }\n  })\n\n  return round\n})\n\nconst roundNumberSignatures = {\n  'number': roundNumber,\n\n  'number, number': function (x, n) {\n    if (!isInteger(n)) { throw new TypeError(NO_INT) }\n    if (n < 0 || n > 15) { throw new Error('Number of decimals in function round must be in te range of 0-15') }\n\n    return roundNumber(x, n)\n  }\n}\n\nexport const createRoundNumber = /* #__PURE__ */ factory(name, ['typed'], ({ typed }) => {\n  return typed(name, roundNumberSignatures)\n})\n","import { nearlyEqual as bigNearlyEqual } from '../../utils/bignumber/nearlyEqual'\nimport { nearlyEqual } from '../../utils/number'\nimport { factory } from '../../utils/factory'\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03'\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12'\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14'\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13'\nimport { createAlgorithm05 } from '../../type/matrix/utils/algorithm05'\n\nconst name = 'compare'\nconst dependencies = [\n  'typed',\n  'config',\n  'matrix',\n  'equalScalar',\n  'BigNumber',\n  'Fraction',\n  'DenseMatrix'\n]\n\nexport const createCompare = /* #__PURE__ */ factory(name, dependencies, ({ typed, config, equalScalar, matrix, BigNumber, Fraction, DenseMatrix }) => {\n  const algorithm03 = createAlgorithm03({ typed })\n  const algorithm05 = createAlgorithm05({ typed, equalScalar })\n  const algorithm12 = createAlgorithm12({ typed, DenseMatrix })\n  const algorithm13 = createAlgorithm13({ typed })\n  const algorithm14 = createAlgorithm14({ typed })\n\n  /**\n   * Compare two values. Returns 1 when x > y, -1 when x < y, and 0 when x == y.\n   *\n   * x and y are considered equal when the relative difference between x and y\n   * is smaller than the configured epsilon. The function cannot be used to\n   * compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.compare(x, y)\n   *\n   * Examples:\n   *\n   *    math.compare(6, 1)           // returns 1\n   *    math.compare(2, 3)           // returns -1\n   *    math.compare(7, 7)           // returns 0\n   *    math.compare('10', '2')      // returns 1\n   *    math.compare('1000', '1e3')  // returns 0\n   *\n   *    const a = math.unit('5 cm')\n   *    const b = math.unit('40 mm')\n   *    math.compare(a, b)           // returns 1\n   *\n   *    math.compare(2, [1, 2, 3])   // returns [1, 0, -1]\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, smallerEq, larger, largerEq, compareNatural, compareText\n   *\n   * @param  {number | BigNumber | Fraction | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | Unit | string | Array | Matrix} y Second value to compare\n   * @return {number | BigNumber | Fraction | Array | Matrix} Returns the result of the comparison:\n   *                                                          1 when x > y, -1 when x < y, and 0 when x == y.\n   */\n  const compare = typed(name, {\n\n    'boolean, boolean': function (x, y) {\n      return x === y ? 0 : (x > y ? 1 : -1)\n    },\n\n    'number, number': function (x, y) {\n      return nearlyEqual(x, y, config.epsilon)\n        ? 0\n        : (x > y ? 1 : -1)\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return bigNearlyEqual(x, y, config.epsilon)\n        ? new BigNumber(0)\n        : new BigNumber(x.cmp(y))\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return new Fraction(x.compare(y))\n    },\n\n    'Complex, Complex': function () {\n      throw new TypeError('No ordering relation is defined for complex numbers')\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base')\n      }\n      return compare(x.value, y.value)\n    },\n\n    'SparseMatrix, SparseMatrix': function (x, y) {\n      return algorithm05(x, y, compare)\n    },\n\n    'SparseMatrix, DenseMatrix': function (x, y) {\n      return algorithm03(y, x, compare, true)\n    },\n\n    'DenseMatrix, SparseMatrix': function (x, y) {\n      return algorithm03(x, y, compare, false)\n    },\n\n    'DenseMatrix, DenseMatrix': function (x, y) {\n      return algorithm13(x, y, compare)\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return compare(matrix(x), matrix(y)).valueOf()\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return compare(matrix(x), y)\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return compare(x, matrix(y))\n    },\n\n    'SparseMatrix, any': function (x, y) {\n      return algorithm12(x, y, compare, false)\n    },\n\n    'DenseMatrix, any': function (x, y) {\n      return algorithm14(x, y, compare, false)\n    },\n\n    'any, SparseMatrix': function (x, y) {\n      return algorithm12(y, x, compare, true)\n    },\n\n    'any, DenseMatrix': function (x, y) {\n      return algorithm14(y, x, compare, true)\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, compare, false).valueOf()\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, compare, true).valueOf()\n    }\n  })\n\n  return compare\n})\n\nexport const createCompareNumber = /* #__PURE__ */ factory(name, ['typed', 'config'], ({ typed, config }) => {\n  return typed(name, {\n    'number, number': function (x, y) {\n      return nearlyEqual(x, y, config.epsilon)\n        ? 0\n        : (x > y ? 1 : -1)\n    }\n  })\n})\n","import { nearlyEqual as bigNearlyEqual } from '../../utils/bignumber/nearlyEqual'\nimport { nearlyEqual } from '../../utils/number'\nimport { factory } from '../../utils/factory'\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03'\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07'\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12'\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14'\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13'\n\nconst name = 'smaller'\nconst dependencies = [\n  'typed',\n  'config',\n  'matrix',\n  'DenseMatrix'\n]\n\nexport const createSmaller = /* #__PURE__ */ factory(name, dependencies, ({ typed, config, matrix, DenseMatrix }) => {\n  const algorithm03 = createAlgorithm03({ typed })\n  const algorithm07 = createAlgorithm07({ typed, DenseMatrix })\n  const algorithm12 = createAlgorithm12({ typed, DenseMatrix })\n  const algorithm13 = createAlgorithm13({ typed })\n  const algorithm14 = createAlgorithm14({ typed })\n\n  /**\n   * Test whether value x is smaller than y.\n   *\n   * The function returns true when x is smaller than y and the relative\n   * difference between x and y is smaller than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.smaller(x, y)\n   *\n   * Examples:\n   *\n   *    math.smaller(2, 3)            // returns true\n   *    math.smaller(5, 2 * 2)        // returns false\n   *\n   *    const a = math.unit('5 cm')\n   *    const b = math.unit('2 inch')\n   *    math.smaller(a, b)            // returns true\n   *\n   * See also:\n   *\n   *    equal, unequal, smallerEq, smaller, smallerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is smaller than y, else returns false\n   */\n  const smaller = typed(name, {\n\n    'boolean, boolean': function (x, y) {\n      return x < y\n    },\n\n    'number, number': function (x, y) {\n      return x < y && !nearlyEqual(x, y, config.epsilon)\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.lt(y) && !bigNearlyEqual(x, y, config.epsilon)\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.compare(y) === -1\n    },\n\n    'Complex, Complex': function (x, y) {\n      throw new TypeError('No ordering relation is defined for complex numbers')\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base')\n      }\n      return smaller(x.value, y.value)\n    },\n\n    'SparseMatrix, SparseMatrix': function (x, y) {\n      return algorithm07(x, y, smaller)\n    },\n\n    'SparseMatrix, DenseMatrix': function (x, y) {\n      return algorithm03(y, x, smaller, true)\n    },\n\n    'DenseMatrix, SparseMatrix': function (x, y) {\n      return algorithm03(x, y, smaller, false)\n    },\n\n    'DenseMatrix, DenseMatrix': function (x, y) {\n      return algorithm13(x, y, smaller)\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return smaller(matrix(x), matrix(y)).valueOf()\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return smaller(matrix(x), y)\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return smaller(x, matrix(y))\n    },\n\n    'SparseMatrix, any': function (x, y) {\n      return algorithm12(x, y, smaller, false)\n    },\n\n    'DenseMatrix, any': function (x, y) {\n      return algorithm14(x, y, smaller, false)\n    },\n\n    'any, SparseMatrix': function (x, y) {\n      return algorithm12(y, x, smaller, true)\n    },\n\n    'any, DenseMatrix': function (x, y) {\n      return algorithm14(y, x, smaller, true)\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, smaller, false).valueOf()\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, smaller, true).valueOf()\n    }\n  })\n\n  return smaller\n})\n\nexport const createSmallerNumber = /* #__PURE__ */ factory(name, ['typed', 'config'], ({ typed, config }) => {\n  return typed(name, {\n    'number, number': function (x, y) {\n      return x < y && !nearlyEqual(x, y, config.epsilon)\n    }\n  })\n})\n","import { nearlyEqual as bigNearlyEqual } from '../../utils/bignumber/nearlyEqual'\nimport { nearlyEqual } from '../../utils/number'\nimport { factory } from '../../utils/factory'\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03'\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07'\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12'\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14'\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13'\n\nconst name = 'larger'\nconst dependencies = [\n  'typed',\n  'config',\n  'matrix',\n  'DenseMatrix'\n]\n\nexport const createLarger = /* #__PURE__ */ factory(name, dependencies, ({ typed, config, matrix, DenseMatrix }) => {\n  const algorithm03 = createAlgorithm03({ typed })\n  const algorithm07 = createAlgorithm07({ typed, DenseMatrix })\n  const algorithm12 = createAlgorithm12({ typed, DenseMatrix })\n  const algorithm13 = createAlgorithm13({ typed })\n  const algorithm14 = createAlgorithm14({ typed })\n\n  /**\n   * Test whether value x is larger than y.\n   *\n   * The function returns true when x is larger than y and the relative\n   * difference between x and y is larger than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.larger(x, y)\n   *\n   * Examples:\n   *\n   *    math.larger(2, 3)             // returns false\n   *    math.larger(5, 2 + 2)         // returns true\n   *\n   *    const a = math.unit('5 cm')\n   *    const b = math.unit('2 inch')\n   *    math.larger(a, b)             // returns false\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, smallerEq, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is larger than y, else returns false\n   */\n  const larger = typed(name, {\n\n    'boolean, boolean': function (x, y) {\n      return x > y\n    },\n\n    'number, number': function (x, y) {\n      return x > y && !nearlyEqual(x, y, config.epsilon)\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.gt(y) && !bigNearlyEqual(x, y, config.epsilon)\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.compare(y) === 1\n    },\n\n    'Complex, Complex': function () {\n      throw new TypeError('No ordering relation is defined for complex numbers')\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base')\n      }\n      return larger(x.value, y.value)\n    },\n\n    'SparseMatrix, SparseMatrix': function (x, y) {\n      return algorithm07(x, y, larger)\n    },\n\n    'SparseMatrix, DenseMatrix': function (x, y) {\n      return algorithm03(y, x, larger, true)\n    },\n\n    'DenseMatrix, SparseMatrix': function (x, y) {\n      return algorithm03(x, y, larger, false)\n    },\n\n    'DenseMatrix, DenseMatrix': function (x, y) {\n      return algorithm13(x, y, larger)\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return larger(matrix(x), matrix(y)).valueOf()\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return larger(matrix(x), y)\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return larger(x, matrix(y))\n    },\n\n    'SparseMatrix, any': function (x, y) {\n      return algorithm12(x, y, larger, false)\n    },\n\n    'DenseMatrix, any': function (x, y) {\n      return algorithm14(x, y, larger, false)\n    },\n\n    'any, SparseMatrix': function (x, y) {\n      return algorithm12(y, x, larger, true)\n    },\n\n    'any, DenseMatrix': function (x, y) {\n      return algorithm14(y, x, larger, true)\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, larger, false).valueOf()\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, larger, true).valueOf()\n    }\n  })\n\n  return larger\n})\n\nexport const createLargerNumber = /* #__PURE__ */ factory(name, ['typed', 'config'], ({ typed, config }) => {\n  return typed(name, {\n    'number, number': function (x, y) {\n      return x > y && !nearlyEqual(x, y, config.epsilon)\n    }\n  })\n})\n","import { factory } from '../../utils/factory'\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03'\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07'\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12'\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14'\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13'\n\nconst name = 'unequal'\nconst dependencies = [\n  'typed',\n  'config',\n  'equalScalar',\n  'matrix',\n  'DenseMatrix'\n]\n\nexport const createUnequal = /* #__PURE__ */ factory(name, dependencies, ({ typed, config, equalScalar, matrix, DenseMatrix }) => {\n  const algorithm03 = createAlgorithm03({ typed })\n  const algorithm07 = createAlgorithm07({ typed, DenseMatrix })\n  const algorithm12 = createAlgorithm12({ typed, DenseMatrix })\n  const algorithm13 = createAlgorithm13({ typed })\n  const algorithm14 = createAlgorithm14({ typed })\n\n  /**\n   * Test whether two values are unequal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * larger than the configured epsilon. The function cannot be used to compare\n   * values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must unequal y.re, or x.im must unequal y.im.\n   * Strings are compared by their numerical value.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is unequal\n   * with everything except `null`, and `undefined` is unequal with everything\n   * except `undefined`.\n   *\n   * Syntax:\n   *\n   *    math.unequal(x, y)\n   *\n   * Examples:\n   *\n   *    math.unequal(2 + 2, 3)       // returns true\n   *    math.unequal(2 + 2, 4)       // returns false\n   *\n   *    const a = math.unit('50 cm')\n   *    const b = math.unit('5 m')\n   *    math.unequal(a, b)           // returns false\n   *\n   *    const c = [2, 5, 1]\n   *    const d = [2, 7, 1]\n   *\n   *    math.unequal(c, d)           // returns [false, true, false]\n   *    math.deepEqual(c, d)         // returns false\n   *\n   *    math.unequal(0, null)        // returns true\n   * See also:\n   *\n   *    equal, deepEqual, smaller, smallerEq, larger, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the compared values are unequal, else returns false\n   */\n  const unequal = typed('unequal', {\n\n    'any, any': function (x, y) {\n      // strict equality for null and undefined?\n      if (x === null) { return y !== null }\n      if (y === null) { return x !== null }\n      if (x === undefined) { return y !== undefined }\n      if (y === undefined) { return x !== undefined }\n\n      return _unequal(x, y)\n    },\n\n    'SparseMatrix, SparseMatrix': function (x, y) {\n      return algorithm07(x, y, _unequal)\n    },\n\n    'SparseMatrix, DenseMatrix': function (x, y) {\n      return algorithm03(y, x, _unequal, true)\n    },\n\n    'DenseMatrix, SparseMatrix': function (x, y) {\n      return algorithm03(x, y, _unequal, false)\n    },\n\n    'DenseMatrix, DenseMatrix': function (x, y) {\n      return algorithm13(x, y, _unequal)\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return unequal(matrix(x), matrix(y)).valueOf()\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return unequal(matrix(x), y)\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return unequal(x, matrix(y))\n    },\n\n    'SparseMatrix, any': function (x, y) {\n      return algorithm12(x, y, _unequal, false)\n    },\n\n    'DenseMatrix, any': function (x, y) {\n      return algorithm14(x, y, _unequal, false)\n    },\n\n    'any, SparseMatrix': function (x, y) {\n      return algorithm12(y, x, _unequal, true)\n    },\n\n    'any, DenseMatrix': function (x, y) {\n      return algorithm14(y, x, _unequal, true)\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, _unequal, false).valueOf()\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, _unequal, true).valueOf()\n    }\n  })\n\n  function _unequal (x, y) {\n    return !equalScalar(x, y)\n  }\n\n  return unequal\n})\n\nexport const createUnequalNumber = factory(name, ['typed', 'equalScalar'], ({ typed, equalScalar }) => {\n  return typed(name, {\n    'any, any': function (x, y) {\n      // strict equality for null and undefined?\n      if (x === null) { return y !== null }\n      if (y === null) { return x !== null }\n      if (x === undefined) { return y !== undefined }\n      if (y === undefined) { return x !== undefined }\n\n      return !equalScalar(x, y)\n    }\n  })\n})\n","import { typeOf } from '../../../utils/is'\n\n/**\n * Improve error messages for statistics functions. Errors are typically\n * thrown in an internally used function like larger, causing the error\n * not to mention the function (like max) which is actually used by the user.\n *\n * @param {Error} err\n * @param {String} fnName\n * @param {*} [value]\n * @return {Error}\n */\nexport function improveErrorMessage (err, fnName, value) {\n  // TODO: add information with the index (also needs transform in expression parser)\n  let details\n\n  if (String(err).indexOf('Unexpected type') !== -1) {\n    details = arguments.length > 2\n      ? ' (type: ' + typeOf(value) + ', value: ' + JSON.stringify(value) + ')'\n      : ' (type: ' + err.data.actual + ')'\n\n    return new TypeError('Cannot calculate ' + fnName + ', unexpected type of argument' + details)\n  }\n\n  if (String(err).indexOf('complex numbers') !== -1) {\n    details = arguments.length > 2\n      ? ' (type: ' + typeOf(value) + ', value: ' + JSON.stringify(value) + ')'\n      : ''\n\n    return new TypeError('Cannot calculate ' + fnName + ', no ordering relation is defined for complex numbers' + details)\n  }\n\n  return err\n}\n","import { deepForEach, reduce, containsCollections } from '../../utils/collection'\nimport { factory } from '../../utils/factory'\nimport { improveErrorMessage } from './utils/improveErrorMessage'\n\nconst name = 'max'\nconst dependencies = ['typed', 'larger']\n\nexport const createMax = /* #__PURE__ */ factory(name, dependencies, ({ typed, larger }) => {\n  /**\n   * Compute the maximum value of a matrix or a  list with values.\n   * In case of a multi dimensional array, the maximum of the flattened array\n   * will be calculated. When `dim` is provided, the maximum over the selected\n   * dimension will be calculated. Parameter `dim` is zero-based.\n   *\n   * Syntax:\n   *\n   *     math.max(a, b, c, ...)\n   *     math.max(A)\n   *     math.max(A, dim)\n   *\n   * Examples:\n   *\n   *     math.max(2, 1, 4, 3)                  // returns 4\n   *     math.max([2, 1, 4, 3])                // returns 4\n   *\n   *     // maximum over a specified dimension (zero-based)\n   *     math.max([[2, 5], [4, 3], [1, 7]], 0) // returns [4, 7]\n   *     math.max([[2, 5], [4, 3]], [1, 7], 1) // returns [5, 4, 7]\n   *\n   *     math.max(2.7, 7.1, -4.5, 2.0, 4.1)    // returns 7.1\n   *     math.min(2.7, 7.1, -4.5, 2.0, 4.1)    // returns -4.5\n   *\n   * See also:\n   *\n   *    mean, median, min, prod, std, sum, variance\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The maximum value\n   */\n  return typed(name, {\n    // max([a, b, c, d, ...])\n    'Array | Matrix': _max,\n\n    // max([a, b, c, d, ...], dim)\n    'Array | Matrix, number | BigNumber': function (array, dim) {\n      return reduce(array, dim.valueOf(), _largest)\n    },\n\n    // max(a, b, c, d, ...)\n    '...': function (args) {\n      if (containsCollections(args)) {\n        throw new TypeError('Scalar values expected in function max')\n      }\n\n      return _max(args)\n    }\n  })\n\n  /**\n   * Return the largest of two values\n   * @param {*} x\n   * @param {*} y\n   * @returns {*} Returns x when x is largest, or y when y is largest\n   * @private\n   */\n  function _largest (x, y) {\n    try {\n      return larger(x, y) ? x : y\n    } catch (err) {\n      throw improveErrorMessage(err, 'max', y)\n    }\n  }\n\n  /**\n   * Recursively calculate the maximum value in an n-dimensional array\n   * @param {Array} array\n   * @return {number} max\n   * @private\n   */\n  function _max (array) {\n    let res\n\n    deepForEach(array, function (value) {\n      try {\n        if (isNaN(value) && typeof value === 'number') {\n          res = NaN\n        } else if (res === undefined || larger(value, res)) {\n          res = value\n        }\n      } catch (err) {\n        throw improveErrorMessage(err, 'max', value)\n      }\n    })\n\n    if (res === undefined) {\n      throw new Error('Cannot calculate max of an empty array')\n    }\n\n    return res\n  }\n})\n","import { factory } from '../../utils/factory'\n\nconst name = 'FibonacciHeap'\nconst dependencies = ['smaller', 'larger']\n\nexport const createFibonacciHeapClass = /* #__PURE__ */ factory(name, dependencies, ({ smaller, larger }) => {\n  const oneOverLogPhi = 1.0 / Math.log((1.0 + Math.sqrt(5.0)) / 2.0)\n\n  /**\n   * Fibonacci Heap implementation, used interally for Matrix math.\n   * @class FibonacciHeap\n   * @constructor FibonacciHeap\n   */\n  function FibonacciHeap () {\n    if (!(this instanceof FibonacciHeap)) { throw new SyntaxError('Constructor must be called with the new operator') }\n\n    // initialize fields\n    this._minimum = null\n    this._size = 0\n  }\n\n  /**\n   * Attach type information\n   */\n  FibonacciHeap.prototype.type = 'FibonacciHeap'\n  FibonacciHeap.prototype.isFibonacciHeap = true\n\n  /**\n   * Inserts a new data element into the heap. No heap consolidation is\n   * performed at this time, the new node is simply inserted into the root\n   * list of this heap. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.insert = function (key, value) {\n    // create node\n    const node = {\n      key: key,\n      value: value,\n      degree: 0\n    }\n    // check we have a node in the minimum\n    if (this._minimum) {\n      // minimum node\n      const minimum = this._minimum\n      // update left & right of node\n      node.left = minimum\n      node.right = minimum.right\n      minimum.right = node\n      node.right.left = node\n      // update minimum node in heap if needed\n      if (smaller(key, minimum.key)) {\n        // node has a smaller key, use it as minimum\n        this._minimum = node\n      }\n    } else {\n      // set left & right\n      node.left = node\n      node.right = node\n      // this is the first node\n      this._minimum = node\n    }\n    // increment number of nodes in heap\n    this._size++\n    // return node\n    return node\n  }\n\n  /**\n   * Returns the number of nodes in heap. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.size = function () {\n    return this._size\n  }\n\n  /**\n   * Removes all elements from this heap.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.clear = function () {\n    this._minimum = null\n    this._size = 0\n  }\n\n  /**\n   * Returns true if the heap is empty, otherwise false.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.isEmpty = function () {\n    return this._size === 0\n  }\n\n  /**\n   * Extracts the node with minimum key from heap. Amortized running\n   * time: O(log n).\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.extractMinimum = function () {\n    // node to remove\n    const node = this._minimum\n    // check we have a minimum\n    if (node === null) { return node }\n    // current minimum\n    let minimum = this._minimum\n    // get number of children\n    let numberOfChildren = node.degree\n    // pointer to the first child\n    let x = node.child\n    // for each child of node do...\n    while (numberOfChildren > 0) {\n      // store node in right side\n      const tempRight = x.right\n      // remove x from child list\n      x.left.right = x.right\n      x.right.left = x.left\n      // add x to root list of heap\n      x.left = minimum\n      x.right = minimum.right\n      minimum.right = x\n      x.right.left = x\n      // set Parent[x] to null\n      x.parent = null\n      x = tempRight\n      numberOfChildren--\n    }\n    // remove node from root list of heap\n    node.left.right = node.right\n    node.right.left = node.left\n    // update minimum\n    if (node === node.right) {\n      // empty\n      minimum = null\n    } else {\n      // update minimum\n      minimum = node.right\n      // we need to update the pointer to the root with minimum key\n      minimum = _findMinimumNode(minimum, this._size)\n    }\n    // decrement size of heap\n    this._size--\n    // update minimum\n    this._minimum = minimum\n    // return node\n    return node\n  }\n\n  /**\n   * Removes a node from the heap given the reference to the node. The trees\n   * in the heap will be consolidated, if necessary. This operation may fail\n   * to remove the correct element if there are nodes with key value -Infinity.\n   * Running time: O(log n) amortized.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.remove = function (node) {\n    // decrease key value\n    this._minimum = _decreaseKey(this._minimum, node, -1)\n    // remove the smallest\n    this.extractMinimum()\n  }\n\n  /**\n   * Decreases the key value for a heap node, given the new value to take on.\n   * The structure of the heap may be changed and will not be consolidated.\n   * Running time: O(1) amortized.\n   * @memberof FibonacciHeap\n   */\n  function _decreaseKey (minimum, node, key) {\n    // set node key\n    node.key = key\n    // get parent node\n    const parent = node.parent\n    if (parent && smaller(node.key, parent.key)) {\n      // remove node from parent\n      _cut(minimum, node, parent)\n      // remove all nodes from parent to the root parent\n      _cascadingCut(minimum, parent)\n    }\n    // update minimum node if needed\n    if (smaller(node.key, minimum.key)) { minimum = node }\n    // return minimum\n    return minimum\n  }\n\n  /**\n   * The reverse of the link operation: removes node from the child list of parent.\n   * This method assumes that min is non-null. Running time: O(1).\n   * @memberof FibonacciHeap\n   */\n  function _cut (minimum, node, parent) {\n    // remove node from parent children and decrement Degree[parent]\n    node.left.right = node.right\n    node.right.left = node.left\n    parent.degree--\n    // reset y.child if necessary\n    if (parent.child === node) { parent.child = node.right }\n    // remove child if degree is 0\n    if (parent.degree === 0) { parent.child = null }\n    // add node to root list of heap\n    node.left = minimum\n    node.right = minimum.right\n    minimum.right = node\n    node.right.left = node\n    // set parent[node] to null\n    node.parent = null\n    // set mark[node] to false\n    node.mark = false\n  }\n\n  /**\n   * Performs a cascading cut operation. This cuts node from its parent and then\n   * does the same for its parent, and so on up the tree.\n   * Running time: O(log n); O(1) excluding the recursion.\n   * @memberof FibonacciHeap\n   */\n  function _cascadingCut (minimum, node) {\n    // store parent node\n    const parent = node.parent\n    // if there's a parent...\n    if (!parent) { return }\n    // if node is unmarked, set it marked\n    if (!node.mark) {\n      node.mark = true\n    } else {\n      // it's marked, cut it from parent\n      _cut(minimum, node, parent)\n      // cut its parent as well\n      _cascadingCut(parent)\n    }\n  }\n\n  /**\n   * Make the first node a child of the second one. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n  const _linkNodes = function (node, parent) {\n    // remove node from root list of heap\n    node.left.right = node.right\n    node.right.left = node.left\n    // make node a Child of parent\n    node.parent = parent\n    if (!parent.child) {\n      parent.child = node\n      node.right = node\n      node.left = node\n    } else {\n      node.left = parent.child\n      node.right = parent.child.right\n      parent.child.right = node\n      node.right.left = node\n    }\n    // increase degree[parent]\n    parent.degree++\n    // set mark[node] false\n    node.mark = false\n  }\n\n  function _findMinimumNode (minimum, size) {\n    // to find trees of the same degree efficiently we use an array of length O(log n) in which we keep a pointer to one root of each degree\n    const arraySize = Math.floor(Math.log(size) * oneOverLogPhi) + 1\n    // create list with initial capacity\n    const array = new Array(arraySize)\n    // find the number of root nodes.\n    let numRoots = 0\n    let x = minimum\n    if (x) {\n      numRoots++\n      x = x.right\n      while (x !== minimum) {\n        numRoots++\n        x = x.right\n      }\n    }\n    // vars\n    let y\n    // For each node in root list do...\n    while (numRoots > 0) {\n      // access this node's degree..\n      let d = x.degree\n      // get next node\n      const next = x.right\n      // check if there is a node already in array with the same degree\n      while (true) {\n        // get node with the same degree is any\n        y = array[d]\n        if (!y) { break }\n        // make one node with the same degree a child of the other, do this based on the key value.\n        if (larger(x.key, y.key)) {\n          const temp = y\n          y = x\n          x = temp\n        }\n        // make y a child of x\n        _linkNodes(y, x)\n        // we have handled this degree, go to next one.\n        array[d] = null\n        d++\n      }\n      // save this node for later when we might encounter another of the same degree.\n      array[d] = x\n      // move forward through list.\n      x = next\n      numRoots--\n    }\n    // Set min to null (effectively losing the root list) and reconstruct the root list from the array entries in array[].\n    minimum = null\n    // loop nodes in array\n    for (let i = 0; i < arraySize; i++) {\n      // get current node\n      y = array[i]\n      if (!y) { continue }\n      // check if we have a linked list\n      if (minimum) {\n        // First remove node from root list.\n        y.left.right = y.right\n        y.right.left = y.left\n        // now add to root list, again.\n        y.left = minimum\n        y.right = minimum.right\n        minimum.right = y\n        y.right.left = y\n        // check if this is a new min.\n        if (smaller(y.key, minimum.key)) { minimum = y }\n      } else { minimum = y }\n    }\n    return minimum\n  }\n\n  return FibonacciHeap\n}, { isClass: true })\n","import { factory } from '../../utils/factory'\nimport { extend } from '../../utils/object'\nimport { createAlgorithm01 } from '../../type/matrix/utils/algorithm01'\nimport { createAlgorithm04 } from '../../type/matrix/utils/algorithm04'\nimport { createAlgorithm10 } from '../../type/matrix/utils/algorithm10'\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13'\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14'\n\nconst name = 'add'\nconst dependencies = [\n  'typed',\n  'matrix',\n  'addScalar',\n  'equalScalar',\n  'DenseMatrix',\n  'SparseMatrix'\n]\n\nexport const createAdd = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix, addScalar, equalScalar, DenseMatrix, SparseMatrix }) => {\n  const algorithm01 = createAlgorithm01({ typed })\n  const algorithm04 = createAlgorithm04({ typed, equalScalar })\n  const algorithm10 = createAlgorithm10({ typed, DenseMatrix })\n  const algorithm13 = createAlgorithm13({ typed })\n  const algorithm14 = createAlgorithm14({ typed })\n\n  /**\n   * Add two or more values, `x + y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.add(x, y)\n   *    math.add(x, y, z, ...)\n   *\n   * Examples:\n   *\n   *    math.add(2, 3)               // returns number 5\n   *    math.add(2, 3, 4)            // returns number 9\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(-4, 1)\n   *    math.add(a, b)               // returns Complex -2 + 4i\n   *\n   *    math.add([1, 2, 3], 4)       // returns Array [5, 6, 7]\n   *\n   *    const c = math.unit('5 cm')\n   *    const d = math.unit('2.1 mm')\n   *    math.add(c, d)               // returns Unit 52.1 mm\n   *\n   *    math.add(\"2.3\", \"4\")         // returns number 6.3\n   *\n   * See also:\n   *\n   *    subtract, sum\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to add\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Sum of `x` and `y`\n   */\n  const add = typed(name, extend({\n    // we extend the signatures of addScalar with signatures dealing with matrices\n\n    'DenseMatrix, DenseMatrix': function (x, y) {\n      return algorithm13(x, y, addScalar)\n    },\n\n    'DenseMatrix, SparseMatrix': function (x, y) {\n      return algorithm01(x, y, addScalar, false)\n    },\n\n    'SparseMatrix, DenseMatrix': function (x, y) {\n      return algorithm01(y, x, addScalar, true)\n    },\n\n    'SparseMatrix, SparseMatrix': function (x, y) {\n      return algorithm04(x, y, addScalar)\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return add(matrix(x), matrix(y)).valueOf()\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return add(matrix(x), y)\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return add(x, matrix(y))\n    },\n\n    'DenseMatrix, any': function (x, y) {\n      return algorithm14(x, y, addScalar, false)\n    },\n\n    'SparseMatrix, any': function (x, y) {\n      return algorithm10(x, y, addScalar, false)\n    },\n\n    'any, DenseMatrix': function (x, y) {\n      return algorithm14(y, x, addScalar, true)\n    },\n\n    'any, SparseMatrix': function (x, y) {\n      return algorithm10(y, x, addScalar, true)\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, addScalar, false).valueOf()\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, addScalar, true).valueOf()\n    },\n\n    'any, any': addScalar,\n\n    'any, any, ...any': function (x, y, rest) {\n      let result = add(x, y)\n\n      for (let i = 0; i < rest.length; i++) {\n        result = add(result, rest[i])\n      }\n\n      return result\n    }\n  }, addScalar.signatures))\n\n  return add\n})\n","import { factory } from '../../utils/factory'\nimport { deepMap } from '../../utils/collection'\nimport { absNumber } from '../../plain/number'\n\nconst name = 'abs'\nconst dependencies = ['typed']\n\nexport const createAbs = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Calculate the absolute value of a number. For matrices, the function is\n   * evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.abs(x)\n   *\n   * Examples:\n   *\n   *    math.abs(3.5)                // returns number 3.5\n   *    math.abs(-4.2)               // returns number 4.2\n   *\n   *    math.abs([3, -5, -1, 0, 2])  // returns Array [3, 5, 1, 0, 2]\n   *\n   * See also:\n   *\n   *    sign\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x\n   *            A number or matrix for which to get the absolute value\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit}\n   *            Absolute value of `x`\n   */\n  const abs = typed(name, {\n    'number': absNumber,\n\n    'Complex': function (x) {\n      return x.abs()\n    },\n\n    'BigNumber': function (x) {\n      return x.abs()\n    },\n\n    'Fraction': function (x) {\n      return x.abs()\n    },\n\n    'Array | Matrix': function (x) {\n      // deep map collection, skip zeros since abs(0) = 0\n      return deepMap(x, abs, true)\n    },\n\n    'Unit': function (x) {\n      return x.abs()\n    }\n  })\n\n  return abs\n})\n","import { factory } from '../../utils/factory'\nimport { isMatrix } from '../../utils/is'\nimport { extend } from '../../utils/object'\nimport { arraySize } from '../../utils/array'\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11'\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14'\n\nconst name = 'multiply'\nconst dependencies = [\n  'typed',\n  'matrix',\n  'addScalar',\n  'multiplyScalar',\n  'equalScalar'\n]\n\nexport const createMultiply = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix, addScalar, multiplyScalar, equalScalar }) => {\n  const algorithm11 = createAlgorithm11({ typed, equalScalar })\n  const algorithm14 = createAlgorithm14({ typed })\n\n  /**\n   * Multiply two or more values, `x * y`.\n   * For matrices, the matrix product is calculated.\n   *\n   * Syntax:\n   *\n   *    math.multiply(x, y)\n   *    math.multiply(x, y, z, ...)\n   *\n   * Examples:\n   *\n   *    math.multiply(4, 5.2)        // returns number 20.8\n   *    math.multiply(2, 3, 4)       // returns number 24\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(4, 1)\n   *    math.multiply(a, b)          // returns Complex 5 + 14i\n   *\n   *    const c = [[1, 2], [4, 3]]\n   *    const d = [[1, 2, 3], [3, -4, 7]]\n   *    math.multiply(c, d)          // returns Array [[7, -6, 17], [13, -4, 33]]\n   *\n   *    const e = math.unit('2.1 km')\n   *    math.multiply(3, e)          // returns Unit 6.3 km\n   *\n   * See also:\n   *\n   *    divide, prod, cross, dot\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to multiply\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to multiply\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Multiplication of `x` and `y`\n   */\n  const multiply = typed(name, extend({\n    // we extend the signatures of multiplyScalar with signatures dealing with matrices\n\n    'Array, Array': function (x, y) {\n      // check dimensions\n      _validateMatrixDimensions(arraySize(x), arraySize(y))\n\n      // use dense matrix implementation\n      const m = multiply(matrix(x), matrix(y))\n      // return array or scalar\n      return isMatrix(m) ? m.valueOf() : m\n    },\n\n    'Matrix, Matrix': function (x, y) {\n      // dimensions\n      const xsize = x.size()\n      const ysize = y.size()\n\n      // check dimensions\n      _validateMatrixDimensions(xsize, ysize)\n\n      // process dimensions\n      if (xsize.length === 1) {\n        // process y dimensions\n        if (ysize.length === 1) {\n          // Vector * Vector\n          return _multiplyVectorVector(x, y, xsize[0])\n        }\n        // Vector * Matrix\n        return _multiplyVectorMatrix(x, y)\n      }\n      // process y dimensions\n      if (ysize.length === 1) {\n        // Matrix * Vector\n        return _multiplyMatrixVector(x, y)\n      }\n      // Matrix * Matrix\n      return _multiplyMatrixMatrix(x, y)\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use Matrix * Matrix implementation\n      return multiply(x, matrix(y))\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use Matrix * Matrix implementation\n      return multiply(matrix(x, y.storage()), y)\n    },\n\n    'SparseMatrix, any': function (x, y) {\n      return algorithm11(x, y, multiplyScalar, false)\n    },\n\n    'DenseMatrix, any': function (x, y) {\n      return algorithm14(x, y, multiplyScalar, false)\n    },\n\n    'any, SparseMatrix': function (x, y) {\n      return algorithm11(y, x, multiplyScalar, true)\n    },\n\n    'any, DenseMatrix': function (x, y) {\n      return algorithm14(y, x, multiplyScalar, true)\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, multiplyScalar, false).valueOf()\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, multiplyScalar, true).valueOf()\n    },\n\n    'any, any': multiplyScalar,\n\n    'any, any, ...any': function (x, y, rest) {\n      let result = multiply(x, y)\n\n      for (let i = 0; i < rest.length; i++) {\n        result = multiply(result, rest[i])\n      }\n\n      return result\n    }\n  }, multiplyScalar.signatures))\n\n  function _validateMatrixDimensions (size1, size2) {\n    // check left operand dimensions\n    switch (size1.length) {\n      case 1:\n        // check size2\n        switch (size2.length) {\n          case 1:\n            // Vector x Vector\n            if (size1[0] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Vectors must have the same length')\n            }\n            break\n          case 2:\n            // Vector x Matrix\n            if (size1[0] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Vector length (' + size1[0] + ') must match Matrix rows (' + size2[0] + ')')\n            }\n            break\n          default:\n            throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)')\n        }\n        break\n      case 2:\n        // check size2\n        switch (size2.length) {\n          case 1:\n            // Matrix x Vector\n            if (size1[1] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Matrix columns (' + size1[1] + ') must match Vector length (' + size2[0] + ')')\n            }\n            break\n          case 2:\n            // Matrix x Matrix\n            if (size1[1] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Matrix A columns (' + size1[1] + ') must match Matrix B rows (' + size2[0] + ')')\n            }\n            break\n          default:\n            throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)')\n        }\n        break\n      default:\n        throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix A has ' + size1.length + ' dimensions)')\n    }\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (N)\n   * @param {Matrix} b            Dense Vector   (N)\n   *\n   * @return {number}             Scalar value\n   */\n  function _multiplyVectorVector (a, b, n) {\n    // check empty vector\n    if (n === 0) { throw new Error('Cannot multiply two empty vectors') }\n\n    // a dense\n    const adata = a._data\n    const adt = a._datatype\n    // b dense\n    const bdata = b._data\n    const bdt = b._datatype\n\n    // datatype\n    let dt\n    // addScalar signature to use\n    let af = addScalar\n    // multiplyScalar signature to use\n    let mf = multiplyScalar\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt])\n      mf = typed.find(multiplyScalar, [dt, dt])\n    }\n\n    // result (do not initialize it with zero)\n    let c = mf(adata[0], bdata[0])\n    // loop data\n    for (let i = 1; i < n; i++) {\n      // multiply and accumulate\n      c = af(c, mf(adata[i], bdata[i]))\n    }\n    return c\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (M)\n   * @param {Matrix} b            Matrix         (MxN)\n   *\n   * @return {Matrix}             Dense Vector   (N)\n   */\n  function _multiplyVectorMatrix (a, b) {\n    // process storage\n    if (b.storage() !== 'dense') {\n      throw new Error('Support for SparseMatrix not implemented')\n    }\n    return _multiplyVectorDenseMatrix(a, b)\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (M)\n   * @param {Matrix} b            Dense Matrix   (MxN)\n   *\n   * @return {Matrix}             Dense Vector   (N)\n   */\n  function _multiplyVectorDenseMatrix (a, b) {\n    // a dense\n    const adata = a._data\n    const asize = a._size\n    const adt = a._datatype\n    // b dense\n    const bdata = b._data\n    const bsize = b._size\n    const bdt = b._datatype\n    // rows & columns\n    const alength = asize[0]\n    const bcolumns = bsize[1]\n\n    // datatype\n    let dt\n    // addScalar signature to use\n    let af = addScalar\n    // multiplyScalar signature to use\n    let mf = multiplyScalar\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt])\n      mf = typed.find(multiplyScalar, [dt, dt])\n    }\n\n    // result\n    const c = []\n\n    // loop matrix columns\n    for (let j = 0; j < bcolumns; j++) {\n      // sum (do not initialize it with zero)\n      let sum = mf(adata[0], bdata[0][j])\n      // loop vector\n      for (let i = 1; i < alength; i++) {\n        // multiply & accumulate\n        sum = af(sum, mf(adata[i], bdata[i][j]))\n      }\n      c[j] = sum\n    }\n\n    // return matrix\n    return a.createDenseMatrix({\n      data: c,\n      size: [bcolumns],\n      datatype: dt\n    })\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Matrix         (MxN)\n   * @param {Matrix} b            Dense Vector   (N)\n   *\n   * @return {Matrix}             Dense Vector   (M)\n   */\n  const _multiplyMatrixVector = typed('_multiplyMatrixVector', {\n    'DenseMatrix, any': _multiplyDenseMatrixVector,\n    'SparseMatrix, any': _multiplySparseMatrixVector\n  })\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Matrix         (MxN)\n   * @param {Matrix} b            Matrix         (NxC)\n   *\n   * @return {Matrix}             Matrix         (MxC)\n   */\n  const _multiplyMatrixMatrix = typed('_multiplyMatrixMatrix', {\n    'DenseMatrix, DenseMatrix': _multiplyDenseMatrixDenseMatrix,\n    'DenseMatrix, SparseMatrix': _multiplyDenseMatrixSparseMatrix,\n    'SparseMatrix, DenseMatrix': _multiplySparseMatrixDenseMatrix,\n    'SparseMatrix, SparseMatrix': _multiplySparseMatrixSparseMatrix\n  })\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix  (MxN)\n   * @param {Matrix} b            Dense Vector (N)\n   *\n   * @return {Matrix}             Dense Vector (M)\n   */\n  function _multiplyDenseMatrixVector (a, b) {\n    // a dense\n    const adata = a._data\n    const asize = a._size\n    const adt = a._datatype\n    // b dense\n    const bdata = b._data\n    const bdt = b._datatype\n    // rows & columns\n    const arows = asize[0]\n    const acolumns = asize[1]\n\n    // datatype\n    let dt\n    // addScalar signature to use\n    let af = addScalar\n    // multiplyScalar signature to use\n    let mf = multiplyScalar\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt])\n      mf = typed.find(multiplyScalar, [dt, dt])\n    }\n\n    // result\n    const c = []\n\n    // loop matrix a rows\n    for (let i = 0; i < arows; i++) {\n      // current row\n      const row = adata[i]\n      // sum (do not initialize it with zero)\n      let sum = mf(row[0], bdata[0])\n      // loop matrix a columns\n      for (let j = 1; j < acolumns; j++) {\n        // multiply & accumulate\n        sum = af(sum, mf(row[j], bdata[j]))\n      }\n      c[i] = sum\n    }\n\n    // return matrix\n    return a.createDenseMatrix({\n      data: c,\n      size: [arows],\n      datatype: dt\n    })\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix    (MxN)\n   * @param {Matrix} b            DenseMatrix    (NxC)\n   *\n   * @return {Matrix}             DenseMatrix    (MxC)\n   */\n  function _multiplyDenseMatrixDenseMatrix (a, b) {\n    // a dense\n    const adata = a._data\n    const asize = a._size\n    const adt = a._datatype\n    // b dense\n    const bdata = b._data\n    const bsize = b._size\n    const bdt = b._datatype\n    // rows & columns\n    const arows = asize[0]\n    const acolumns = asize[1]\n    const bcolumns = bsize[1]\n\n    // datatype\n    let dt\n    // addScalar signature to use\n    let af = addScalar\n    // multiplyScalar signature to use\n    let mf = multiplyScalar\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt])\n      mf = typed.find(multiplyScalar, [dt, dt])\n    }\n\n    // result\n    const c = []\n\n    // loop matrix a rows\n    for (let i = 0; i < arows; i++) {\n      // current row\n      const row = adata[i]\n      // initialize row array\n      c[i] = []\n      // loop matrix b columns\n      for (let j = 0; j < bcolumns; j++) {\n        // sum (avoid initializing sum to zero)\n        let sum = mf(row[0], bdata[0][j])\n        // loop matrix a columns\n        for (let x = 1; x < acolumns; x++) {\n          // multiply & accumulate\n          sum = af(sum, mf(row[x], bdata[x][j]))\n        }\n        c[i][j] = sum\n      }\n    }\n\n    // return matrix\n    return a.createDenseMatrix({\n      data: c,\n      size: [arows, bcolumns],\n      datatype: dt\n    })\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix    (MxN)\n   * @param {Matrix} b            SparseMatrix   (NxC)\n   *\n   * @return {Matrix}             SparseMatrix   (MxC)\n   */\n  function _multiplyDenseMatrixSparseMatrix (a, b) {\n    // a dense\n    const adata = a._data\n    const asize = a._size\n    const adt = a._datatype\n    // b sparse\n    const bvalues = b._values\n    const bindex = b._index\n    const bptr = b._ptr\n    const bsize = b._size\n    const bdt = b._datatype\n    // validate b matrix\n    if (!bvalues) { throw new Error('Cannot multiply Dense Matrix times Pattern only Matrix') }\n    // rows & columns\n    const arows = asize[0]\n    const bcolumns = bsize[1]\n\n    // datatype\n    let dt\n    // addScalar signature to use\n    let af = addScalar\n    // multiplyScalar signature to use\n    let mf = multiplyScalar\n    // equalScalar signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt])\n      mf = typed.find(multiplyScalar, [dt, dt])\n      eq = typed.find(equalScalar, [dt, dt])\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt)\n    }\n\n    // result\n    const cvalues = []\n    const cindex = []\n    const cptr = []\n    // c matrix\n    const c = b.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    })\n\n    // loop b columns\n    for (let jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length\n      // indeces in column jb\n      const kb0 = bptr[jb]\n      const kb1 = bptr[jb + 1]\n      // do not process column jb if no data exists\n      if (kb1 > kb0) {\n        // last row mark processed\n        let last = 0\n        // loop a rows\n        for (let i = 0; i < arows; i++) {\n          // column mark\n          const mark = i + 1\n          // C[i, jb]\n          let cij\n          // values in b column j\n          for (let kb = kb0; kb < kb1; kb++) {\n            // row\n            const ib = bindex[kb]\n            // check value has been initialized\n            if (last !== mark) {\n              // first value in column jb\n              cij = mf(adata[i][ib], bvalues[kb])\n              // update mark\n              last = mark\n            } else {\n              // accumulate value\n              cij = af(cij, mf(adata[i][ib], bvalues[kb]))\n            }\n          }\n          // check column has been processed and value != 0\n          if (last === mark && !eq(cij, zero)) {\n            // push row & value\n            cindex.push(i)\n            cvalues.push(cij)\n          }\n        }\n      }\n    }\n    // update ptr\n    cptr[bcolumns] = cindex.length\n\n    // return sparse matrix\n    return c\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix    (MxN)\n   * @param {Matrix} b            Dense Vector (N)\n   *\n   * @return {Matrix}             SparseMatrix    (M, 1)\n   */\n  function _multiplySparseMatrixVector (a, b) {\n    // a sparse\n    const avalues = a._values\n    const aindex = a._index\n    const aptr = a._ptr\n    const adt = a._datatype\n    // validate a matrix\n    if (!avalues) { throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix') }\n    // b dense\n    const bdata = b._data\n    const bdt = b._datatype\n    // rows & columns\n    const arows = a._size[0]\n    const brows = b._size[0]\n    // result\n    const cvalues = []\n    const cindex = []\n    const cptr = []\n\n    // datatype\n    let dt\n    // addScalar signature to use\n    let af = addScalar\n    // multiplyScalar signature to use\n    let mf = multiplyScalar\n    // equalScalar signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt])\n      mf = typed.find(multiplyScalar, [dt, dt])\n      eq = typed.find(equalScalar, [dt, dt])\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt)\n    }\n\n    // workspace\n    const x = []\n    // vector with marks indicating a value x[i] exists in a given column\n    const w = []\n\n    // update ptr\n    cptr[0] = 0\n    // rows in b\n    for (let ib = 0; ib < brows; ib++) {\n      // b[ib]\n      const vbi = bdata[ib]\n      // check b[ib] != 0, avoid loops\n      if (!eq(vbi, zero)) {\n        // A values & index in ib column\n        for (let ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n          // a row\n          const ia = aindex[ka]\n          // check value exists in current j\n          if (!w[ia]) {\n            // ia is new entry in j\n            w[ia] = true\n            // add i to pattern of C\n            cindex.push(ia)\n            // x(ia) = A\n            x[ia] = mf(vbi, avalues[ka])\n          } else {\n            // i exists in C already\n            x[ia] = af(x[ia], mf(vbi, avalues[ka]))\n          }\n        }\n      }\n    }\n    // copy values from x to column jb of c\n    for (let p1 = cindex.length, p = 0; p < p1; p++) {\n      // row\n      const ic = cindex[p]\n      // copy value\n      cvalues[p] = x[ic]\n    }\n    // update ptr\n    cptr[1] = cindex.length\n\n    // return sparse matrix\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, 1],\n      datatype: dt\n    })\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix      (MxN)\n   * @param {Matrix} b            DenseMatrix       (NxC)\n   *\n   * @return {Matrix}             SparseMatrix      (MxC)\n   */\n  function _multiplySparseMatrixDenseMatrix (a, b) {\n    // a sparse\n    const avalues = a._values\n    const aindex = a._index\n    const aptr = a._ptr\n    const adt = a._datatype\n    // validate a matrix\n    if (!avalues) { throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix') }\n    // b dense\n    const bdata = b._data\n    const bdt = b._datatype\n    // rows & columns\n    const arows = a._size[0]\n    const brows = b._size[0]\n    const bcolumns = b._size[1]\n\n    // datatype\n    let dt\n    // addScalar signature to use\n    let af = addScalar\n    // multiplyScalar signature to use\n    let mf = multiplyScalar\n    // equalScalar signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt])\n      mf = typed.find(multiplyScalar, [dt, dt])\n      eq = typed.find(equalScalar, [dt, dt])\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt)\n    }\n\n    // result\n    const cvalues = []\n    const cindex = []\n    const cptr = []\n    // c matrix\n    const c = a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    })\n\n    // workspace\n    const x = []\n    // vector with marks indicating a value x[i] exists in a given column\n    const w = []\n\n    // loop b columns\n    for (let jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length\n      // mark in workspace for current column\n      const mark = jb + 1\n      // rows in jb\n      for (let ib = 0; ib < brows; ib++) {\n        // b[ib, jb]\n        const vbij = bdata[ib][jb]\n        // check b[ib, jb] != 0, avoid loops\n        if (!eq(vbij, zero)) {\n          // A values & index in ib column\n          for (let ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // a row\n            const ia = aindex[ka]\n            // check value exists in current j\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark\n              // add i to pattern of C\n              cindex.push(ia)\n              // x(ia) = A\n              x[ia] = mf(vbij, avalues[ka])\n            } else {\n              // i exists in C already\n              x[ia] = af(x[ia], mf(vbij, avalues[ka]))\n            }\n          }\n        }\n      }\n      // copy values from x to column jb of c\n      for (let p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {\n        // row\n        const ic = cindex[p]\n        // copy value\n        cvalues[p] = x[ic]\n      }\n    }\n    // update ptr\n    cptr[bcolumns] = cindex.length\n\n    // return sparse matrix\n    return c\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix      (MxN)\n   * @param {Matrix} b            SparseMatrix      (NxC)\n   *\n   * @return {Matrix}             SparseMatrix      (MxC)\n   */\n  function _multiplySparseMatrixSparseMatrix (a, b) {\n    // a sparse\n    const avalues = a._values\n    const aindex = a._index\n    const aptr = a._ptr\n    const adt = a._datatype\n    // b sparse\n    const bvalues = b._values\n    const bindex = b._index\n    const bptr = b._ptr\n    const bdt = b._datatype\n\n    // rows & columns\n    const arows = a._size[0]\n    const bcolumns = b._size[1]\n    // flag indicating both matrices (a & b) contain data\n    const values = avalues && bvalues\n\n    // datatype\n    let dt\n    // addScalar signature to use\n    let af = addScalar\n    // multiplyScalar signature to use\n    let mf = multiplyScalar\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt])\n      mf = typed.find(multiplyScalar, [dt, dt])\n    }\n\n    // result\n    const cvalues = values ? [] : undefined\n    const cindex = []\n    const cptr = []\n    // c matrix\n    const c = a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    })\n\n    // workspace\n    const x = values ? [] : undefined\n    // vector with marks indicating a value x[i] exists in a given column\n    const w = []\n    // variables\n    let ka, ka0, ka1, kb, kb0, kb1, ia, ib\n    // loop b columns\n    for (let jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length\n      // mark in workspace for current column\n      const mark = jb + 1\n      // B values & index in j\n      for (kb0 = bptr[jb], kb1 = bptr[jb + 1], kb = kb0; kb < kb1; kb++) {\n        // b row\n        ib = bindex[kb]\n        // check we need to process values\n        if (values) {\n          // loop values in a[:,ib]\n          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // row\n            ia = aindex[ka]\n            // check value exists in current j\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark\n              // add i to pattern of C\n              cindex.push(ia)\n              // x(ia) = A\n              x[ia] = mf(bvalues[kb], avalues[ka])\n            } else {\n              // i exists in C already\n              x[ia] = af(x[ia], mf(bvalues[kb], avalues[ka]))\n            }\n          }\n        } else {\n          // loop values in a[:,ib]\n          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // row\n            ia = aindex[ka]\n            // check value exists in current j\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark\n              // add i to pattern of C\n              cindex.push(ia)\n            }\n          }\n        }\n      }\n      // check we need to process matrix values (pattern matrix)\n      if (values) {\n        // copy values from x to column jb of c\n        for (let p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {\n          // row\n          const ic = cindex[p]\n          // copy value\n          cvalues[p] = x[ic]\n        }\n      }\n    }\n    // update ptr\n    cptr[bcolumns] = cindex.length\n\n    // return sparse matrix\n    return c\n  }\n\n  return multiply\n})\n","/**\n * Create a syntax error with the message:\n *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n * @param {string} fn     Function name\n * @param {number} count  Actual argument count\n * @param {number} min    Minimum required argument count\n * @param {number} [max]  Maximum required argument count\n * @extends Error\n */\nexport function ArgumentsError (fn, count, min, max) {\n  if (!(this instanceof ArgumentsError)) {\n    throw new SyntaxError('Constructor must be called with the new operator')\n  }\n\n  this.fn = fn\n  this.count = count\n  this.min = min\n  this.max = max\n\n  this.message = 'Wrong number of arguments in function ' + fn +\n      ' (' + count + ' provided, ' +\n      min + ((max !== undefined && max !== null) ? ('-' + max) : '') + ' expected)'\n\n  this.stack = (new Error()).stack\n}\n\nArgumentsError.prototype = new Error()\nArgumentsError.prototype.constructor = Error\nArgumentsError.prototype.name = 'ArgumentsError'\nArgumentsError.prototype.isArgumentsError = true\n","import { isBigNumber, isMatrix } from '../../utils/is'\nimport { DimensionError } from '../../error/DimensionError'\nimport { ArgumentsError } from '../../error/ArgumentsError'\nimport { isInteger } from '../../utils/number'\nimport { format } from '../../utils/string'\nimport { clone } from '../../utils/object'\nimport { resize as arrayResize } from '../../utils/array'\nimport { factory } from '../../utils/factory'\n\nconst name = 'resize'\nconst dependencies = ['config', 'matrix']\n\nexport const createResize = /* #__PURE__ */ factory(name, dependencies, ({ config, matrix }) => {\n  /**\n   * Resize a matrix\n   *\n   * Syntax:\n   *\n   *     math.resize(x, size)\n   *     math.resize(x, size, defaultValue)\n   *\n   * Examples:\n   *\n   *     math.resize([1, 2, 3, 4, 5], [3]) // returns Array  [1, 2, 3]\n   *     math.resize([1, 2, 3], [5], 0)    // returns Array  [1, 2, 3, 0, 0]\n   *     math.resize(2, [2, 3], 0)         // returns Matrix [[2, 0, 0], [0, 0, 0]]\n   *     math.resize(\"hello\", [8], \"!\")    // returns string 'hello!!!'\n   *\n   * See also:\n   *\n   *     size, squeeze, subset, reshape\n   *\n   * @param {Array | Matrix | *} x             Matrix to be resized\n   * @param {Array | Matrix} size              One dimensional array with numbers\n   * @param {number | string} [defaultValue=0] Zero by default, except in\n   *                                           case of a string, in that case\n   *                                           defaultValue = ' '\n   * @return {* | Array | Matrix} A resized clone of matrix `x`\n   */\n  // TODO: rework resize to a typed-function\n  return function resize (x, size, defaultValue) {\n    if (arguments.length !== 2 && arguments.length !== 3) {\n      throw new ArgumentsError('resize', arguments.length, 2, 3)\n    }\n\n    if (isMatrix(size)) {\n      size = size.valueOf() // get Array\n    }\n\n    if (isBigNumber(size[0])) {\n      // convert bignumbers to numbers\n      size = size.map(function (value) {\n        return !isBigNumber(value) ? value : value.toNumber()\n      })\n    }\n\n    // check x is a Matrix\n    if (isMatrix(x)) {\n      // use optimized matrix implementation, return copy\n      return x.resize(size, defaultValue, true)\n    }\n\n    if (typeof x === 'string') {\n      // resize string\n      return _resizeString(x, size, defaultValue)\n    }\n\n    // check result should be a matrix\n    const asMatrix = Array.isArray(x) ? false : (config.matrix !== 'Array')\n\n    if (size.length === 0) {\n      // output a scalar\n      while (Array.isArray(x)) {\n        x = x[0]\n      }\n\n      return clone(x)\n    } else {\n      // output an array/matrix\n      if (!Array.isArray(x)) {\n        x = [x]\n      }\n      x = clone(x)\n\n      const res = arrayResize(x, size, defaultValue)\n      return asMatrix ? matrix(res) : res\n    }\n  }\n\n  /**\n   * Resize a string\n   * @param {string} str\n   * @param {number[]} size\n   * @param {string} [defaultChar=' ']\n   * @private\n   */\n  function _resizeString (str, size, defaultChar) {\n    if (defaultChar !== undefined) {\n      if (typeof defaultChar !== 'string' || defaultChar.length !== 1) {\n        throw new TypeError('Single character expected as defaultValue')\n      }\n    } else {\n      defaultChar = ' '\n    }\n\n    if (size.length !== 1) {\n      throw new DimensionError(size.length, 1)\n    }\n    const len = size[0]\n    if (typeof len !== 'number' || !isInteger(len)) {\n      throw new TypeError('Invalid size, must contain positive integers ' +\n          '(size: ' + format(size) + ')')\n    }\n\n    if (str.length > len) {\n      return str.substring(0, len)\n    } else if (str.length < len) {\n      let res = str\n      for (let i = 0, ii = len - str.length; i < ii; i++) {\n        res += defaultChar\n      }\n      return res\n    } else {\n      return str\n    }\n  }\n})\n","import { factory } from '../../utils/factory'\nimport { isInteger } from '../../utils/number'\nimport { arraySize as size } from '../../utils/array'\nimport { powNumber } from '../../plain/number'\n\nconst name = 'pow'\nconst dependencies = [\n  'typed',\n  'config',\n  'identity',\n  'multiply',\n  'matrix',\n  'fraction',\n  'number',\n  'Complex'\n]\n\nexport const createPow = /* #__PURE__ */ factory(name, dependencies, ({ typed, config, identity, multiply, matrix, number, fraction, Complex }) => {\n  /**\n   * Calculates the power of x to y, `x ^ y`.\n   * Matrix exponentiation is supported for square matrices `x`, and positive\n   * integer exponents `y`.\n   *\n   * For cubic roots of negative numbers, the function returns the principal\n   * root by default. In order to let the function return the real root,\n   * math.js can be configured with `math.config({predictable: true})`.\n   * To retrieve all cubic roots of a value, use `math.cbrt(x, true)`.\n   *\n   * Syntax:\n   *\n   *    math.pow(x, y)\n   *\n   * Examples:\n   *\n   *    math.pow(2, 3)               // returns number 8\n   *\n   *    const a = math.complex(2, 3)\n   *    math.pow(a, 2)                // returns Complex -5 + 12i\n   *\n   *    const b = [[1, 2], [4, 3]]\n   *    math.pow(b, 2)               // returns Array [[9, 8], [16, 17]]\n   *\n   * See also:\n   *\n   *    multiply, sqrt, cbrt, nthRoot\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x  The base\n   * @param  {number | BigNumber | Complex} y                          The exponent\n   * @return {number | BigNumber | Complex | Array | Matrix} The value of `x` to the power `y`\n   */\n  return typed(name, {\n    'number, number': _pow,\n\n    'Complex, Complex': function (x, y) {\n      return x.pow(y)\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      if (y.isInteger() || x >= 0 || config.predictable) {\n        return x.pow(y)\n      } else {\n        return new Complex(x.toNumber(), 0).pow(y.toNumber(), 0)\n      }\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      if (y.d !== 1) {\n        if (config.predictable) {\n          throw new Error('Function pow does not support non-integer exponents for fractions.')\n        } else {\n          return _pow(x.valueOf(), y.valueOf())\n        }\n      } else {\n        return x.pow(y)\n      }\n    },\n\n    'Array, number': _powArray,\n\n    'Array, BigNumber': function (x, y) {\n      return _powArray(x, y.toNumber())\n    },\n\n    'Matrix, number': _powMatrix,\n\n    'Matrix, BigNumber': function (x, y) {\n      return _powMatrix(x, y.toNumber())\n    },\n\n    'Unit, number | BigNumber': function (x, y) {\n      return x.pow(y)\n    }\n\n  })\n\n  /**\n   * Calculates the power of x to y, x^y, for two numbers.\n   * @param {number} x\n   * @param {number} y\n   * @return {number | Complex} res\n   * @private\n   */\n  function _pow (x, y) {\n    // Alternatively could define a 'realmode' config option or something, but\n    // 'predictable' will work for now\n    if (config.predictable && !isInteger(y) && x < 0) {\n      // Check to see if y can be represented as a fraction\n      try {\n        const yFrac = fraction(y)\n        const yNum = number(yFrac)\n        if (y === yNum || Math.abs((y - yNum) / y) < 1e-14) {\n          if (yFrac.d % 2 === 1) {\n            return (yFrac.n % 2 === 0 ? 1 : -1) * Math.pow(-x, y)\n          }\n        }\n      } catch (ex) {\n        // fraction() throws an error if y is Infinity, etc.\n      }\n\n      // Unable to express y as a fraction, so continue on\n    }\n\n    // **for predictable mode** x^Infinity === NaN if x < -1\n    // N.B. this behavour is different from `Math.pow` which gives\n    // (-2)^Infinity === Infinity\n    if (config.predictable &&\n        ((x < -1 && y === Infinity) ||\n         (x > -1 && x < 0 && y === -Infinity))) {\n      return NaN\n    }\n\n    if (isInteger(y) || x >= 0 || config.predictable) {\n      return powNumber(x, y)\n    } else {\n      // TODO: the following infinity checks are duplicated from powNumber. Deduplicate this somehow\n\n      // x^Infinity === 0 if -1 < x < 1\n      // A real number 0 is returned instead of complex(0)\n      if ((x * x < 1 && y === Infinity) ||\n        (x * x > 1 && y === -Infinity)) {\n        return 0\n      }\n\n      return new Complex(x, 0).pow(y, 0)\n    }\n  }\n\n  /**\n   * Calculate the power of a 2d array\n   * @param {Array} x     must be a 2 dimensional, square matrix\n   * @param {number} y    a positive, integer value\n   * @returns {Array}\n   * @private\n   */\n  function _powArray (x, y) {\n    if (!isInteger(y) || y < 0) {\n      throw new TypeError('For A^b, b must be a positive integer (value is ' + y + ')')\n    }\n    // verify that A is a 2 dimensional square matrix\n    const s = size(x)\n    if (s.length !== 2) {\n      throw new Error('For A^b, A must be 2 dimensional (A has ' + s.length + ' dimensions)')\n    }\n    if (s[0] !== s[1]) {\n      throw new Error('For A^b, A must be square (size is ' + s[0] + 'x' + s[1] + ')')\n    }\n\n    let res = identity(s[0]).valueOf()\n    let px = x\n    while (y >= 1) {\n      if ((y & 1) === 1) {\n        res = multiply(px, res)\n      }\n      y >>= 1\n      px = multiply(px, px)\n    }\n    return res\n  }\n\n  /**\n   * Calculate the power of a 2d matrix\n   * @param {Matrix} x     must be a 2 dimensional, square matrix\n   * @param {number} y    a positive, integer value\n   * @returns {Matrix}\n   * @private\n   */\n  function _powMatrix (x, y) {\n    return matrix(_powArray(x.valueOf(), y))\n  }\n})\n","import { factory } from '../../utils/factory'\n\nconst name = 'equalText'\nconst dependencies = [\n  'typed',\n  'compareText',\n  'isZero'\n]\n\nexport const createEqualText = /* #__PURE__ */ factory(name, dependencies, ({ typed, compareText, isZero }) => {\n  /**\n   * Check equality of two strings. Comparison is case sensitive.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.equalText(x, y)\n   *\n   * Examples:\n   *\n   *    math.equalText('Hello', 'Hello')     // returns true\n   *    math.equalText('a', 'A')             // returns false\n   *    math.equal('2e3', '2000')            // returns true\n   *    math.equalText('2e3', '2000')        // returns false\n   *\n   *    math.equalText('B', ['A', 'B', 'C']) // returns [false, true, false]\n   *\n   * See also:\n   *\n   *    equal, compareText, compare, compareNatural\n   *\n   * @param  {string | Array | DenseMatrix} x First string to compare\n   * @param  {string | Array | DenseMatrix} y Second string to compare\n   * @return {number | Array | DenseMatrix} Returns true if the values are equal, and false if not.\n   */\n  return typed(name, {\n    'any, any': function (x, y) {\n      return isZero(compareText(x, y))\n    }\n  })\n})\n","import { isMatrix } from '../../utils/is'\nimport { isInteger } from '../../utils/number'\nimport { factory } from '../../utils/factory'\n\nconst name = 'partitionSelect'\nconst dependencies = ['typed', 'isNumeric', 'isNaN', 'compare']\n\nexport const createPartitionSelect = /* #__PURE__ */ factory(name, dependencies, ({ typed, isNumeric, isNaN, compare }) => {\n  const asc = compare\n  const desc = (a, b) => -compare(a, b)\n\n  /**\n   * Partition-based selection of an array or 1D matrix.\n   * Will find the kth smallest value, and mutates the input array.\n   * Uses Quickselect.\n   *\n   * Syntax:\n   *\n   *    math.partitionSelect(x, k)\n   *    math.partitionSelect(x, k, compare)\n   *\n   * Examples:\n   *\n   *    math.partitionSelect([5, 10, 1], 2)           // returns 10\n   *    math.partitionSelect(['C', 'B', 'A', 'D'], 1) // returns 'B'\n   *\n   *    function sortByLength (a, b) {\n   *      return a.length - b.length\n   *    }\n   *    math.partitionSelect(['Langdon', 'Tom', 'Sara'], 2, sortByLength) // returns 'Langdon'\n   *\n   * See also:\n   *\n   *    sort\n   *\n   * @param {Matrix | Array} x    A one dimensional matrix or array to sort\n   * @param {Number} k            The kth smallest value to be retrieved zero-based index\n   * @param {Function | 'asc' | 'desc'} [compare='asc']\n   *        An optional comparator function. The function is called as\n   *        `compare(a, b)`, and must return 1 when a > b, -1 when a < b,\n   *        and 0 when a == b.\n   * @return {*} Returns the kth lowest value.\n   */\n  return typed(name, {\n    'Array | Matrix, number': function (x, k) {\n      return _partitionSelect(x, k, asc)\n    },\n\n    'Array | Matrix, number, string': function (x, k, compare) {\n      if (compare === 'asc') {\n        return _partitionSelect(x, k, asc)\n      } else if (compare === 'desc') {\n        return _partitionSelect(x, k, desc)\n      } else {\n        throw new Error('Compare string must be \"asc\" or \"desc\"')\n      }\n    },\n\n    'Array | Matrix, number, function': _partitionSelect\n  })\n\n  function _partitionSelect (x, k, compare) {\n    if (!isInteger(k) || k < 0) {\n      throw new Error('k must be a non-negative integer')\n    }\n\n    if (isMatrix(x)) {\n      const size = x.size()\n      if (size.length > 1) {\n        throw new Error('Only one dimensional matrices supported')\n      }\n      return quickSelect(x.valueOf(), k, compare)\n    }\n\n    if (Array.isArray(x)) {\n      return quickSelect(x, k, compare)\n    }\n  }\n\n  /**\n   * Quickselect algorithm.\n   * Code adapted from:\n   * https://blog.teamleadnet.com/2012/07/quick-select-algorithm-find-kth-element.html\n   *\n   * @param {Array} arr\n   * @param {Number} k\n   * @param {Function} compare\n   * @private\n   */\n  function quickSelect (arr, k, compare) {\n    if (k >= arr.length) {\n      throw new Error('k out of bounds')\n    }\n\n    // check for NaN values since these can cause an infinite while loop\n    for (let i = 0; i < arr.length; i++) {\n      if (isNumeric(arr[i]) && isNaN(arr[i])) {\n        return arr[i] // return NaN\n      }\n    }\n\n    let from = 0\n    let to = arr.length - 1\n\n    // if from == to we reached the kth element\n    while (from < to) {\n      let r = from\n      let w = to\n      const pivot = arr[Math.floor(Math.random() * (to - from + 1)) + from]\n\n      // stop if the reader and writer meets\n      while (r < w) {\n        // arr[r] >= pivot\n        if (compare(arr[r], pivot) >= 0) { // put the large values at the end\n          const tmp = arr[w]\n          arr[w] = arr[r]\n          arr[r] = tmp\n          --w\n        } else { // the value is smaller than the pivot, skip\n          ++r\n        }\n      }\n\n      // if we stepped up (r++) we need to step one down (arr[r] > pivot)\n      if (compare(arr[r], pivot) > 0) {\n        --r\n      }\n\n      // the r pointer is on the end of the first k elements\n      if (k <= r) {\n        to = r\n      } else {\n        from = r + 1\n      }\n    }\n\n    return arr[k]\n  }\n})\n","import { factory } from '../../utils/factory'\n\nconst name = 'Spa'\nconst dependencies = ['addScalar', 'equalScalar', 'FibonacciHeap']\n\nexport const createSpaClass = /* #__PURE__ */ factory(name, dependencies, ({ addScalar, equalScalar, FibonacciHeap }) => {\n  /**\n   * An ordered Sparse Accumulator is a representation for a sparse vector that includes a dense array\n   * of the vector elements and an ordered list of non-zero elements.\n   */\n  function Spa () {\n    if (!(this instanceof Spa)) { throw new SyntaxError('Constructor must be called with the new operator') }\n\n    // allocate vector, TODO use typed arrays\n    this._values = []\n    this._heap = new FibonacciHeap()\n  }\n\n  /**\n   * Attach type information\n   */\n  Spa.prototype.type = 'Spa'\n  Spa.prototype.isSpa = true\n\n  /**\n   * Set the value for index i.\n   *\n   * @param {number} i                       The index\n   * @param {number | BigNumber | Complex}   The value at index i\n   */\n  Spa.prototype.set = function (i, v) {\n    // check we have a value @ i\n    if (!this._values[i]) {\n      // insert in heap\n      const node = this._heap.insert(i, v)\n      // set the value @ i\n      this._values[i] = node\n    } else {\n      // update the value @ i\n      this._values[i].value = v\n    }\n  }\n\n  Spa.prototype.get = function (i) {\n    const node = this._values[i]\n    if (node) { return node.value }\n    return 0\n  }\n\n  Spa.prototype.accumulate = function (i, v) {\n    // node @ i\n    let node = this._values[i]\n    if (!node) {\n      // insert in heap\n      node = this._heap.insert(i, v)\n      // initialize value\n      this._values[i] = node\n    } else {\n      // accumulate value\n      node.value = addScalar(node.value, v)\n    }\n  }\n\n  Spa.prototype.forEach = function (from, to, callback) {\n    // references\n    const heap = this._heap\n    const values = this._values\n    // nodes\n    const nodes = []\n    // node with minimum key, save it\n    let node = heap.extractMinimum()\n    if (node) { nodes.push(node) }\n    // extract nodes from heap (ordered)\n    while (node && node.key <= to) {\n      // check it is in range\n      if (node.key >= from) {\n        // check value is not zero\n        if (!equalScalar(node.value, 0)) {\n          // invoke callback\n          callback(node.key, node.value, this)\n        }\n      }\n      // extract next node, save it\n      node = heap.extractMinimum()\n      if (node) { nodes.push(node) }\n    }\n    // reinsert all nodes in heap\n    for (let i = 0; i < nodes.length; i++) {\n      // current node\n      const n = nodes[i]\n      // insert node in heap\n      node = heap.insert(n.key, n.value)\n      // update values\n      values[node.key] = node\n    }\n  }\n\n  Spa.prototype.swap = function (i, j) {\n    // node @ i and j\n    let nodei = this._values[i]\n    let nodej = this._values[j]\n    // check we need to insert indeces\n    if (!nodei && nodej) {\n      // insert in heap\n      nodei = this._heap.insert(i, nodej.value)\n      // remove from heap\n      this._heap.remove(nodej)\n      // set values\n      this._values[i] = nodei\n      this._values[j] = undefined\n    } else if (nodei && !nodej) {\n      // insert in heap\n      nodej = this._heap.insert(j, nodei.value)\n      // remove from heap\n      this._heap.remove(nodei)\n      // set values\n      this._values[j] = nodej\n      this._values[i] = undefined\n    } else if (nodei && nodej) {\n      // swap values\n      const v = nodei.value\n      nodei.value = nodej.value\n      nodej.value = v\n    }\n  }\n\n  return Spa\n}, { isClass: true })\n","import { isInteger } from '../../utils/number'\nimport { product } from '../../utils/product'\n\nexport function gammaNumber (n) {\n  let t, x\n\n  if (isInteger(n)) {\n    if (n <= 0) {\n      return isFinite(n) ? Infinity : NaN\n    }\n\n    if (n > 171) {\n      return Infinity // Will overflow\n    }\n\n    return product(1, n - 1)\n  }\n\n  if (n < 0.5) {\n    return Math.PI / (Math.sin(Math.PI * n) * gammaNumber(1 - n))\n  }\n\n  if (n >= 171.35) {\n    return Infinity // will overflow\n  }\n\n  if (n > 85.0) { // Extended Stirling Approx\n    const twoN = n * n\n    const threeN = twoN * n\n    const fourN = threeN * n\n    const fiveN = fourN * n\n    return Math.sqrt(2 * Math.PI / n) * Math.pow((n / Math.E), n) *\n      (1 + 1 / (12 * n) + 1 / (288 * twoN) - 139 / (51840 * threeN) -\n        571 / (2488320 * fourN) + 163879 / (209018880 * fiveN) +\n        5246819 / (75246796800 * fiveN * n))\n  }\n\n  --n\n  x = gammaP[0]\n  for (let i = 1; i < gammaP.length; ++i) {\n    x += gammaP[i] / (n + i)\n  }\n\n  t = n + gammaG + 0.5\n  return Math.sqrt(2 * Math.PI) * Math.pow(t, n + 0.5) * Math.exp(-t) * x\n}\ngammaNumber.signature = 'number'\n\n// TODO: comment on the variables g and p\n\nexport const gammaG = 4.7421875\n\nexport const gammaP = [\n  0.99999999999999709182,\n  57.156235665862923517,\n  -59.597960355475491248,\n  14.136097974741747174,\n  -0.49191381609762019978,\n  0.33994649984811888699e-4,\n  0.46523628927048575665e-4,\n  -0.98374475304879564677e-4,\n  0.15808870322491248884e-3,\n  -0.21026444172410488319e-3,\n  0.21743961811521264320e-3,\n  -0.16431810653676389022e-3,\n  0.84418223983852743293e-4,\n  -0.26190838401581408670e-4,\n  0.36899182659531622704e-5\n]\n","import { factory } from '../../../utils/factory'\nimport { deepMap } from '../../../utils/collection'\n\nconst name = 'bignumber'\nconst dependencies = ['typed', 'BigNumber']\n\nexport const createBignumber = /* #__PURE__ */ factory(name, dependencies, ({ typed, BigNumber }) => {\n  /**\n   * Create a BigNumber, which can store numbers with arbitrary precision.\n   * When a matrix is provided, all elements will be converted to BigNumber.\n   *\n   * Syntax:\n   *\n   *    math.bignumber(x)\n   *\n   * Examples:\n   *\n   *    0.1 + 0.2                                  // returns number 0.30000000000000004\n   *    math.bignumber(0.1) + math.bignumber(0.2)  // returns BigNumber 0.3\n   *\n   *\n   *    7.2e500                                    // returns number Infinity\n   *    math.bignumber('7.2e500')                  // returns BigNumber 7.2e500\n   *\n   * See also:\n   *\n   *    boolean, complex, index, matrix, string, unit\n   *\n   * @param {number | string | Fraction | BigNumber | Array | Matrix | boolean | null} [value]  Value for the big number,\n   *                                                    0 by default.\n   * @returns {BigNumber} The created bignumber\n   */\n  const bignumber = typed('bignumber', {\n    '': function () {\n      return new BigNumber(0)\n    },\n\n    'number': function (x) {\n      // convert to string to prevent errors in case of >15 digits\n      return new BigNumber(x + '')\n    },\n\n    'string': function (x) {\n      return new BigNumber(x)\n    },\n\n    'BigNumber': function (x) {\n      // we assume a BigNumber is immutable\n      return x\n    },\n\n    'Fraction': function (x) {\n      return new BigNumber(x.n).div(x.d).times(x.s)\n    },\n\n    'null': function (x) {\n      return new BigNumber(0)\n    },\n\n    'Array | Matrix': function (x) {\n      return deepMap(x, bignumber)\n    }\n  })\n\n  return bignumber\n})\n","import { clone } from '../../utils/object'\nimport { format } from '../../utils/string'\nimport { factory } from '../../utils/factory'\n\nconst name = 'transpose'\nconst dependencies = ['typed', 'matrix']\n\nexport const createTranspose = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix }) => {\n  /**\n   * Transpose a matrix. All values of the matrix are reflected over its\n   * main diagonal. Only applicable to two dimensional matrices containing\n   * a vector (i.e. having size `[1,n]` or `[n,1]`). One dimensional\n   * vectors and scalars return the input unchanged.\n   *\n   * Syntax:\n   *\n   *     math.transpose(x)\n   *\n   * Examples:\n   *\n   *     const A = [[1, 2, 3], [4, 5, 6]]\n   *     math.transpose(A)               // returns [[1, 4], [2, 5], [3, 6]]\n   *\n   * See also:\n   *\n   *     diag, inv, subset, squeeze\n   *\n   * @param {Array | Matrix} x  Matrix to be transposed\n   * @return {Array | Matrix}   The transposed matrix\n   */\n  const transpose = typed('transpose', {\n\n    'Array': function (x) {\n      // use dense matrix implementation\n      return transpose(matrix(x)).valueOf()\n    },\n\n    'Matrix': function (x) {\n      // matrix size\n      const size = x.size()\n\n      // result\n      let c\n\n      // process dimensions\n      switch (size.length) {\n        case 1:\n          // vector\n          c = x.clone()\n          break\n\n        case 2:\n          // rows and columns\n          const rows = size[0]\n          const columns = size[1]\n\n          // check columns\n          if (columns === 0) {\n            // throw exception\n            throw new RangeError('Cannot transpose a 2D matrix with no columns (size: ' + format(size) + ')')\n          }\n\n          // process storage format\n          switch (x.storage()) {\n            case 'dense':\n              c = _denseTranspose(x, rows, columns)\n              break\n            case 'sparse':\n              c = _sparseTranspose(x, rows, columns)\n              break\n          }\n          break\n\n        default:\n          // multi dimensional\n          throw new RangeError('Matrix must be a vector or two dimensional (size: ' + format(this._size) + ')')\n      }\n      return c\n    },\n\n    // scalars\n    'any': function (x) {\n      return clone(x)\n    }\n  })\n\n  function _denseTranspose (m, rows, columns) {\n    // matrix array\n    const data = m._data\n    // transposed matrix data\n    const transposed = []\n    let transposedRow\n    // loop columns\n    for (let j = 0; j < columns; j++) {\n      // initialize row\n      transposedRow = transposed[j] = []\n      // loop rows\n      for (let i = 0; i < rows; i++) {\n        // set data\n        transposedRow[i] = clone(data[i][j])\n      }\n    }\n    // return matrix\n    return m.createDenseMatrix({\n      data: transposed,\n      size: [columns, rows],\n      datatype: m._datatype\n    })\n  }\n\n  function _sparseTranspose (m, rows, columns) {\n    // matrix arrays\n    const values = m._values\n    const index = m._index\n    const ptr = m._ptr\n    // result matrices\n    const cvalues = values ? [] : undefined\n    const cindex = []\n    const cptr = []\n    // row counts\n    const w = []\n    for (let x = 0; x < rows; x++) { w[x] = 0 }\n    // vars\n    let p, l, j\n    // loop values in matrix\n    for (p = 0, l = index.length; p < l; p++) {\n      // number of values in row\n      w[index[p]]++\n    }\n    // cumulative sum\n    let sum = 0\n    // initialize cptr with the cummulative sum of row counts\n    for (let i = 0; i < rows; i++) {\n      // update cptr\n      cptr.push(sum)\n      // update sum\n      sum += w[i]\n      // update w\n      w[i] = cptr[i]\n    }\n    // update cptr\n    cptr.push(sum)\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // values & index in column\n      for (let k0 = ptr[j], k1 = ptr[j + 1], k = k0; k < k1; k++) {\n        // C values & index\n        const q = w[index[k]]++\n        // C[j, i] = A[i, j]\n        cindex[q] = j\n        // check we need to process values (pattern matrix)\n        if (values) { cvalues[q] = clone(values[k]) }\n      }\n    }\n    // return matrix\n    return m.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [columns, rows],\n      datatype: m._datatype\n    })\n  }\n\n  return transpose\n})\n","import { typeOf } from '../../utils/is'\nimport { factory } from '../../utils/factory'\nimport { noBignumber, noFraction } from '../../utils/noop'\n\nconst name = 'numeric'\nconst dependencies = ['number', '?bignumber', '?fraction']\n\nexport const createNumeric = /* #__PURE__ */ factory(name, dependencies, ({ number, bignumber, fraction }) => {\n  const validInputTypes = {\n    'string': true,\n    'number': true,\n    'BigNumber': true,\n    'Fraction': true\n  }\n\n  // Load the conversion functions for each output type\n  const validOutputTypes = {\n    'number': (x) => number(x),\n    'BigNumber': bignumber\n      ? (x) => bignumber(x)\n      : noBignumber,\n    'Fraction': fraction\n      ? (x) => fraction(x)\n      : noFraction\n  }\n\n  /**\n   * Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.\n   *\n   * Syntax:\n   *\n   *    math.numeric(x)\n   *\n   * Examples:\n   *\n   *    math.numeric('4')                           // returns number 4\n   *    math.numeric('4', 'number')                 // returns number 4\n   *    math.numeric('4', 'BigNumber')              // returns BigNumber 4\n   *    math.numeric('4', 'Fraction')               // returns Fraction 4\n   *    math.numeric(4, 'Fraction')                 // returns Fraction 4\n   *    math.numeric(math.fraction(2, 5), 'number') // returns number 0.4\n   *\n   * See also:\n   *\n   *    number, fraction, bignumber, string, format\n   *\n   * @param {string | number | BigNumber | Fraction } value\n   *              A numeric value or a string containing a numeric value\n   * @param {string} outputType\n   *              Desired numeric output type.\n   *              Available values: 'number', 'BigNumber', or 'Fraction'\n   * @return {number | BigNumber | Fraction}\n   *              Returns an instance of the numeric in the requested type\n   */\n  return function numeric (value, outputType) {\n    const inputType = typeOf(value)\n\n    if (!(inputType in validInputTypes)) {\n      throw new TypeError('Cannot convert ' + value + ' of type \"' + inputType + '\"; valid input types are ' + Object.keys(validInputTypes).join(', '))\n    }\n    if (!(outputType in validOutputTypes)) {\n      throw new TypeError('Cannot convert ' + value + ' to type \"' + outputType + '\"; valid output types are ' + Object.keys(validOutputTypes).join(', '))\n    }\n\n    if (outputType === inputType) {\n      return value\n    } else {\n      return validOutputTypes[outputType](value)\n    }\n  }\n})\n","import { nearlyEqual as bigNearlyEqual } from '../../utils/bignumber/nearlyEqual'\nimport { nearlyEqual } from '../../utils/number'\nimport { factory } from '../../utils/factory'\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03'\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07'\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12'\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14'\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13'\n\nconst name = 'smallerEq'\nconst dependencies = [\n  'typed',\n  'config',\n  'matrix',\n  'DenseMatrix'\n]\n\nexport const createSmallerEq = /* #__PURE__ */ factory(name, dependencies, ({ typed, config, matrix, DenseMatrix }) => {\n  const algorithm03 = createAlgorithm03({ typed })\n  const algorithm07 = createAlgorithm07({ typed, DenseMatrix })\n  const algorithm12 = createAlgorithm12({ typed, DenseMatrix })\n  const algorithm13 = createAlgorithm13({ typed })\n  const algorithm14 = createAlgorithm14({ typed })\n\n  /**\n   * Test whether value x is smaller or equal to y.\n   *\n   * The function returns true when x is smaller than y or the relative\n   * difference between x and y is smaller than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.smallerEq(x, y)\n   *\n   * Examples:\n   *\n   *    math.smaller(1 + 2, 3)        // returns false\n   *    math.smallerEq(1 + 2, 3)      // returns true\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, larger, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is smaller than y, else returns false\n   */\n  const smallerEq = typed(name, {\n\n    'boolean, boolean': function (x, y) {\n      return x <= y\n    },\n\n    'number, number': function (x, y) {\n      return x <= y || nearlyEqual(x, y, config.epsilon)\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.lte(y) || bigNearlyEqual(x, y, config.epsilon)\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.compare(y) !== 1\n    },\n\n    'Complex, Complex': function () {\n      throw new TypeError('No ordering relation is defined for complex numbers')\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base')\n      }\n      return smallerEq(x.value, y.value)\n    },\n\n    'SparseMatrix, SparseMatrix': function (x, y) {\n      return algorithm07(x, y, smallerEq)\n    },\n\n    'SparseMatrix, DenseMatrix': function (x, y) {\n      return algorithm03(y, x, smallerEq, true)\n    },\n\n    'DenseMatrix, SparseMatrix': function (x, y) {\n      return algorithm03(x, y, smallerEq, false)\n    },\n\n    'DenseMatrix, DenseMatrix': function (x, y) {\n      return algorithm13(x, y, smallerEq)\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return smallerEq(matrix(x), matrix(y)).valueOf()\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return smallerEq(matrix(x), y)\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return smallerEq(x, matrix(y))\n    },\n\n    'SparseMatrix, any': function (x, y) {\n      return algorithm12(x, y, smallerEq, false)\n    },\n\n    'DenseMatrix, any': function (x, y) {\n      return algorithm14(x, y, smallerEq, false)\n    },\n\n    'any, SparseMatrix': function (x, y) {\n      return algorithm12(y, x, smallerEq, true)\n    },\n\n    'any, DenseMatrix': function (x, y) {\n      return algorithm14(y, x, smallerEq, true)\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, smallerEq, false).valueOf()\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, smallerEq, true).valueOf()\n    }\n  })\n\n  return smallerEq\n})\n\nexport const createSmallerEqNumber = /* #__PURE__ */ factory(name, ['typed', 'config'], ({ typed, config }) => {\n  return typed(name, {\n    'number, number': function (x, y) {\n      return x <= y || nearlyEqual(x, y, config.epsilon)\n    }\n  })\n})\n","import { factory } from '../../utils/factory'\nimport { deepMap } from '../../utils/collection'\nimport { nearlyEqual } from '../../utils/number'\nimport { nearlyEqual as bigNearlyEqual } from '../../utils/bignumber/nearlyEqual'\nimport { ceilNumber } from '../../plain/number'\n\nconst name = 'ceil'\nconst dependencies = ['typed', 'config', 'round']\n\nexport const createCeil = /* #__PURE__ */ factory(name, dependencies, ({ typed, config, round }) => {\n  /**\n   * Round a value towards plus infinity\n   * If `x` is complex, both real and imaginary part are rounded towards plus infinity.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.ceil(x)\n   *\n   * Examples:\n   *\n   *    math.ceil(3.2)               // returns number 4\n   *    math.ceil(3.8)               // returns number 4\n   *    math.ceil(-4.2)              // returns number -4\n   *    math.ceil(-4.7)              // returns number -4\n   *\n   *    const c = math.complex(3.2, -2.7)\n   *    math.ceil(c)                 // returns Complex 4 - 2i\n   *\n   *    math.ceil([3.2, 3.8, -4.7])  // returns Array [4, 4, -4]\n   *\n   * See also:\n   *\n   *    floor, fix, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n  const ceil = typed('ceil', {\n    'number': function (x) {\n      if (nearlyEqual(x, round(x), config.epsilon)) {\n        return round(x)\n      } else {\n        return ceilNumber(x)\n      }\n    },\n\n    'Complex': function (x) {\n      return x.ceil()\n    },\n\n    'BigNumber': function (x) {\n      if (bigNearlyEqual(x, round(x), config.epsilon)) {\n        return round(x)\n      } else {\n        return x.ceil()\n      }\n    },\n\n    'Fraction': function (x) {\n      return x.ceil()\n    },\n\n    'Array | Matrix': function (x) {\n      // deep map collection, skip zeros since ceil(0) = 0\n      return deepMap(x, ceil, true)\n    }\n  })\n\n  return ceil\n})\n","import { factory } from '../../utils/factory'\nimport { DimensionError } from '../../error/DimensionError'\nimport { createAlgorithm01 } from '../../type/matrix/utils/algorithm01'\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03'\nimport { createAlgorithm05 } from '../../type/matrix/utils/algorithm05'\nimport { createAlgorithm10 } from '../../type/matrix/utils/algorithm10'\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13'\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14'\n\nconst name = 'subtract'\nconst dependencies = [\n  'typed',\n  'matrix',\n  'equalScalar',\n  'addScalar',\n  'unaryMinus',\n  'DenseMatrix'\n]\n\nexport const createSubtract = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix, equalScalar, addScalar, unaryMinus, DenseMatrix }) => {\n  // TODO: split function subtract in two: subtract and subtractScalar\n\n  const algorithm01 = createAlgorithm01({ typed })\n  const algorithm03 = createAlgorithm03({ typed })\n  const algorithm05 = createAlgorithm05({ typed, equalScalar })\n  const algorithm10 = createAlgorithm10({ typed, DenseMatrix })\n  const algorithm13 = createAlgorithm13({ typed })\n  const algorithm14 = createAlgorithm14({ typed })\n\n  /**\n   * Subtract two values, `x - y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.subtract(x, y)\n   *\n   * Examples:\n   *\n   *    math.subtract(5.3, 2)        // returns number 3.3\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(4, 1)\n   *    math.subtract(a, b)          // returns Complex -2 + 2i\n   *\n   *    math.subtract([5, 7, 4], 4)  // returns Array [1, 3, 0]\n   *\n   *    const c = math.unit('2.1 km')\n   *    const d = math.unit('500m')\n   *    math.subtract(c, d)          // returns Unit 1.6 km\n   *\n   * See also:\n   *\n   *    add\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x\n   *            Initial value\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y\n   *            Value to subtract from `x`\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}\n   *            Subtraction of `x` and `y`\n   */\n  const subtract = typed(name, {\n\n    'number, number': function (x, y) {\n      return x - y\n    },\n\n    'Complex, Complex': function (x, y) {\n      return x.sub(y)\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.minus(y)\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.sub(y)\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (x.value === null) {\n        throw new Error('Parameter x contains a unit with undefined value')\n      }\n\n      if (y.value === null) {\n        throw new Error('Parameter y contains a unit with undefined value')\n      }\n\n      if (!x.equalBase(y)) {\n        throw new Error('Units do not match')\n      }\n\n      const res = x.clone()\n      res.value = subtract(res.value, y.value)\n      res.fixPrefix = false\n\n      return res\n    },\n\n    'SparseMatrix, SparseMatrix': function (x, y) {\n      checkEqualDimensions(x, y)\n      return algorithm05(x, y, subtract)\n    },\n\n    'SparseMatrix, DenseMatrix': function (x, y) {\n      checkEqualDimensions(x, y)\n      return algorithm03(y, x, subtract, true)\n    },\n\n    'DenseMatrix, SparseMatrix': function (x, y) {\n      checkEqualDimensions(x, y)\n      return algorithm01(x, y, subtract, false)\n    },\n\n    'DenseMatrix, DenseMatrix': function (x, y) {\n      checkEqualDimensions(x, y)\n      return algorithm13(x, y, subtract)\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return subtract(matrix(x), matrix(y)).valueOf()\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return subtract(matrix(x), y)\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return subtract(x, matrix(y))\n    },\n\n    'SparseMatrix, any': function (x, y) {\n      return algorithm10(x, unaryMinus(y), addScalar)\n    },\n\n    'DenseMatrix, any': function (x, y) {\n      return algorithm14(x, y, subtract)\n    },\n\n    'any, SparseMatrix': function (x, y) {\n      return algorithm10(y, x, subtract, true)\n    },\n\n    'any, DenseMatrix': function (x, y) {\n      return algorithm14(y, x, subtract, true)\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, subtract, false).valueOf()\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, subtract, true).valueOf()\n    }\n  })\n\n  return subtract\n})\n\n/**\n * Check whether matrix x and y have the same number of dimensions.\n * Throws a DimensionError when dimensions are not equal\n * @param {Matrix} x\n * @param {Matrix} y\n */\nfunction checkEqualDimensions (x, y) {\n  const xsize = x.size()\n  const ysize = y.size()\n\n  if (xsize.length !== ysize.length) {\n    throw new DimensionError(xsize.length, ysize.length)\n  }\n}\n","import { arraySize, squeeze } from '../../utils/array'\nimport { factory } from '../../utils/factory'\n\nconst name = 'cross'\nconst dependencies = ['typed', 'matrix', 'subtract', 'multiply']\n\nexport const createCross = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix, subtract, multiply }) => {\n  /**\n   * Calculate the cross product for two vectors in three dimensional space.\n   * The cross product of `A = [a1, a2, a3]` and `B = [b1, b2, b3]` is defined\n   * as:\n   *\n   *    cross(A, B) = [\n   *      a2 * b3 - a3 * b2,\n   *      a3 * b1 - a1 * b3,\n   *      a1 * b2 - a2 * b1\n   *    ]\n   *\n   * If one of the input vectors has a dimension greater than 1, the output\n   * vector will be a 1x3 (2-dimensional) matrix.\n   *\n   * Syntax:\n   *\n   *    math.cross(x, y)\n   *\n   * Examples:\n   *\n   *    math.cross([1, 1, 0],   [0, 1, 1])       // Returns [1, -1, 1]\n   *    math.cross([3, -3, 1],  [4, 9, 2])       // Returns [-15, -2, 39]\n   *    math.cross([2, 3, 4],   [5, 6, 7])       // Returns [-3, 6, -3]\n   *    math.cross([[1, 2, 3]], [[4], [5], [6]]) // Returns [[-3, 6, -3]]\n   *\n   * See also:\n   *\n   *    dot, multiply\n   *\n   * @param  {Array | Matrix} x   First vector\n   * @param  {Array | Matrix} y   Second vector\n   * @return {Array | Matrix}     Returns the cross product of `x` and `y`\n   */\n  return typed(name, {\n    'Matrix, Matrix': function (x, y) {\n      return matrix(_cross(x.toArray(), y.toArray()))\n    },\n\n    'Matrix, Array': function (x, y) {\n      return matrix(_cross(x.toArray(), y))\n    },\n\n    'Array, Matrix': function (x, y) {\n      return matrix(_cross(x, y.toArray()))\n    },\n\n    'Array, Array': _cross\n  })\n\n  /**\n   * Calculate the cross product for two arrays\n   * @param {Array} x  First vector\n   * @param {Array} y  Second vector\n   * @returns {Array} Returns the cross product of x and y\n   * @private\n   */\n  function _cross (x, y) {\n    const highestDimension = Math.max(arraySize(x).length, arraySize(y).length)\n\n    x = squeeze(x)\n    y = squeeze(y)\n\n    const xSize = arraySize(x)\n    const ySize = arraySize(y)\n\n    if (xSize.length !== 1 || ySize.length !== 1 || xSize[0] !== 3 || ySize[0] !== 3) {\n      throw new RangeError('Vectors with length 3 expected ' +\n      '(Size A = [' + xSize.join(', ') + '], B = [' + ySize.join(', ') + '])')\n    }\n\n    const product = [\n      subtract(multiply(x[1], y[2]), multiply(x[2], y[1])),\n      subtract(multiply(x[2], y[0]), multiply(x[0], y[2])),\n      subtract(multiply(x[0], y[1]), multiply(x[1], y[0]))\n    ]\n\n    if (highestDimension > 1) {\n      return [product]\n    } else {\n      return product\n    }\n  }\n})\n","import { factory } from '../../utils/factory'\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03'\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07'\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12'\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13'\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14'\n\nconst name = 'equal'\nconst dependencies = [\n  'typed',\n  'matrix',\n  'equalScalar',\n  'DenseMatrix'\n]\n\nexport const createEqual = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix, equalScalar, DenseMatrix }) => {\n  const algorithm03 = createAlgorithm03({ typed })\n  const algorithm07 = createAlgorithm07({ typed, DenseMatrix })\n  const algorithm12 = createAlgorithm12({ typed, DenseMatrix })\n  const algorithm13 = createAlgorithm13({ typed })\n  const algorithm14 = createAlgorithm14({ typed })\n\n  /**\n   * Test whether two values are equal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * smaller than the configured epsilon. The function cannot be used to\n   * compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must equal y.re, and x.im must equal y.im.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is only\n   * equal to `null` and nothing else, and `undefined` is only equal to\n   * `undefined` and nothing else. Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.equal(x, y)\n   *\n   * Examples:\n   *\n   *    math.equal(2 + 2, 3)         // returns false\n   *    math.equal(2 + 2, 4)         // returns true\n   *\n   *    const a = math.unit('50 cm')\n   *    const b = math.unit('5 m')\n   *    math.equal(a, b)             // returns true\n   *\n   *    const c = [2, 5, 1]\n   *    const d = [2, 7, 1]\n   *\n   *    math.equal(c, d)             // returns [true, false, true]\n   *    math.deepEqual(c, d)         // returns false\n   *\n   *    math.equal(\"1000\", \"1e3\")    // returns true\n   *    math.equal(0, null)          // returns false\n   *\n   * See also:\n   *\n   *    unequal, smaller, smallerEq, larger, largerEq, compare, deepEqual, equalText\n   *\n   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the compared values are equal, else returns false\n   */\n  const equal = typed(name, {\n\n    'any, any': function (x, y) {\n      // strict equality for null and undefined?\n      if (x === null) { return y === null }\n      if (y === null) { return x === null }\n      if (x === undefined) { return y === undefined }\n      if (y === undefined) { return x === undefined }\n\n      return equalScalar(x, y)\n    },\n\n    'SparseMatrix, SparseMatrix': function (x, y) {\n      return algorithm07(x, y, equalScalar)\n    },\n\n    'SparseMatrix, DenseMatrix': function (x, y) {\n      return algorithm03(y, x, equalScalar, true)\n    },\n\n    'DenseMatrix, SparseMatrix': function (x, y) {\n      return algorithm03(x, y, equalScalar, false)\n    },\n\n    'DenseMatrix, DenseMatrix': function (x, y) {\n      return algorithm13(x, y, equalScalar)\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return equal(matrix(x), matrix(y)).valueOf()\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return equal(matrix(x), y)\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return equal(x, matrix(y))\n    },\n\n    'SparseMatrix, any': function (x, y) {\n      return algorithm12(x, y, equalScalar, false)\n    },\n\n    'DenseMatrix, any': function (x, y) {\n      return algorithm14(x, y, equalScalar, false)\n    },\n\n    'any, SparseMatrix': function (x, y) {\n      return algorithm12(y, x, equalScalar, true)\n    },\n\n    'any, DenseMatrix': function (x, y) {\n      return algorithm14(y, x, equalScalar, true)\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, equalScalar, false).valueOf()\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, equalScalar, true).valueOf()\n    }\n  })\n\n  return equal\n})\n\nexport const createEqualNumber = factory(name, ['typed', 'equalScalar'], ({ typed, equalScalar }) => {\n  return typed(name, {\n    'any, any': function (x, y) {\n      // strict equality for null and undefined?\n      if (x === null) { return y === null }\n      if (y === null) { return x === null }\n      if (x === undefined) { return y === undefined }\n      if (y === undefined) { return x === undefined }\n\n      return equalScalar(x, y)\n    }\n  })\n})\n","import { factory } from '../../utils/factory'\nimport { typeOf } from '../../utils/is'\n\nconst name = 'divideScalar'\nconst dependencies = ['typed', 'numeric']\n\nexport const createDivideScalar = /* #__PURE__ */ factory(name, dependencies, ({ typed, numeric }) => {\n  /**\n   * Divide two scalar values, `x / y`.\n   * This function is meant for internal use: it is used by the public functions\n   * `divide` and `inv`.\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   Numerator\n   * @param  {number | BigNumber | Fraction | Complex} y          Denominator\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Quotient, `x / y`\n   * @private\n   */\n  const divideScalar = typed(name, {\n    'number, number': function (x, y) {\n      return x / y\n    },\n\n    'Complex, Complex': function (x, y) {\n      return x.div(y)\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.div(y)\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.div(y)\n    },\n\n    'Unit, number | Fraction | BigNumber': function (x, y) {\n      const res = x.clone()\n      // TODO: move the divide function to Unit.js, it uses internals of Unit\n      const one = numeric(1, typeOf(y))\n      res.value = divideScalar(((res.value === null) ? res._normalize(one) : res.value), y)\n      return res\n    },\n\n    'number | Fraction | BigNumber, Unit': function (x, y) {\n      let res = y.clone()\n      res = res.pow(-1)\n      // TODO: move the divide function to Unit.js, it uses internals of Unit\n      const one = numeric(1, typeOf(x))\n      res.value = divideScalar(x, ((y.value === null) ? y._normalize(one) : y.value))\n      return res\n    },\n\n    'Unit, Unit': function (x, y) {\n      return x.divide(y)\n    }\n  })\n\n  return divideScalar\n})\n","import { factory } from '../../../utils/factory'\nimport { createSolveValidation } from './utils/solveValidation'\n\nconst name = 'lsolve'\nconst dependencies = [\n  'typed',\n  'matrix',\n  'divideScalar',\n  'multiplyScalar',\n  'subtract',\n  'equalScalar',\n  'DenseMatrix'\n]\n\nexport const createLsolve = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix, divideScalar, multiplyScalar, subtract, equalScalar, DenseMatrix }) => {\n  const solveValidation = createSolveValidation({ DenseMatrix })\n\n  /**\n   * Solves the linear equation system by forwards substitution. Matrix must be a lower triangular matrix.\n   *\n   * `L * x = b`\n   *\n   * Syntax:\n   *\n   *    math.lsolve(L, b)\n   *\n   * Examples:\n   *\n   *    const a = [[-2, 3], [2, 1]]\n   *    const b = [11, 9]\n   *    const x = lsolve(a, b)  // [[-5.5], [20]]\n   *\n   * See also:\n   *\n   *    lup, slu, usolve, lusolve\n   *\n   * @param {Matrix, Array} L       A N x N matrix or array (L)\n   * @param {Matrix, Array} b       A column vector with the b values\n   *\n   * @return {DenseMatrix | Array}  A column vector with the linear system solution (x)\n   */\n  return typed(name, {\n\n    'SparseMatrix, Array | Matrix': function (m, b) {\n      // process matrix\n      return _sparseForwardSubstitution(m, b)\n    },\n\n    'DenseMatrix, Array | Matrix': function (m, b) {\n      // process matrix\n      return _denseForwardSubstitution(m, b)\n    },\n\n    'Array, Array | Matrix': function (a, b) {\n      // create dense matrix from array\n      const m = matrix(a)\n      // use matrix implementation\n      const r = _denseForwardSubstitution(m, b)\n      // result\n      return r.valueOf()\n    }\n  })\n\n  function _denseForwardSubstitution (m, b) {\n    // validate matrix and vector, return copy of column vector b\n    b = solveValidation(m, b, true)\n    // column vector data\n    const bdata = b._data\n    // rows & columns\n    const rows = m._size[0]\n    const columns = m._size[1]\n    // result\n    const x = []\n    // data\n    const data = m._data\n    // forward solve m * x = b, loop columns\n    for (let j = 0; j < columns; j++) {\n      // b[j]\n      const bj = bdata[j][0] || 0\n      // x[j]\n      let xj\n      // forward substitution (outer product) avoids inner looping when bj === 0\n      if (!equalScalar(bj, 0)) {\n        // value @ [j, j]\n        const vjj = data[j][j]\n        // check vjj\n        if (equalScalar(vjj, 0)) {\n          // system cannot be solved\n          throw new Error('Linear system cannot be solved since matrix is singular')\n        }\n        // calculate xj\n        xj = divideScalar(bj, vjj)\n        // loop rows\n        for (let i = j + 1; i < rows; i++) {\n          // update copy of b\n          bdata[i] = [subtract(bdata[i][0] || 0, multiplyScalar(xj, data[i][j]))]\n        }\n      } else {\n        // zero @ j\n        xj = 0\n      }\n      // update x\n      x[j] = [xj]\n    }\n    // return vector\n    return new DenseMatrix({\n      data: x,\n      size: [rows, 1]\n    })\n  }\n\n  function _sparseForwardSubstitution (m, b) {\n    // validate matrix and vector, return copy of column vector b\n    b = solveValidation(m, b, true)\n    // column vector data\n    const bdata = b._data\n    // rows & columns\n    const rows = m._size[0]\n    const columns = m._size[1]\n    // matrix arrays\n    const values = m._values\n    const index = m._index\n    const ptr = m._ptr\n    // vars\n    let i, k\n    // result\n    const x = []\n    // forward solve m * x = b, loop columns\n    for (let j = 0; j < columns; j++) {\n      // b[j]\n      const bj = bdata[j][0] || 0\n      // forward substitution (outer product) avoids inner looping when bj === 0\n      if (!equalScalar(bj, 0)) {\n        // value @ [j, j]\n        let vjj = 0\n        // lower triangular matrix values & index (column j)\n        const jvalues = []\n        const jindex = []\n        // last index in column\n        let l = ptr[j + 1]\n        // values in column, find value @ [j, j]\n        for (k = ptr[j]; k < l; k++) {\n          // row\n          i = index[k]\n          // check row (rows are not sorted!)\n          if (i === j) {\n            // update vjj\n            vjj = values[k]\n          } else if (i > j) {\n            // store lower triangular\n            jvalues.push(values[k])\n            jindex.push(i)\n          }\n        }\n        // at this point we must have a value @ [j, j]\n        if (equalScalar(vjj, 0)) {\n          // system cannot be solved, there is no value @ [j, j]\n          throw new Error('Linear system cannot be solved since matrix is singular')\n        }\n        // calculate xj\n        const xj = divideScalar(bj, vjj)\n        // loop lower triangular\n        for (k = 0, l = jindex.length; k < l; k++) {\n          // row\n          i = jindex[k]\n          // update copy of b\n          bdata[i] = [subtract(bdata[i][0] || 0, multiplyScalar(xj, jvalues[k]))]\n        }\n        // update x\n        x[j] = [xj]\n      } else {\n        // update x\n        x[j] = [0]\n      }\n    }\n    // return vector\n    return new DenseMatrix({\n      data: x,\n      size: [rows, 1]\n    })\n  }\n})\n","import { clone } from '../../../utils/object'\nimport { factory } from '../../../utils/factory'\n\nconst name = 'lup'\nconst dependencies = [\n  'typed',\n  'matrix',\n  'abs',\n  'addScalar',\n  'divideScalar',\n  'multiplyScalar',\n  'subtract',\n  'larger',\n  'equalScalar',\n  'unaryMinus',\n  'DenseMatrix',\n  'SparseMatrix',\n  'Spa'\n]\n\nexport const createLup = /* #__PURE__ */ factory(name, dependencies, (\n  {\n    typed,\n    matrix,\n    abs,\n    addScalar,\n    divideScalar,\n    multiplyScalar,\n    subtract,\n    larger,\n    equalScalar,\n    unaryMinus,\n    DenseMatrix,\n    SparseMatrix,\n    Spa\n  }\n) => {\n  /**\n   * Calculate the Matrix LU decomposition with partial pivoting. Matrix `A` is decomposed in two matrices (`L`, `U`) and a\n   * row permutation vector `p` where `A[p,:] = L * U`\n   *\n   * Syntax:\n   *\n   *    math.lup(A)\n   *\n   * Example:\n   *\n   *    const m = [[2, 1], [1, 4]]\n   *    const r = math.lup(m)\n   *    // r = {\n   *    //   L: [[1, 0], [0.5, 1]],\n   *    //   U: [[2, 1], [0, 3.5]],\n   *    //   P: [0, 1]\n   *    // }\n   *\n   * See also:\n   *\n   *    slu, lsolve, lusolve, usolve\n   *\n   * @param {Matrix | Array} A    A two dimensional matrix or array for which to get the LUP decomposition.\n   *\n   * @return {{L: Array | Matrix, U: Array | Matrix, P: Array.<number>}} The lower triangular matrix, the upper triangular matrix and the permutation matrix.\n   */\n  return typed(name, {\n\n    'DenseMatrix': function (m) {\n      return _denseLUP(m)\n    },\n\n    'SparseMatrix': function (m) {\n      return _sparseLUP(m)\n    },\n\n    'Array': function (a) {\n      // create dense matrix from array\n      const m = matrix(a)\n      // lup, use matrix implementation\n      const r = _denseLUP(m)\n      // result\n      return {\n        L: r.L.valueOf(),\n        U: r.U.valueOf(),\n        p: r.p\n      }\n    }\n  })\n\n  function _denseLUP (m) {\n    // rows & columns\n    const rows = m._size[0]\n    const columns = m._size[1]\n    // minimum rows and columns\n    let n = Math.min(rows, columns)\n    // matrix array, clone original data\n    const data = clone(m._data)\n    // l matrix arrays\n    const ldata = []\n    const lsize = [rows, n]\n    // u matrix arrays\n    const udata = []\n    const usize = [n, columns]\n    // vars\n    let i, j, k\n    // permutation vector\n    const p = []\n    for (i = 0; i < rows; i++) { p[i] = i }\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // skip first column in upper triangular matrix\n      if (j > 0) {\n        // loop rows\n        for (i = 0; i < rows; i++) {\n          // min i,j\n          const min = Math.min(i, j)\n          // v[i, j]\n          let s = 0\n          // loop up to min\n          for (k = 0; k < min; k++) {\n            // s = l[i, k] - data[k, j]\n            s = addScalar(s, multiplyScalar(data[i][k], data[k][j]))\n          }\n          data[i][j] = subtract(data[i][j], s)\n        }\n      }\n      // row with larger value in cvector, row >= j\n      let pi = j\n      let pabsv = 0\n      let vjj = 0\n      // loop rows\n      for (i = j; i < rows; i++) {\n        // data @ i, j\n        const v = data[i][j]\n        // absolute value\n        const absv = abs(v)\n        // value is greater than pivote value\n        if (larger(absv, pabsv)) {\n          // store row\n          pi = i\n          // update max value\n          pabsv = absv\n          // value @ [j, j]\n          vjj = v\n        }\n      }\n      // swap rows (j <-> pi)\n      if (j !== pi) {\n        // swap values j <-> pi in p\n        p[j] = [p[pi], p[pi] = p[j]][0]\n        // swap j <-> pi in data\n        DenseMatrix._swapRows(j, pi, data)\n      }\n      // check column is in lower triangular matrix\n      if (j < rows) {\n        // loop rows (lower triangular matrix)\n        for (i = j + 1; i < rows; i++) {\n          // value @ i, j\n          const vij = data[i][j]\n          if (!equalScalar(vij, 0)) {\n            // update data\n            data[i][j] = divideScalar(data[i][j], vjj)\n          }\n        }\n      }\n    }\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // loop rows\n      for (i = 0; i < rows; i++) {\n        // initialize row in arrays\n        if (j === 0) {\n          // check row exists in upper triangular matrix\n          if (i < columns) {\n            // U\n            udata[i] = []\n          }\n          // L\n          ldata[i] = []\n        }\n        // check we are in the upper triangular matrix\n        if (i < j) {\n          // check row exists in upper triangular matrix\n          if (i < columns) {\n            // U\n            udata[i][j] = data[i][j]\n          }\n          // check column exists in lower triangular matrix\n          if (j < rows) {\n            // L\n            ldata[i][j] = 0\n          }\n          continue\n        }\n        // diagonal value\n        if (i === j) {\n          // check row exists in upper triangular matrix\n          if (i < columns) {\n            // U\n            udata[i][j] = data[i][j]\n          }\n          // check column exists in lower triangular matrix\n          if (j < rows) {\n            // L\n            ldata[i][j] = 1\n          }\n          continue\n        }\n        // check row exists in upper triangular matrix\n        if (i < columns) {\n          // U\n          udata[i][j] = 0\n        }\n        // check column exists in lower triangular matrix\n        if (j < rows) {\n          // L\n          ldata[i][j] = data[i][j]\n        }\n      }\n    }\n    // l matrix\n    const l = new DenseMatrix({\n      data: ldata,\n      size: lsize\n    })\n    // u matrix\n    const u = new DenseMatrix({\n      data: udata,\n      size: usize\n    })\n    // p vector\n    const pv = []\n    for (i = 0, n = p.length; i < n; i++) { pv[p[i]] = i }\n    // return matrices\n    return {\n      L: l,\n      U: u,\n      p: pv,\n      toString: function () {\n        return 'L: ' + this.L.toString() + '\\nU: ' + this.U.toString() + '\\nP: ' + this.p\n      }\n    }\n  }\n\n  function _sparseLUP (m) {\n    // rows & columns\n    const rows = m._size[0]\n    const columns = m._size[1]\n    // minimum rows and columns\n    const n = Math.min(rows, columns)\n    // matrix arrays (will not be modified, thanks to permutation vector)\n    const values = m._values\n    const index = m._index\n    const ptr = m._ptr\n    // l matrix arrays\n    const lvalues = []\n    const lindex = []\n    const lptr = []\n    const lsize = [rows, n]\n    // u matrix arrays\n    const uvalues = []\n    const uindex = []\n    const uptr = []\n    const usize = [n, columns]\n    // vars\n    let i, j, k\n    // permutation vectors, (current index -> original index) and (original index -> current index)\n    const pvCo = []\n    const pvOc = []\n    for (i = 0; i < rows; i++) {\n      pvCo[i] = i\n      pvOc[i] = i\n    }\n    // swap indices in permutation vectors (condition x < y)!\n    const swapIndeces = function (x, y) {\n      // find pv indeces getting data from x and y\n      const kx = pvOc[x]\n      const ky = pvOc[y]\n      // update permutation vector current -> original\n      pvCo[kx] = y\n      pvCo[ky] = x\n      // update permutation vector original -> current\n      pvOc[x] = ky\n      pvOc[y] = kx\n    }\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // sparse accumulator\n      const spa = new Spa()\n      // check lower triangular matrix has a value @ column j\n      if (j < rows) {\n        // update ptr\n        lptr.push(lvalues.length)\n        // first value in j column for lower triangular matrix\n        lvalues.push(1)\n        lindex.push(j)\n      }\n      // update ptr\n      uptr.push(uvalues.length)\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      const k0 = ptr[j]\n      const k1 = ptr[j + 1]\n      // copy column j into sparse accumulator\n      for (k = k0; k < k1; k++) {\n        // row\n        i = index[k]\n        // copy column values into sparse accumulator (use permutation vector)\n        spa.set(pvCo[i], values[k])\n      }\n      // skip first column in upper triangular matrix\n      if (j > 0) {\n        // loop rows in column j (above diagonal)\n        spa.forEach(0, j - 1, function (k, vkj) {\n          // loop rows in column k (L)\n          SparseMatrix._forEachRow(k, lvalues, lindex, lptr, function (i, vik) {\n            // check row is below k\n            if (i > k) {\n              // update spa value\n              spa.accumulate(i, unaryMinus(multiplyScalar(vik, vkj)))\n            }\n          })\n        })\n      }\n      // row with larger value in spa, row >= j\n      let pi = j\n      let vjj = spa.get(j)\n      let pabsv = abs(vjj)\n      // loop values in spa (order by row, below diagonal)\n      spa.forEach(j + 1, rows - 1, function (x, v) {\n        // absolute value\n        const absv = abs(v)\n        // value is greater than pivote value\n        if (larger(absv, pabsv)) {\n          // store row\n          pi = x\n          // update max value\n          pabsv = absv\n          // value @ [j, j]\n          vjj = v\n        }\n      })\n      // swap rows (j <-> pi)\n      if (j !== pi) {\n        // swap values j <-> pi in L\n        SparseMatrix._swapRows(j, pi, lsize[1], lvalues, lindex, lptr)\n        // swap values j <-> pi in U\n        SparseMatrix._swapRows(j, pi, usize[1], uvalues, uindex, uptr)\n        // swap values in spa\n        spa.swap(j, pi)\n        // update permutation vector (swap values @ j, pi)\n        swapIndeces(j, pi)\n      }\n      // loop values in spa (order by row)\n      spa.forEach(0, rows - 1, function (x, v) {\n        // check we are above diagonal\n        if (x <= j) {\n          // update upper triangular matrix\n          uvalues.push(v)\n          uindex.push(x)\n        } else {\n          // update value\n          v = divideScalar(v, vjj)\n          // check value is non zero\n          if (!equalScalar(v, 0)) {\n            // update lower triangular matrix\n            lvalues.push(v)\n            lindex.push(x)\n          }\n        }\n      })\n    }\n    // update ptrs\n    uptr.push(uvalues.length)\n    lptr.push(lvalues.length)\n\n    // return matrices\n    return {\n      L: new SparseMatrix({\n        values: lvalues,\n        index: lindex,\n        ptr: lptr,\n        size: lsize\n      }),\n      U: new SparseMatrix({\n        values: uvalues,\n        index: uindex,\n        ptr: uptr,\n        size: usize\n      }),\n      p: pvCo,\n      toString: function () {\n        return 'L: ' + this.L.toString() + '\\nU: ' + this.U.toString() + '\\nP: ' + this.p\n      }\n    }\n  }\n})\n","import { csReach } from './csReach'\nimport { factory } from '../../../utils/factory'\n\nconst name = 'csSpsolve'\nconst dependencies = [\n  'divideScalar',\n  'multiply',\n  'subtract'\n]\n\nexport const createCsSpsolve = /* #__PURE__ */ factory(name, dependencies, ({ divideScalar, multiply, subtract }) => {\n  /**\n   * The function csSpsolve() computes the solution to G * x = bk, where bk is the\n   * kth column of B. When lo is true, the function assumes G = L is lower triangular with the\n   * diagonal entry as the first entry in each column. When lo is true, the function assumes G = U\n   * is upper triangular with the diagonal entry as the last entry in each column.\n   *\n   * @param {Matrix}  g               The G matrix\n   * @param {Matrix}  b               The B matrix\n   * @param {Number}  k               The kth column in B\n   * @param {Array}   xi              The nonzero pattern xi[top] .. xi[n - 1], an array of size = 2 * n\n   *                                  The first n entries is the nonzero pattern, the last n entries is the stack\n   * @param {Array}   x               The soluton to the linear system G * x = b\n   * @param {Array}   pinv            The inverse row permutation vector, must be null for L * x = b\n   * @param {boolean} lo              The lower (true) upper triangular (false) flag\n   *\n   * @return {Number}                 The index for the nonzero pattern\n   *\n   * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n   */\n  return function csSpsolve (g, b, k, xi, x, pinv, lo) {\n    // g arrays\n    const gvalues = g._values\n    const gindex = g._index\n    const gptr = g._ptr\n    const gsize = g._size\n    // columns\n    const n = gsize[1]\n    // b arrays\n    const bvalues = b._values\n    const bindex = b._index\n    const bptr = b._ptr\n    // vars\n    let p, p0, p1, q\n    // xi[top..n-1] = csReach(B(:,k))\n    const top = csReach(g, b, k, xi, pinv)\n    // clear x\n    for (p = top; p < n; p++) { x[xi[p]] = 0 }\n    // scatter b\n    for (p0 = bptr[k], p1 = bptr[k + 1], p = p0; p < p1; p++) { x[bindex[p]] = bvalues[p] }\n    // loop columns\n    for (let px = top; px < n; px++) {\n      // x array index for px\n      const j = xi[px]\n      // apply permutation vector (U x = b), j maps to column J of G\n      const J = pinv ? pinv[j] : j\n      // check column J is empty\n      if (J < 0) { continue }\n      // column value indeces in G, p0 <= p < p1\n      p0 = gptr[J]\n      p1 = gptr[J + 1]\n      // x(j) /= G(j,j)\n      x[j] = divideScalar(x[j], gvalues[lo ? p0 : (p1 - 1)])\n      // first entry L(j,j)\n      p = lo ? (p0 + 1) : p0\n      q = lo ? (p1) : (p1 - 1)\n      // loop\n      for (; p < q; p++) {\n        // row\n        const i = gindex[p]\n        // x(i) -= G(i,j) * x(j)\n        x[i] = subtract(x[i], multiply(gvalues[p], x[j]))\n      }\n    }\n    // return top of stack\n    return top\n  }\n})\n","import { isMatrix } from '../../utils/is'\nimport { clone } from '../../utils/object'\nimport { format } from '../../utils/string'\nimport { factory } from '../../utils/factory'\n\nconst name = 'det'\nconst dependencies = ['typed', 'matrix', 'subtract', 'multiply', 'unaryMinus', 'lup']\n\nexport const createDet = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix, subtract, multiply, unaryMinus, lup }) => {\n  /**\n   * Calculate the determinant of a matrix.\n   *\n   * Syntax:\n   *\n   *    math.det(x)\n   *\n   * Examples:\n   *\n   *    math.det([[1, 2], [3, 4]]) // returns -2\n   *\n   *    const A = [\n   *      [-2, 2, 3],\n   *      [-1, 1, 3],\n   *      [2, 0, -1]\n   *    ]\n   *    math.det(A) // returns 6\n   *\n   * See also:\n   *\n   *    inv\n   *\n   * @param {Array | Matrix} x  A matrix\n   * @return {number} The determinant of `x`\n   */\n  return typed(name, {\n    'any': function (x) {\n      return clone(x)\n    },\n\n    'Array | Matrix': function det (x) {\n      let size\n      if (isMatrix(x)) {\n        size = x.size()\n      } else if (Array.isArray(x)) {\n        x = matrix(x)\n        size = x.size()\n      } else {\n        // a scalar\n        size = []\n      }\n\n      switch (size.length) {\n        case 0:\n          // scalar\n          return clone(x)\n\n        case 1:\n          // vector\n          if (size[0] === 1) {\n            return clone(x.valueOf()[0])\n          } else {\n            throw new RangeError('Matrix must be square ' +\n            '(size: ' + format(size) + ')')\n          }\n\n        case 2:\n          // two dimensional array\n          const rows = size[0]\n          const cols = size[1]\n          if (rows === cols) {\n            return _det(x.clone().valueOf(), rows, cols)\n          } else {\n            throw new RangeError('Matrix must be square ' +\n            '(size: ' + format(size) + ')')\n          }\n\n        default:\n          // multi dimensional array\n          throw new RangeError('Matrix must be two dimensional ' +\n          '(size: ' + format(size) + ')')\n      }\n    }\n  })\n\n  /**\n   * Calculate the determinant of a matrix\n   * @param {Array[]} matrix  A square, two dimensional matrix\n   * @param {number} rows     Number of rows of the matrix (zero-based)\n   * @param {number} cols     Number of columns of the matrix (zero-based)\n   * @returns {number} det\n   * @private\n   */\n  function _det (matrix, rows, cols) {\n    if (rows === 1) {\n      // this is a 1 x 1 matrix\n      return clone(matrix[0][0])\n    } else if (rows === 2) {\n      // this is a 2 x 2 matrix\n      // the determinant of [a11,a12;a21,a22] is det = a11*a22-a21*a12\n      return subtract(\n        multiply(matrix[0][0], matrix[1][1]),\n        multiply(matrix[1][0], matrix[0][1])\n      )\n    } else {\n      // Compute the LU decomposition\n      const decomp = lup(matrix)\n\n      // The determinant is the product of the diagonal entries of U (and those of L, but they are all 1)\n      let det = decomp.U[0][0]\n      for (let i = 1; i < rows; i++) {\n        det = multiply(det, decomp.U[i][i])\n      }\n\n      // The determinant will be multiplied by 1 or -1 depending on the parity of the permutation matrix.\n      // This can be determined by counting the cycles. This is roughly a linear time algorithm.\n      let evenCycles = 0\n      let i = 0\n      const visited = []\n      while (true) {\n        while (visited[i]) {\n          i++\n        }\n        if (i >= rows) break\n        let j = i\n        let cycleLen = 0\n        while (!visited[decomp.p[j]]) {\n          visited[decomp.p[j]] = true\n          j = decomp.p[j]\n          cycleLen++\n        }\n        if (cycleLen % 2 === 0) {\n          evenCycles++\n        }\n      }\n\n      return evenCycles % 2 === 0 ? det : unaryMinus(det)\n    }\n  }\n})\n","import { isMatrix } from '../../utils/is'\nimport { arraySize } from '../../utils/array'\nimport { factory } from '../../utils/factory'\nimport { format } from '../../utils/string'\n\nconst name = 'inv'\nconst dependencies = [\n  'typed',\n  'matrix',\n  'divideScalar',\n  'addScalar',\n  'multiply',\n  'unaryMinus',\n  'det',\n  'identity',\n  'abs'\n]\n\nexport const createInv = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix, divideScalar, addScalar, multiply, unaryMinus, det, identity, abs }) => {\n  /**\n   * Calculate the inverse of a square matrix.\n   *\n   * Syntax:\n   *\n   *     math.inv(x)\n   *\n   * Examples:\n   *\n   *     math.inv([[1, 2], [3, 4]])  // returns [[-2, 1], [1.5, -0.5]]\n   *     math.inv(4)                 // returns 0.25\n   *     1 / 4                       // returns 0.25\n   *\n   * See also:\n   *\n   *     det, transpose\n   *\n   * @param {number | Complex | Array | Matrix} x     Matrix to be inversed\n   * @return {number | Complex | Array | Matrix} The inverse of `x`.\n   */\n  return typed(name, {\n    'Array | Matrix': function (x) {\n      const size = isMatrix(x) ? x.size() : arraySize(x)\n      switch (size.length) {\n        case 1:\n          // vector\n          if (size[0] === 1) {\n            if (isMatrix(x)) {\n              return matrix([\n                divideScalar(1, x.valueOf()[0])\n              ])\n            } else {\n              return [\n                divideScalar(1, x[0])\n              ]\n            }\n          } else {\n            throw new RangeError('Matrix must be square ' +\n            '(size: ' + format(size) + ')')\n          }\n\n        case 2:\n          // two dimensional array\n          const rows = size[0]\n          const cols = size[1]\n          if (rows === cols) {\n            if (isMatrix(x)) {\n              return matrix(\n                _inv(x.valueOf(), rows, cols),\n                x.storage()\n              )\n            } else {\n              // return an Array\n              return _inv(x, rows, cols)\n            }\n          } else {\n            throw new RangeError('Matrix must be square ' +\n            '(size: ' + format(size) + ')')\n          }\n\n        default:\n          // multi dimensional array\n          throw new RangeError('Matrix must be two dimensional ' +\n          '(size: ' + format(size) + ')')\n      }\n    },\n\n    'any': function (x) {\n      // scalar\n      return divideScalar(1, x) // FIXME: create a BigNumber one when configured for bignumbers\n    }\n  })\n\n  /**\n   * Calculate the inverse of a square matrix\n   * @param {Array[]} mat     A square matrix\n   * @param {number} rows     Number of rows\n   * @param {number} cols     Number of columns, must equal rows\n   * @return {Array[]} inv    Inverse matrix\n   * @private\n   */\n  function _inv (mat, rows, cols) {\n    let r, s, f, value, temp\n\n    if (rows === 1) {\n      // this is a 1 x 1 matrix\n      value = mat[0][0]\n      if (value === 0) {\n        throw Error('Cannot calculate inverse, determinant is zero')\n      }\n      return [[\n        divideScalar(1, value)\n      ]]\n    } else if (rows === 2) {\n      // this is a 2 x 2 matrix\n      const d = det(mat)\n      if (d === 0) {\n        throw Error('Cannot calculate inverse, determinant is zero')\n      }\n      return [\n        [\n          divideScalar(mat[1][1], d),\n          divideScalar(unaryMinus(mat[0][1]), d)\n        ],\n        [\n          divideScalar(unaryMinus(mat[1][0]), d),\n          divideScalar(mat[0][0], d)\n        ]\n      ]\n    } else {\n      // this is a matrix of 3 x 3 or larger\n      // calculate inverse using gauss-jordan elimination\n      //      https://en.wikipedia.org/wiki/Gaussian_elimination\n      //      http://mathworld.wolfram.com/MatrixInverse.html\n      //      http://math.uww.edu/~mcfarlat/inverse.htm\n\n      // make a copy of the matrix (only the arrays, not of the elements)\n      const A = mat.concat()\n      for (r = 0; r < rows; r++) {\n        A[r] = A[r].concat()\n      }\n\n      // create an identity matrix which in the end will contain the\n      // matrix inverse\n      const B = identity(rows).valueOf()\n\n      // loop over all columns, and perform row reductions\n      for (let c = 0; c < cols; c++) {\n        // Pivoting: Swap row c with row r, where row r contains the largest element A[r][c]\n        let ABig = abs(A[c][c])\n        let rBig = c\n        r = c + 1\n        while (r < rows) {\n          if (abs(A[r][c]) > ABig) {\n            ABig = abs(A[r][c])\n            rBig = r\n          }\n          r++\n        }\n        if (ABig === 0) {\n          throw Error('Cannot calculate inverse, determinant is zero')\n        }\n        r = rBig\n        if (r !== c) {\n          temp = A[c]; A[c] = A[r]; A[r] = temp\n          temp = B[c]; B[c] = B[r]; B[r] = temp\n        }\n\n        // eliminate non-zero values on the other rows at column c\n        const Ac = A[c]\n        const Bc = B[c]\n        for (r = 0; r < rows; r++) {\n          const Ar = A[r]\n          const Br = B[r]\n          if (r !== c) {\n            // eliminate value at column c and row r\n            if (Ar[c] !== 0) {\n              f = divideScalar(unaryMinus(Ar[c]), Ac[c])\n\n              // add (f * row c) to row r to eliminate the value\n              // at column c\n              for (s = c; s < cols; s++) {\n                Ar[s] = addScalar(Ar[s], multiply(f, Ac[s]))\n              }\n              for (s = 0; s < cols; s++) {\n                Br[s] = addScalar(Br[s], multiply(f, Bc[s]))\n              }\n            }\n          } else {\n            // normalize value at Acc to 1,\n            // divide each value on row r with the value at Acc\n            f = Ac[c]\n            for (s = c; s < cols; s++) {\n              Ar[s] = divideScalar(Ar[s], f)\n            }\n            for (s = 0; s < cols; s++) {\n              Br[s] = divideScalar(Br[s], f)\n            }\n          }\n        }\n      }\n      return B\n    }\n  }\n})\n","import { isArray, isMatrix } from '../../../utils/is'\nimport { factory } from '../../../utils/factory'\nimport { createSolveValidation } from './utils/solveValidation'\nimport { csIpvec } from '../sparse/csIpvec'\n\nconst name = 'lusolve'\nconst dependencies = [\n  'typed',\n  'matrix',\n  'lup',\n  'slu',\n  'usolve',\n  'lsolve',\n  'DenseMatrix'\n]\n\nexport const createLusolve = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix, lup, slu, usolve, lsolve, DenseMatrix }) => {\n  const solveValidation = createSolveValidation({ DenseMatrix })\n\n  /**\n   * Solves the linear system `A * x = b` where `A` is an [n x n] matrix and `b` is a [n] column vector.\n   *\n   * Syntax:\n   *\n   *    math.lusolve(A, b)     // returns column vector with the solution to the linear system A * x = b\n   *    math.lusolve(lup, b)   // returns column vector with the solution to the linear system A * x = b, lup = math.lup(A)\n   *\n   * Examples:\n   *\n   *    const m = [[1, 0, 0, 0], [0, 2, 0, 0], [0, 0, 3, 0], [0, 0, 0, 4]]\n   *\n   *    const x = math.lusolve(m, [-1, -1, -1, -1])        // x = [[-1], [-0.5], [-1/3], [-0.25]]\n   *\n   *    const f = math.lup(m)\n   *    const x1 = math.lusolve(f, [-1, -1, -1, -1])       // x1 = [[-1], [-0.5], [-1/3], [-0.25]]\n   *    const x2 = math.lusolve(f, [1, 2, 1, -1])          // x2 = [[1], [1], [1/3], [-0.25]]\n   *\n   *    const a = [[-2, 3], [2, 1]]\n   *    const b = [11, 9]\n   *    const x = math.lusolve(a, b)  // [[2], [5]]\n   *\n   * See also:\n   *\n   *    lup, slu, lsolve, usolve\n   *\n   * @param {Matrix | Array | Object} A      Invertible Matrix or the Matrix LU decomposition\n   * @param {Matrix | Array} b               Column Vector\n   * @param {number} [order]                 The Symbolic Ordering and Analysis order, see slu for details. Matrix must be a SparseMatrix\n   * @param {Number} [threshold]             Partial pivoting threshold (1 for partial pivoting), see slu for details. Matrix must be a SparseMatrix.\n   *\n   * @return {DenseMatrix | Array}           Column vector with the solution to the linear system A * x = b\n   */\n  return typed(name, {\n\n    'Array, Array | Matrix': function (a, b) {\n      // convert a to matrix\n      a = matrix(a)\n      // matrix lup decomposition\n      const d = lup(a)\n      // solve\n      const x = _lusolve(d.L, d.U, d.p, null, b)\n      // convert result to array\n      return x.valueOf()\n    },\n\n    'DenseMatrix, Array | Matrix': function (a, b) {\n      // matrix lup decomposition\n      const d = lup(a)\n      // solve\n      return _lusolve(d.L, d.U, d.p, null, b)\n    },\n\n    'SparseMatrix, Array | Matrix': function (a, b) {\n      // matrix lup decomposition\n      const d = lup(a)\n      // solve\n      return _lusolve(d.L, d.U, d.p, null, b)\n    },\n\n    'SparseMatrix, Array | Matrix, number, number': function (a, b, order, threshold) {\n      // matrix lu decomposition\n      const d = slu(a, order, threshold)\n      // solve\n      return _lusolve(d.L, d.U, d.p, d.q, b)\n    },\n\n    'Object, Array | Matrix': function (d, b) {\n      // solve\n      return _lusolve(d.L, d.U, d.p, d.q, b)\n    }\n  })\n\n  function _toMatrix (a) {\n    // check it is a matrix\n    if (isMatrix(a)) { return a }\n    // check array\n    if (isArray(a)) { return matrix(a) }\n    // throw\n    throw new TypeError('Invalid Matrix LU decomposition')\n  }\n\n  function _lusolve (l, u, p, q, b) {\n    // verify L, U, P\n    l = _toMatrix(l)\n    u = _toMatrix(u)\n    // validate matrix and vector\n    b = solveValidation(l, b, false)\n    // apply row permutations if needed (b is a DenseMatrix)\n    if (p) { b._data = csIpvec(p, b._data) }\n    // use forward substitution to resolve L * y = b\n    const y = lsolve(l, b)\n    // use backward substitution to resolve U * x = y\n    const x = usolve(u, y)\n    // apply column permutations if needed (x is a DenseMatrix)\n    if (q) { x._data = csIpvec(q, x._data) }\n    // return solution\n    return x\n  }\n})\n","import { factory } from '../../utils/factory'\nimport { extend } from '../../utils/object'\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11'\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14'\n\nconst name = 'divide'\nconst dependencies = [\n  'typed',\n  'matrix',\n  'multiply',\n  'equalScalar',\n  'divideScalar',\n  'inv'\n]\n\nexport const createDivide = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix, multiply, equalScalar, divideScalar, inv }) => {\n  const algorithm11 = createAlgorithm11({ typed, equalScalar })\n  const algorithm14 = createAlgorithm14({ typed })\n\n  /**\n   * Divide two values, `x / y`.\n   * To divide matrices, `x` is multiplied with the inverse of `y`: `x * inv(y)`.\n   *\n   * Syntax:\n   *\n   *    math.divide(x, y)\n   *\n   * Examples:\n   *\n   *    math.divide(2, 3)            // returns number 0.6666666666666666\n   *\n   *    const a = math.complex(5, 14)\n   *    const b = math.complex(4, 1)\n   *    math.divide(a, b)            // returns Complex 2 + 3i\n   *\n   *    const c = [[7, -6], [13, -4]]\n   *    const d = [[1, 2], [4, 3]]\n   *    math.divide(c, d)            // returns Array [[-9, 4], [-11, 6]]\n   *\n   *    const e = math.unit('18 km')\n   *    math.divide(e, 4.5)          // returns Unit 4 km\n   *\n   * See also:\n   *\n   *    multiply\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x   Numerator\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} y          Denominator\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}                      Quotient, `x / y`\n   */\n  return typed('divide', extend({\n    // we extend the signatures of divideScalar with signatures dealing with matrices\n\n    'Array | Matrix, Array | Matrix': function (x, y) {\n      // TODO: implement matrix right division using pseudo inverse\n      // https://www.mathworks.nl/help/matlab/ref/mrdivide.html\n      // https://www.gnu.org/software/octave/doc/interpreter/Arithmetic-Ops.html\n      // https://stackoverflow.com/questions/12263932/how-does-gnu-octave-matrix-division-work-getting-unexpected-behaviour\n      return multiply(x, inv(y))\n    },\n\n    'DenseMatrix, any': function (x, y) {\n      return algorithm14(x, y, divideScalar, false)\n    },\n\n    'SparseMatrix, any': function (x, y) {\n      return algorithm11(x, y, divideScalar, false)\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, divideScalar, false).valueOf()\n    },\n\n    'any, Array | Matrix': function (x, y) {\n      return multiply(x, inv(y))\n    }\n  }, divideScalar.signatures))\n})\n","import { containsCollections } from '../../utils/collection'\nimport { flatten } from '../../utils/array'\nimport { factory } from '../../utils/factory'\nimport { improveErrorMessage } from './utils/improveErrorMessage'\n\nconst name = 'median'\nconst dependencies = ['typed', 'add', 'divide', 'compare', 'partitionSelect']\n\nexport const createMedian = /* #__PURE__ */ factory(name, dependencies, ({ typed, add, divide, compare, partitionSelect }) => {\n  /**\n   * Compute the median of a matrix or a list with values. The values are\n   * sorted and the middle value is returned. In case of an even number of\n   * values, the average of the two middle values is returned.\n   * Supported types of values are: Number, BigNumber, Unit\n   *\n   * In case of a (multi dimensional) array or matrix, the median of all\n   * elements will be calculated.\n   *\n   * Syntax:\n   *\n   *     math.median(a, b, c, ...)\n   *     math.median(A)\n   *\n   * Examples:\n   *\n   *     math.median(5, 2, 7)        // returns 5\n   *     math.median([3, -1, 5, 7])  // returns 4\n   *\n   * See also:\n   *\n   *     mean, min, max, sum, prod, std, variance, quantileSeq\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The median\n   */\n  const median = typed(name, {\n    // median([a, b, c, d, ...])\n    'Array | Matrix': _median,\n\n    // median([a, b, c, d, ...], dim)\n    'Array | Matrix, number | BigNumber': function (array, dim) {\n      // TODO: implement median(A, dim)\n      throw new Error('median(A, dim) is not yet supported')\n      // return reduce(arguments[0], arguments[1], ...)\n    },\n\n    // median(a, b, c, d, ...)\n    '...': function (args) {\n      if (containsCollections(args)) {\n        throw new TypeError('Scalar values expected in function median')\n      }\n\n      return _median(args)\n    }\n  })\n\n  /**\n   * Recursively calculate the median of an n-dimensional array\n   * @param {Array} array\n   * @return {Number} median\n   * @private\n   */\n  function _median (array) {\n    try {\n      array = flatten(array.valueOf())\n\n      const num = array.length\n      if (num === 0) {\n        throw new Error('Cannot calculate median of an empty array')\n      }\n\n      if (num % 2 === 0) {\n        // even: return the average of the two middle values\n        const mid = num / 2 - 1\n        const right = partitionSelect(array, mid + 1)\n\n        // array now partitioned at mid + 1, take max of left part\n        let left = array[mid]\n        for (let i = 0; i < mid; ++i) {\n          if (compare(array[i], left) > 0) {\n            left = array[i]\n          }\n        }\n\n        return middle2(left, right)\n      } else {\n        // odd: return the middle value\n        const m = partitionSelect(array, (num - 1) / 2)\n\n        return middle(m)\n      }\n    } catch (err) {\n      throw improveErrorMessage(err, 'median')\n    }\n  }\n\n  // helper function to type check the middle value of the array\n  const middle = typed({\n    'number | BigNumber | Complex | Unit': function (value) {\n      return value\n    }\n  })\n\n  // helper function to type check the two middle value of the array\n  const middle2 = typed({\n    'number | BigNumber | Complex | Unit, number | BigNumber | Complex | Unit': function (left, right) {\n      return divide(add(left, right), 2)\n    }\n  })\n\n  return median\n})\n","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { config } from './configReadonly'\nimport {\n  createResultSet,\n  createComplexClass,\n  createRangeClass,\n  createEye,\n  createFalse,\n  createNull,\n  createTrue,\n  createBigNumberClass,\n  createMatrixClass,\n  createE,\n  createI,\n  createLN10,\n  createLOG10E,\n  createNaN,\n  createPi,\n  createSQRT1_2, // eslint-disable-line camelcase\n  createTau,\n  createEfimovFactor,\n  createFineStructure,\n  createSackurTetrode,\n  createWeakMixingAngle,\n  createFractionClass,\n  createLN2,\n  createPhi,\n  createSQRT2,\n  createDenseMatrixClass,\n  createInfinity,\n  createTyped,\n  createIsInteger,\n  createIsNumeric,\n  createIsPositive,\n  createIsNaN,\n  createEqualScalar,\n  createNumber,\n  createBoolean,\n  createComplex,\n  createSplitUnit,\n  createUnaryPlus,\n  createApply,\n  createCube,\n  createExpm1,\n  createLog10,\n  createMultiplyScalar,\n  createSign,\n  createSquare,\n  createBitNot,\n  createArg,\n  createIm,\n  createNot,\n  createFilter,\n  createForEach,\n  createMap,\n  createErf,\n  createFormat,\n  createIsPrime,\n  createAcos,\n  createAcot,\n  createAcsc,\n  createAsec,\n  createAsin,\n  createAtan,\n  createAtanh,\n  createCosh,\n  createCoth,\n  createCsch,\n  createSech,\n  createSinh,\n  createTanh,\n  createCombinations,\n  createPickRandom,\n  createRandomInt,\n  createLOG2E,\n  createClone,\n  createHasNumericValue,\n  createTypeOf,\n  createString,\n  createFraction,\n  createUnaryMinus,\n  createAddScalar,\n  createExp,\n  createLog2,\n  createSqrt,\n  createConj,\n  createGetMatrixDataType,\n  createMode,\n  createPrint,\n  createAcosh,\n  createAcsch,\n  createAsinh,\n  createCos,\n  createCsc,\n  createSin,\n  createRandom,\n  createVersion,\n  createIsNegative,\n  createSparseMatrixClass,\n  createMatrix,\n  createCbrt,\n  createGcd,\n  createMod,\n  createNthRoot,\n  createXgcd,\n  createBitAnd,\n  createBitXor,\n  createOr,\n  createConcat,\n  createDiag,\n  createIdentity,\n  createOnes,\n  createReshape,\n  createSize,\n  createSubset,\n  createZeros,\n  createTo,\n  createRound,\n  createLeftShift,\n  createRightLogShift,\n  createCompare,\n  createCompareText,\n  createSmaller,\n  createLarger,\n  createUnequal,\n  createMax,\n  createImmutableDenseMatrixClass,\n  createFibonacciHeapClass,\n  createSparse,\n  createAcoth,\n  createAtan2,\n  createSec,\n  createAdd,\n  createTrace,\n  createComposition,\n  createIsZero,\n  createAbs,\n  createFloor,\n  createMultiply,\n  createDotMultiply,\n  createRe,\n  createFlatten,\n  createResize,\n  createSqueeze,\n  createProd,\n  createPow,\n  createDotPow,\n  createRightArithShift,\n  createCompareNatural,\n  createEqualText,\n  createLargerEq,\n  createPartitionSelect,\n  createMin,\n  createSpaClass,\n  createAsech,\n  createTan,\n  createSetSize,\n  createNorm,\n  createQuantileSeq,\n  createGamma,\n  createBignumber,\n  createLcm,\n  createBitOr,\n  createKron,\n  createTranspose,\n  createNumeric,\n  createAnd,\n  createSmallerEq,\n  createSort,\n  createCot,\n  createDot,\n  createSum,\n  createFactorial,\n  createPermutations,\n  createCeil,\n  createSubtract,\n  createCross,\n  createCtranspose,\n  createEqual,\n  createIndexClass,\n  createSetCartesian,\n  createSetDistinct,\n  createSetIsSubset,\n  createSetPowerset,\n  createIndex,\n  createFix,\n  createRange,\n  createDivideScalar,\n  createNthRoots,\n  createLsolve,\n  createDeepEqual,\n  createSetDifference,\n  createSetMultiplicity,\n  createHypot,\n  createLup,\n  createSlu,\n  createDet,\n  createDistance,\n  createStirlingS2,\n  createCatalan,\n  createXor,\n  createRow,\n  createDotDivide,\n  createUnitClass,\n  createCreateUnit,\n  createSetSymDifference,\n  createQr,\n  createInv,\n  createSqrtm,\n  createIntersect,\n  createBellNumbers,\n  createAtomicMass,\n  createBohrMagneton,\n  createBoltzmann,\n  createConductanceQuantum,\n  createDeuteronMass,\n  createElectronMass,\n  createFaraday,\n  createFirstRadiation,\n  createGravitationConstant,\n  createHartreeEnergy,\n  createKlitzing,\n  createMagneticConstant,\n  createMolarMass,\n  createMolarPlanckConstant,\n  createNeutronMass,\n  createPlanckCharge,\n  createPlanckLength,\n  createPlanckTemperature,\n  createProtonMass,\n  createReducedPlanckConstant,\n  createSecondRadiation,\n  createStefanBoltzmann,\n  createVacuumImpedance,\n  createColumn,\n  createUsolve,\n  createSetIntersect,\n  createLusolve,\n  createExpm,\n  createAvogadro,\n  createClassicalElectronRadius,\n  createElectricConstant,\n  createFermiCoupling,\n  createGravity,\n  createLoschmidt,\n  createMolarMassC12,\n  createNuclearMagneton,\n  createPlanckMass,\n  createQuantumOfCirculation,\n  createSpeedOfLight,\n  createWienDisplacement,\n  createLog,\n  createUnitFunction,\n  createDivide,\n  createMedian,\n  createVariance,\n  createStd,\n  createMultinomial,\n  createBohrRadius,\n  createElementaryCharge,\n  createInverseConductanceQuantum,\n  createMolarVolume,\n  createPlanckTime,\n  createThomsonCrossSection,\n  createLog1p,\n  createMean,\n  createGasConstant,\n  createPlanckConstant,\n  createSetUnion,\n  createKldivergence,\n  createCoulomb,\n  createRydberg,\n  createMad,\n  createMagneticFluxQuantum\n} from '../factoriesAny'\n\nexport const ResultSet = /* #__PURE__ */ createResultSet({})\nexport const Complex = /* #__PURE__ */ createComplexClass({})\nexport const Range = /* #__PURE__ */ createRangeClass({})\nexport const eye = /* #__PURE__ */ createEye({})\nexport const _false = /* #__PURE__ */ createFalse({})\nexport const _null = /* #__PURE__ */ createNull({})\nexport const _true = /* #__PURE__ */ createTrue({})\nexport const BigNumber = /* #__PURE__ */ createBigNumberClass({ config })\nexport const Matrix = /* #__PURE__ */ createMatrixClass({})\nexport const e = /* #__PURE__ */ createE({ BigNumber, config })\nexport const i = /* #__PURE__ */ createI({ Complex })\nexport const LN10 = /* #__PURE__ */ createLN10({ BigNumber, config })\nexport const LOG10E = /* #__PURE__ */ createLOG10E({ BigNumber, config })\nexport const _NaN = /* #__PURE__ */ createNaN({ BigNumber, config })\nexport const pi = /* #__PURE__ */ createPi({ BigNumber, config })\nexport const SQRT1_2 = /* #__PURE__ */ createSQRT1_2({ BigNumber, config })\nexport const tau = /* #__PURE__ */ createTau({ BigNumber, config })\nexport const efimovFactor = /* #__PURE__ */ createEfimovFactor({ BigNumber, config })\nexport const fineStructure = /* #__PURE__ */ createFineStructure({ BigNumber, config })\nexport const sackurTetrode = /* #__PURE__ */ createSackurTetrode({ BigNumber, config })\nexport const weakMixingAngle = /* #__PURE__ */ createWeakMixingAngle({ BigNumber, config })\nexport const Fraction = /* #__PURE__ */ createFractionClass({})\nexport const LN2 = /* #__PURE__ */ createLN2({ BigNumber, config })\nexport const phi = /* #__PURE__ */ createPhi({ BigNumber, config })\nexport const SQRT2 = /* #__PURE__ */ createSQRT2({ BigNumber, config })\nexport const DenseMatrix = /* #__PURE__ */ createDenseMatrixClass({ Matrix })\nexport const _Infinity = /* #__PURE__ */ createInfinity({ BigNumber, config })\nexport const typed = /* #__PURE__ */ createTyped({ BigNumber, Complex, DenseMatrix, Fraction })\nexport const isInteger = /* #__PURE__ */ createIsInteger({ typed })\nexport const isNumeric = /* #__PURE__ */ createIsNumeric({ typed })\nexport const isPositive = /* #__PURE__ */ createIsPositive({ typed })\nexport const isNaN = /* #__PURE__ */ createIsNaN({ typed })\nexport const equalScalar = /* #__PURE__ */ createEqualScalar({ config, typed })\nexport const number = /* #__PURE__ */ createNumber({ typed })\nexport const boolean = /* #__PURE__ */ createBoolean({ typed })\nexport const complex = /* #__PURE__ */ createComplex({ Complex, typed })\nexport const splitUnit = /* #__PURE__ */ createSplitUnit({ typed })\nexport const unaryPlus = /* #__PURE__ */ createUnaryPlus({ BigNumber, config, typed })\nexport const apply = /* #__PURE__ */ createApply({ isInteger, typed })\nexport const cube = /* #__PURE__ */ createCube({ typed })\nexport const expm1 = /* #__PURE__ */ createExpm1({ Complex, typed })\nexport const log10 = /* #__PURE__ */ createLog10({ Complex, config, typed })\nexport const multiplyScalar = /* #__PURE__ */ createMultiplyScalar({ typed })\nexport const sign = /* #__PURE__ */ createSign({ BigNumber, Fraction, typed })\nexport const square = /* #__PURE__ */ createSquare({ typed })\nexport const bitNot = /* #__PURE__ */ createBitNot({ typed })\nexport const arg = /* #__PURE__ */ createArg({ typed })\nexport const im = /* #__PURE__ */ createIm({ typed })\nexport const not = /* #__PURE__ */ createNot({ typed })\nexport const filter = /* #__PURE__ */ createFilter({ typed })\nexport const forEach = /* #__PURE__ */ createForEach({ typed })\nexport const map = /* #__PURE__ */ createMap({ typed })\nexport const erf = /* #__PURE__ */ createErf({ typed })\nexport const format = /* #__PURE__ */ createFormat({ typed })\nexport const isPrime = /* #__PURE__ */ createIsPrime({ typed })\nexport const acos = /* #__PURE__ */ createAcos({ Complex, config, typed })\nexport const acot = /* #__PURE__ */ createAcot({ BigNumber, typed })\nexport const acsc = /* #__PURE__ */ createAcsc({ BigNumber, Complex, config, typed })\nexport const asec = /* #__PURE__ */ createAsec({ BigNumber, Complex, config, typed })\nexport const asin = /* #__PURE__ */ createAsin({ Complex, config, typed })\nexport const atan = /* #__PURE__ */ createAtan({ typed })\nexport const atanh = /* #__PURE__ */ createAtanh({ Complex, config, typed })\nexport const cosh = /* #__PURE__ */ createCosh({ typed })\nexport const coth = /* #__PURE__ */ createCoth({ BigNumber, typed })\nexport const csch = /* #__PURE__ */ createCsch({ BigNumber, typed })\nexport const sech = /* #__PURE__ */ createSech({ BigNumber, typed })\nexport const sinh = /* #__PURE__ */ createSinh({ typed })\nexport const tanh = /* #__PURE__ */ createTanh({ typed })\nexport const combinations = /* #__PURE__ */ createCombinations({ typed })\nexport const pickRandom = /* #__PURE__ */ createPickRandom({ config, typed })\nexport const randomInt = /* #__PURE__ */ createRandomInt({ config, typed })\nexport const LOG2E = /* #__PURE__ */ createLOG2E({ BigNumber, config })\nexport const clone = /* #__PURE__ */ createClone({ typed })\nexport const hasNumericValue = /* #__PURE__ */ createHasNumericValue({ isNumeric, typed })\nexport const typeOf = /* #__PURE__ */ createTypeOf({ typed })\nexport const string = /* #__PURE__ */ createString({ typed })\nexport const fraction = /* #__PURE__ */ createFraction({ Fraction, typed })\nexport const unaryMinus = /* #__PURE__ */ createUnaryMinus({ typed })\nexport const addScalar = /* #__PURE__ */ createAddScalar({ typed })\nexport const exp = /* #__PURE__ */ createExp({ typed })\nexport const log2 = /* #__PURE__ */ createLog2({ Complex, config, typed })\nexport const sqrt = /* #__PURE__ */ createSqrt({ Complex, config, typed })\nexport const conj = /* #__PURE__ */ createConj({ typed })\nexport const getMatrixDataType = /* #__PURE__ */ createGetMatrixDataType({ typed })\nexport const mode = /* #__PURE__ */ createMode({ isNaN, isNumeric, typed })\nexport const print = /* #__PURE__ */ createPrint({ typed })\nexport const acosh = /* #__PURE__ */ createAcosh({ Complex, config, typed })\nexport const acsch = /* #__PURE__ */ createAcsch({ BigNumber, typed })\nexport const asinh = /* #__PURE__ */ createAsinh({ typed })\nexport const cos = /* #__PURE__ */ createCos({ typed })\nexport const csc = /* #__PURE__ */ createCsc({ BigNumber, typed })\nexport const sin = /* #__PURE__ */ createSin({ typed })\nexport const random = /* #__PURE__ */ createRandom({ config, typed })\nexport const version = /* #__PURE__ */ createVersion({})\nexport const isNegative = /* #__PURE__ */ createIsNegative({ typed })\nexport const SparseMatrix = /* #__PURE__ */ createSparseMatrixClass({ Matrix, equalScalar, typed })\nexport const matrix = /* #__PURE__ */ createMatrix({ DenseMatrix, Matrix, SparseMatrix, typed })\nexport const cbrt = /* #__PURE__ */ createCbrt({ BigNumber, Complex, Fraction, config, isNegative, matrix, typed, unaryMinus })\nexport const gcd = /* #__PURE__ */ createGcd({ BigNumber, DenseMatrix, equalScalar, matrix, typed })\nexport const mod = /* #__PURE__ */ createMod({ DenseMatrix, equalScalar, matrix, typed })\nexport const nthRoot = /* #__PURE__ */ createNthRoot({ BigNumber, equalScalar, matrix, typed })\nexport const xgcd = /* #__PURE__ */ createXgcd({ BigNumber, config, matrix, typed })\nexport const bitAnd = /* #__PURE__ */ createBitAnd({ equalScalar, matrix, typed })\nexport const bitXor = /* #__PURE__ */ createBitXor({ DenseMatrix, matrix, typed })\nexport const or = /* #__PURE__ */ createOr({ DenseMatrix, equalScalar, matrix, typed })\nexport const concat = /* #__PURE__ */ createConcat({ isInteger, matrix, typed })\nexport const diag = /* #__PURE__ */ createDiag({ DenseMatrix, SparseMatrix, matrix, typed })\nexport const identity = /* #__PURE__ */ createIdentity({ BigNumber, DenseMatrix, SparseMatrix, config, matrix, typed })\nexport const ones = /* #__PURE__ */ createOnes({ BigNumber, config, matrix, typed })\nexport const reshape = /* #__PURE__ */ createReshape({ isInteger, matrix, typed })\nexport const size = /* #__PURE__ */ createSize({ matrix, config, typed })\nexport const subset = /* #__PURE__ */ createSubset({ matrix, typed })\nexport const zeros = /* #__PURE__ */ createZeros({ BigNumber, config, matrix, typed })\nexport const to = /* #__PURE__ */ createTo({ matrix, typed })\nexport const round = /* #__PURE__ */ createRound({ BigNumber, DenseMatrix, equalScalar, matrix, typed, zeros })\nexport const leftShift = /* #__PURE__ */ createLeftShift({ DenseMatrix, equalScalar, matrix, typed, zeros })\nexport const rightLogShift = /* #__PURE__ */ createRightLogShift({ DenseMatrix, equalScalar, matrix, typed, zeros })\nexport const compare = /* #__PURE__ */ createCompare({ BigNumber, DenseMatrix, Fraction, config, equalScalar, matrix, typed })\nexport const compareText = /* #__PURE__ */ createCompareText({ matrix, typed })\nexport const smaller = /* #__PURE__ */ createSmaller({ DenseMatrix, config, matrix, typed })\nexport const larger = /* #__PURE__ */ createLarger({ DenseMatrix, config, matrix, typed })\nexport const unequal = /* #__PURE__ */ createUnequal({ DenseMatrix, config, equalScalar, matrix, typed })\nexport const max = /* #__PURE__ */ createMax({ larger, typed })\nexport const ImmutableDenseMatrix = /* #__PURE__ */ createImmutableDenseMatrixClass({ DenseMatrix, smaller })\nexport const FibonacciHeap = /* #__PURE__ */ createFibonacciHeapClass({ larger, smaller })\nexport const sparse = /* #__PURE__ */ createSparse({ SparseMatrix, typed })\nexport const acoth = /* #__PURE__ */ createAcoth({ BigNumber, Complex, config, typed })\nexport const atan2 = /* #__PURE__ */ createAtan2({ BigNumber, DenseMatrix, equalScalar, matrix, typed })\nexport const sec = /* #__PURE__ */ createSec({ BigNumber, typed })\nexport const add = /* #__PURE__ */ createAdd({ DenseMatrix, SparseMatrix, addScalar, equalScalar, matrix, typed })\nexport const trace = /* #__PURE__ */ createTrace({ add, matrix, typed })\nexport const composition = /* #__PURE__ */ createComposition({ addScalar, combinations, isInteger, isNegative, isPositive, larger, typed })\nexport const isZero = /* #__PURE__ */ createIsZero({ typed })\nexport const abs = /* #__PURE__ */ createAbs({ typed })\nexport const floor = /* #__PURE__ */ createFloor({ config, round, typed })\nexport const multiply = /* #__PURE__ */ createMultiply({ addScalar, equalScalar, matrix, multiplyScalar, typed })\nexport const dotMultiply = /* #__PURE__ */ createDotMultiply({ equalScalar, matrix, multiplyScalar, typed })\nexport const re = /* #__PURE__ */ createRe({ typed })\nexport const flatten = /* #__PURE__ */ createFlatten({ matrix, typed })\nexport const resize = /* #__PURE__ */ createResize({ config, matrix })\nexport const squeeze = /* #__PURE__ */ createSqueeze({ matrix, typed })\nexport const prod = /* #__PURE__ */ createProd({ multiply, typed })\nexport const pow = /* #__PURE__ */ createPow({ Complex, config, fraction, identity, matrix, multiply, number, typed })\nexport const dotPow = /* #__PURE__ */ createDotPow({ DenseMatrix, equalScalar, matrix, pow, typed })\nexport const rightArithShift = /* #__PURE__ */ createRightArithShift({ DenseMatrix, equalScalar, matrix, typed, zeros })\nexport const compareNatural = /* #__PURE__ */ createCompareNatural({ compare, typed })\nexport const equalText = /* #__PURE__ */ createEqualText({ compareText, isZero, typed })\nexport const largerEq = /* #__PURE__ */ createLargerEq({ DenseMatrix, config, matrix, typed })\nexport const partitionSelect = /* #__PURE__ */ createPartitionSelect({ compare, isNaN, isNumeric, typed })\nexport const min = /* #__PURE__ */ createMin({ smaller, typed })\nexport const Spa = /* #__PURE__ */ createSpaClass({ FibonacciHeap, addScalar, equalScalar })\nexport const asech = /* #__PURE__ */ createAsech({ BigNumber, Complex, config, typed })\nexport const tan = /* #__PURE__ */ createTan({ typed })\nexport const setSize = /* #__PURE__ */ createSetSize({ compareNatural, typed })\nexport const norm = /* #__PURE__ */ createNorm({ abs, add, conj, equalScalar, larger, matrix, multiply, pow, smaller, sqrt, typed })\nexport const quantileSeq = /* #__PURE__ */ createQuantileSeq({ add, compare, multiply, partitionSelect, typed })\nexport const gamma = /* #__PURE__ */ createGamma({ BigNumber, Complex, config, multiplyScalar, pow, typed })\nexport const bignumber = /* #__PURE__ */ createBignumber({ BigNumber, typed })\nexport const lcm = /* #__PURE__ */ createLcm({ equalScalar, matrix, typed })\nexport const bitOr = /* #__PURE__ */ createBitOr({ DenseMatrix, equalScalar, matrix, typed })\nexport const kron = /* #__PURE__ */ createKron({ matrix, multiplyScalar, typed })\nexport const transpose = /* #__PURE__ */ createTranspose({ matrix, typed })\nexport const numeric = /* #__PURE__ */ createNumeric({ bignumber, fraction, number })\nexport const and = /* #__PURE__ */ createAnd({ equalScalar, matrix, not, typed, zeros })\nexport const smallerEq = /* #__PURE__ */ createSmallerEq({ DenseMatrix, config, matrix, typed })\nexport const sort = /* #__PURE__ */ createSort({ compare, compareNatural, matrix, typed })\nexport const cot = /* #__PURE__ */ createCot({ BigNumber, typed })\nexport const dot = /* #__PURE__ */ createDot({ add, multiply, typed })\nexport const sum = /* #__PURE__ */ createSum({ bignumber, fraction, add, config, typed })\nexport const factorial = /* #__PURE__ */ createFactorial({ gamma, typed })\nexport const permutations = /* #__PURE__ */ createPermutations({ factorial, typed })\nexport const ceil = /* #__PURE__ */ createCeil({ config, round, typed })\nexport const subtract = /* #__PURE__ */ createSubtract({ DenseMatrix, addScalar, equalScalar, matrix, typed, unaryMinus })\nexport const cross = /* #__PURE__ */ createCross({ matrix, multiply, subtract, typed })\nexport const ctranspose = /* #__PURE__ */ createCtranspose({ conj, transpose, typed })\nexport const equal = /* #__PURE__ */ createEqual({ DenseMatrix, equalScalar, matrix, typed })\nexport const Index = /* #__PURE__ */ createIndexClass({ ImmutableDenseMatrix })\nexport const setCartesian = /* #__PURE__ */ createSetCartesian({ DenseMatrix, Index, compareNatural, size, subset, typed })\nexport const setDistinct = /* #__PURE__ */ createSetDistinct({ DenseMatrix, Index, compareNatural, size, subset, typed })\nexport const setIsSubset = /* #__PURE__ */ createSetIsSubset({ Index, compareNatural, size, subset, typed })\nexport const setPowerset = /* #__PURE__ */ createSetPowerset({ Index, compareNatural, size, subset, typed })\nexport const index = /* #__PURE__ */ createIndex({ Index, typed })\nexport const fix = /* #__PURE__ */ createFix({ Complex, ceil, floor, typed })\nexport const range = /* #__PURE__ */ createRange({ bignumber, matrix, config, larger, largerEq, smaller, smallerEq, typed })\nexport const divideScalar = /* #__PURE__ */ createDivideScalar({ numeric, typed })\nexport const nthRoots = /* #__PURE__ */ createNthRoots({ Complex, config, divideScalar, typed })\nexport const lsolve = /* #__PURE__ */ createLsolve({ DenseMatrix, divideScalar, equalScalar, matrix, multiplyScalar, subtract, typed })\nexport const deepEqual = /* #__PURE__ */ createDeepEqual({ equal, typed })\nexport const setDifference = /* #__PURE__ */ createSetDifference({ DenseMatrix, Index, compareNatural, size, subset, typed })\nexport const setMultiplicity = /* #__PURE__ */ createSetMultiplicity({ Index, compareNatural, size, subset, typed })\nexport const hypot = /* #__PURE__ */ createHypot({ abs, addScalar, divideScalar, isPositive, multiplyScalar, smaller, sqrt, typed })\nexport const lup = /* #__PURE__ */ createLup({ DenseMatrix, Spa, SparseMatrix, abs, addScalar, divideScalar, equalScalar, larger, matrix, multiplyScalar, subtract, typed, unaryMinus })\nexport const slu = /* #__PURE__ */ createSlu({ SparseMatrix, abs, add, divideScalar, larger, largerEq, multiply, subtract, transpose, typed })\nexport const det = /* #__PURE__ */ createDet({ lup, matrix, multiply, subtract, typed, unaryMinus })\nexport const distance = /* #__PURE__ */ createDistance({ abs, addScalar, divideScalar, multiplyScalar, sqrt, subtract, typed, unaryMinus })\nexport const stirlingS2 = /* #__PURE__ */ createStirlingS2({ addScalar, combinations, divideScalar, factorial, isInteger, isNegative, larger, multiplyScalar, pow, subtract, typed })\nexport const catalan = /* #__PURE__ */ createCatalan({ addScalar, combinations, divideScalar, isInteger, isNegative, multiplyScalar, typed })\nexport const xor = /* #__PURE__ */ createXor({ DenseMatrix, matrix, typed })\nexport const row = /* #__PURE__ */ createRow({ Index, matrix, range, typed })\nexport const dotDivide = /* #__PURE__ */ createDotDivide({ DenseMatrix, divideScalar, equalScalar, matrix, typed })\nexport const Unit = /* #__PURE__ */ createUnitClass({ BigNumber, Complex, Fraction, abs, addScalar, config, divideScalar, equal, fix, format, isNumeric, multiplyScalar, number, pow, round, subtract })\nexport const createUnit = /* #__PURE__ */ createCreateUnit({ Unit, typed })\nexport const setSymDifference = /* #__PURE__ */ createSetSymDifference({ Index, concat, setDifference, size, subset, typed })\nexport const qr = /* #__PURE__ */ createQr({ addScalar, conj, divideScalar, identity, isZero, matrix, multiplyScalar, sign, sqrt, subtract, typed, unaryMinus, unequal, zeros })\nexport const inv = /* #__PURE__ */ createInv({ abs, addScalar, det, divideScalar, identity, matrix, multiply, typed, unaryMinus })\nexport const sqrtm = /* #__PURE__ */ createSqrtm({ abs, add, identity, inv, max, multiply, size, sqrt, subtract, typed })\nexport const intersect = /* #__PURE__ */ createIntersect({ abs, add, addScalar, config, divideScalar, equalScalar, matrix, multiply, multiplyScalar, smaller, subtract, typed })\nexport const bellNumbers = /* #__PURE__ */ createBellNumbers({ addScalar, isInteger, isNegative, stirlingS2, typed })\nexport const atomicMass = /* #__PURE__ */ createAtomicMass({ BigNumber, Unit, config })\nexport const bohrMagneton = /* #__PURE__ */ createBohrMagneton({ BigNumber, Unit, config })\nexport const boltzmann = /* #__PURE__ */ createBoltzmann({ BigNumber, Unit, config })\nexport const conductanceQuantum = /* #__PURE__ */ createConductanceQuantum({ BigNumber, Unit, config })\nexport const deuteronMass = /* #__PURE__ */ createDeuteronMass({ BigNumber, Unit, config })\nexport const electronMass = /* #__PURE__ */ createElectronMass({ BigNumber, Unit, config })\nexport const faraday = /* #__PURE__ */ createFaraday({ BigNumber, Unit, config })\nexport const firstRadiation = /* #__PURE__ */ createFirstRadiation({ BigNumber, Unit, config })\nexport const gravitationConstant = /* #__PURE__ */ createGravitationConstant({ BigNumber, Unit, config })\nexport const hartreeEnergy = /* #__PURE__ */ createHartreeEnergy({ BigNumber, Unit, config })\nexport const klitzing = /* #__PURE__ */ createKlitzing({ BigNumber, Unit, config })\nexport const magneticConstant = /* #__PURE__ */ createMagneticConstant({ BigNumber, Unit, config })\nexport const molarMass = /* #__PURE__ */ createMolarMass({ BigNumber, Unit, config })\nexport const molarPlanckConstant = /* #__PURE__ */ createMolarPlanckConstant({ BigNumber, Unit, config })\nexport const neutronMass = /* #__PURE__ */ createNeutronMass({ BigNumber, Unit, config })\nexport const planckCharge = /* #__PURE__ */ createPlanckCharge({ BigNumber, Unit, config })\nexport const planckLength = /* #__PURE__ */ createPlanckLength({ BigNumber, Unit, config })\nexport const planckTemperature = /* #__PURE__ */ createPlanckTemperature({ BigNumber, Unit, config })\nexport const protonMass = /* #__PURE__ */ createProtonMass({ BigNumber, Unit, config })\nexport const reducedPlanckConstant = /* #__PURE__ */ createReducedPlanckConstant({ BigNumber, Unit, config })\nexport const secondRadiation = /* #__PURE__ */ createSecondRadiation({ BigNumber, Unit, config })\nexport const stefanBoltzmann = /* #__PURE__ */ createStefanBoltzmann({ BigNumber, Unit, config })\nexport const vacuumImpedance = /* #__PURE__ */ createVacuumImpedance({ BigNumber, Unit, config })\nexport const column = /* #__PURE__ */ createColumn({ Index, matrix, range, typed })\nexport const usolve = /* #__PURE__ */ createUsolve({ DenseMatrix, divideScalar, equalScalar, matrix, multiplyScalar, subtract, typed })\nexport const setIntersect = /* #__PURE__ */ createSetIntersect({ DenseMatrix, Index, compareNatural, size, subset, typed })\nexport const lusolve = /* #__PURE__ */ createLusolve({ DenseMatrix, lsolve, lup, matrix, slu, typed, usolve })\nexport const expm = /* #__PURE__ */ createExpm({ abs, add, identity, inv, multiply, typed })\nexport const avogadro = /* #__PURE__ */ createAvogadro({ BigNumber, Unit, config })\nexport const classicalElectronRadius = /* #__PURE__ */ createClassicalElectronRadius({ BigNumber, Unit, config })\nexport const electricConstant = /* #__PURE__ */ createElectricConstant({ BigNumber, Unit, config })\nexport const fermiCoupling = /* #__PURE__ */ createFermiCoupling({ BigNumber, Unit, config })\nexport const gravity = /* #__PURE__ */ createGravity({ BigNumber, Unit, config })\nexport const loschmidt = /* #__PURE__ */ createLoschmidt({ BigNumber, Unit, config })\nexport const molarMassC12 = /* #__PURE__ */ createMolarMassC12({ BigNumber, Unit, config })\nexport const nuclearMagneton = /* #__PURE__ */ createNuclearMagneton({ BigNumber, Unit, config })\nexport const planckMass = /* #__PURE__ */ createPlanckMass({ BigNumber, Unit, config })\nexport const quantumOfCirculation = /* #__PURE__ */ createQuantumOfCirculation({ BigNumber, Unit, config })\nexport const speedOfLight = /* #__PURE__ */ createSpeedOfLight({ BigNumber, Unit, config })\nexport const wienDisplacement = /* #__PURE__ */ createWienDisplacement({ BigNumber, Unit, config })\nexport const log = /* #__PURE__ */ createLog({ Complex, config, divideScalar, typed })\nexport const unit = /* #__PURE__ */ createUnitFunction({ Unit, typed })\nexport const divide = /* #__PURE__ */ createDivide({ divideScalar, equalScalar, inv, matrix, multiply, typed })\nexport const median = /* #__PURE__ */ createMedian({ add, compare, divide, partitionSelect, typed })\nexport const variance = /* #__PURE__ */ createVariance({ add, apply, divide, isNaN, multiply, subtract, typed })\nexport const std = /* #__PURE__ */ createStd({ sqrt, typed, variance })\nexport const multinomial = /* #__PURE__ */ createMultinomial({ add, divide, factorial, isInteger, isPositive, multiply, typed })\nexport const bohrRadius = /* #__PURE__ */ createBohrRadius({ BigNumber, Unit, config })\nexport const elementaryCharge = /* #__PURE__ */ createElementaryCharge({ BigNumber, Unit, config })\nexport const inverseConductanceQuantum = /* #__PURE__ */ createInverseConductanceQuantum({ BigNumber, Unit, config })\nexport const molarVolume = /* #__PURE__ */ createMolarVolume({ BigNumber, Unit, config })\nexport const planckTime = /* #__PURE__ */ createPlanckTime({ BigNumber, Unit, config })\nexport const thomsonCrossSection = /* #__PURE__ */ createThomsonCrossSection({ BigNumber, Unit, config })\nexport const log1p = /* #__PURE__ */ createLog1p({ Complex, config, divideScalar, log, typed })\nexport const mean = /* #__PURE__ */ createMean({ add, divide, typed })\nexport const gasConstant = /* #__PURE__ */ createGasConstant({ BigNumber, Unit, config })\nexport const planckConstant = /* #__PURE__ */ createPlanckConstant({ BigNumber, Unit, config })\nexport const setUnion = /* #__PURE__ */ createSetUnion({ Index, concat, setIntersect, setSymDifference, size, subset, typed })\nexport const kldivergence = /* #__PURE__ */ createKldivergence({ divide, dotDivide, isNumeric, log, matrix, multiply, sum, typed })\nexport const coulomb = /* #__PURE__ */ createCoulomb({ BigNumber, Unit, config })\nexport const rydberg = /* #__PURE__ */ createRydberg({ BigNumber, Unit, config })\nexport const mad = /* #__PURE__ */ createMad({ abs, map, median, subtract, typed })\nexport const magneticFluxQuantum = /* #__PURE__ */ createMagneticFluxQuantum({ BigNumber, Unit, config })\n","<template>\n  <div>\n    <lab main-title=\"Лабораторная работа №1\">\n      <h2 id=\"first\">Постановка задачи</h2>\n      <p>Дан статистический ряд:\n      <div class=\"vue-mathjax-wrapper\">\n        <!--        <vue-mathjax formula=\"`\\(x = {-b \\\\pm \\\\sqrt{b^2-4ac} \\\\over 2a}.\\)`\"></vue-mathjax>--></div>\n      </p>\n      <v-table\n        :cols=\"initialTableCols\"\n      ></v-table>\n      <span>Требуется:</span>\n      <ol>\n        <li>Записать значения результатов эксперимента в виде вариационного ряда.</li>\n        <li>Найти медиану\n          <div class=\"vue-mathjax-wrapper\">\n            <vue-mathjax formula=\"`M_e`\"></vue-mathjax>\n          </div>\n          вариационного ряда.</li>\n        <li>Найти моду\n          <div class=\"vue-mathjax-wrapper\">\n            <vue-mathjax formula=\"`M_0`\"></vue-mathjax>\n          </div>\n          вариационного ряда.</li>\n        <li>Найти размах варьирования и длину интервала, если число итервалов\n          <div class=\"vue-mathjax-wrapper\">\n            <vue-mathjax formula=\"`\\quad m = 9.`\"></vue-mathjax>\n          </div>\n        </li>\n        <li>Построить полигон частот, гистограмму относительных частот и приближенный график эмпирической функции\n          распределения.</li>\n        <li>Найти числовые характеристики выборки: выборочную среднюю,\n          исправленную дисперсию, выборочное среднее квадратичное отклонение,\n          выборочный коэффициент вариации</li>\n      </ol>\n      <h2 id=\"second\">Решение</h2>\n      <h3 id=\"statisticsDistribution\">Статистическое распределение выборки</h3>\n      <p>\n        Располагаем исходный ряд в неубывающем порядке, т.е. записываем вариационный ряд:\n      </p>\n      <v-table\n        :cols=\"variationRowTableCols\"\n      ></v-table>\n      <p>Находим медиану\n      <div class=\"vue-mathjax-wrapper\">\n        <vue-mathjax formula=\"`M_e`\"></vue-mathjax>\n      </div>\n        вариационного ряда, т.е. находим варианту,\n        которая делит вариационный ряд на две части, равные по числу вариант:\n      <div class=\"vue-mathjax-wrapper\">\n        <vue-mathjax :formula=\"formulas.median\"></vue-mathjax>\n      </div>\n      </p>\n      <p>Находим моду\n      <div class=\"vue-mathjax-wrapper\">\n        <vue-mathjax formula=\"`M_0`\"></vue-mathjax>\n      </div>\n        вариационного ряда, т.е. варианту, имеющую\n        наибольшую частоту:\n      <div class=\"vue-mathjax-wrapper\">\n        <vue-mathjax :formula=\"formulas.mode\"></vue-mathjax>\n      </div>\n        Данный вариационный ряд имеет три моды, т.к. их частоты равны {{ modeFrequency }}.\n      </p>\n      <p>Находим размах варьирования по формуле\n      <div class=\"vue-mathjax-wrapper\">\n        <vue-mathjax formula=\"`\\quad R = x_{max} - x_{min}:`\"></vue-mathjax>\n      </div>\n      <div class=\"vue-mathjax-wrapper\">\n        <vue-mathjax :formula=\"formulas.variationRange\"></vue-mathjax>\n      </div>\n      </p>\n      <p>Вычисляем длину интервала по формуле\n      <div class=\"vue-mathjax-wrapper\">\n        <vue-mathjax formula=\"`\\quad h=\\frac{x_{max} - x_{min}}{m}:`\"></vue-mathjax>\n      </div>\n      <div class=\"vue-mathjax-wrapper\">\n        <vue-mathjax :formula=\"formulas.intervalLength\"></vue-mathjax>\n      </div>\n      </p>\n      <p>Все вычисления записываем в таблицу.</p>\n      <v-table\n        :heads=\"tables.statisticDist.heads\"\n        :cols=\"[intervalBordersStr, middles, intervalFreq, relFreq, intervalDensity]\"\n        :is-numerated=\"true\"\n        num-letter=\"<br><br>$$m_i$$\"\n      ></v-table>\n      <p>\n        Строим полигон частот и гистограмму относительных частот\n      </p>\n      <interval-frequency\n        :x=\"middles\"\n        :y=\"intervalFreq\"\n        :styles=\"charts.styles\"\n      ></interval-frequency>\n      <relative-frequency\n        :x=\"intervalBordersStr\"\n        :y=\"relFreq\"\n      ></relative-frequency>\n\n      <h3 id=\"empericalFunction\">Эмпирическая функция распределения</h3>\n      <p>Значения эмпирической функции распределения ищем по формулам &nbsp;\n      <div class=\"vue-mathjax-wrapper\">\n        <vue-mathjax :formula=\"formulas.empericalFunctionCommon\"></vue-mathjax>\n      </div>\n      </p>\n      <p>\n      <div class=\"vue-mathjax-wrapper\">\n        <vue-mathjax :formula=\"formulas.empericalFunction\"></vue-mathjax>\n      </div>\n      </p>\n      <p>\n        Строим приближенный график эмпирической функции распределения:\n      </p>\n      <p>\n        <emperical-distribution-function\n          :x=\"intervalBorders\"\n          :y=\"distributionFunction\"\n        ></emperical-distribution-function>\n      </p>\n      <h3 id=\"variationRow\">Числовые характеристики выборки</h3>\n      <p>\n        Выборочная средняя\n      <div class=\"vue-mathjax-wrapper\">\n        <vue-mathjax :formula=\"formulas.sampleAverage\"></vue-mathjax>\n      </div>\n      </p>\n      <p>\n        Исправленная дисперсия\n      <div class=\"vue-mathjax-wrapper\">\n        <vue-mathjax :formula=\"formulas.correctedVariance\"></vue-mathjax>\n      </div>\n      </p>\n      <p>\n        Выборочное среднее квадратичное отклонение\n      <div class=\"vue-mathjax-wrapper\">\n        <vue-mathjax :formula=\"formulas.sampleStandardDeviation\"></vue-mathjax>\n      </div>\n      </p>\n      <p>\n        Выборочный коэффициент вариации\n      <div class=\"vue-mathjax-wrapper\">\n        <vue-mathjax :formula=\"formulas.sampleVariationCoefficient\"></vue-mathjax>\n      </div>\n      </p>\n    </lab>\n  </div>\n</template>\n\n<script>\n  import Lab from '@/components/Lab'\n  import VTable from '@/components/VTable'\n  import IntervalFrequency from '@/components/charts/IntervalFrequency'\n  import RelativeFrequency from '@/components/charts/relativeFrequency'\n  import EmpericalDistributionFunction from '@/components/charts/EmpericalDistributionFunction'\n  import * as math from 'mathjs'\n\n  export default {\n    components: {\n      Lab,\n      IntervalFrequency,\n      RelativeFrequency,\n      EmpericalDistributionFunction,\n      VTable\n    },\n    data() {\n      return {\n        initialTableCols: [],\n        initialRow: [],\n        intervalsCount: 9,\n        variationRow: [],\n        median: null,\n        mode: null,\n        variationRange: null,\n        intervalLength: null,\n        intervalBorders: [],\n        middles: [],\n        intervalFreq: [],\n        relFreq: [],\n        intervalDensity: [],\n        freqPolyData: [],\n        distributionFunction: [],\n        sampleAverage: null,\n        correctedVariance: null,\n        sampleStandardDeviation: null,\n        sampleVariationCoefficient: null,\n\n        formulas: {\n          median: null,\n          mode: null,\n          variationRange: null,\n          empericalFunctionCommon: null,\n          empericalFunction: null\n        },\n\n        charts: {\n          styles: {\n            marginBottom: '1.5rem'\n          }\n        },\n\n        tables: {\n          statisticDist: {\n            heads: [\n              'Границы интервала $$x_i - x_{i + 1}$$',\n              'Середина интервала $$x\\'_i = \\\\frac{x_i + x_{i + 1}}{2}$$',\n              'Частота интервала $$n_i$$',\n              'Относительная частота  $$W_i = \\\\frac{n_i}{n}$$',\n              'Плотность частоты $$\\\\frac{W_i}{h}$$'\n            ]\n          }\n        }\n      }\n    },\n    computed: {\n      variationRowTableCols() {\n        return math.transpose(math.reshape(this.variationRow, [10, 10]))\n      },\n      modeFrequency() {\n        return this.variationRow.filter(x => x === this.mode[0]).length\n      },\n      intervalBordersStr() {\n        return this.intervalBorders.reduce(function(res, elem, i, ib) {\n          if (i !== ib.length - 1) {\n            res[i] = elem.toFixed(2)\n          }\n\n          if (i !== 0) {\n            res[i - 1] += ` – ${elem.toFixed(2)}`\n          }\n\n          return res\n        }, [])\n      }\n    },\n    created() {\n      this.initialTableCols = math.transpose([\n        [44.8, 46.2, 45.7, 44.0, 46.4, 45.2, 46.7, 45.4, 45.3, 46.1],\n        [44.3, 45.3, 45.6, 46.7, 44.5, 46.0, 45.7, 45.0, 46.4, 45.9],\n        [44.4, 45.4, 46.1, 43.4, 46.5, 45.9, 43.9, 45.7, 47.1, 44.9],\n        [43.8, 45.6, 45.2, 46.4, 44.2, 46.5, 45.7, 44.7, 46.0, 45.8],\n        [44.3, 45.5, 46.7, 44.9, 46.2, 46.7, 44.6, 46.0, 45.4, 45.0],\n        [45.4, 45.3, 44.1, 46.6, 44.8, 45.6, 43.7, 46.8, 45.2, 46.1],\n        [44.5, 45.4, 45.1, 46.2, 44.2, 46.4, 45.7, 43.9, 47.2, 46.0],\n        [43.9, 45.6, 44.9, 44.5, 46.2, 46.7, 44.3, 46.1, 47.7, 45.8],\n        [45.6, 45.2, 44.2, 46.0, 44.7, 46.5, 43.5, 45.4, 47.1, 44.0],\n        [46.2, 44.2, 45.5, 46.0, 45.7, 46.4, 44.6, 47.0, 45.2, 46.9]\n      ])\n\n      this.initialRow = this.initialTableCols.flat()\n\n      this.variationRow = this.initialRow.sort((a, b) => {\n        return a - b\n      })\n\n      this.median = math.median(this.variationRow)\n      this.mode = math.mode(this.variationRow)\n      this.variationRange = +(this.variationRow[this.variationRow.length - 1] - this.variationRow[0]).toFixed(1)\n      this.intervalLength = this.variationRange / this.intervalsCount\n      this.intervalLength = math.round(this.intervalLength, 2)\n\n      this.intervalBorders = []\n      this.intervalBorders.push(this.variationRow[0])\n      for (let i = 1; i < 10; ++i) {\n        let border = this.intervalBorders[i - 1] + this.intervalLength\n        this.intervalBorders.push(math.round(border, 2))\n      }\n\n      for (let i = 0; i < this.intervalBorders.length - 1; ++i) {\n        this.middles[i] = (this.intervalBorders[i + 1] + this.intervalBorders[i]) / 2\n        this.middles[i] = math.round(this.middles[i], 2)\n      }\n\n      this.intervalFreq = new Array(this.intervalsCount)\n      this.intervalFreq.fill(0)\n      for (let i = 0, j = 0; i < this.intervalBorders.length && j < this.variationRow.length; ++i) {\n        while (math.smallerEq(this.variationRow[j], this.intervalBorders[i + 1])) {\n          ++this.intervalFreq[i]\n          ++j\n\n          if (j >= this.variationRow.length) {\n            break\n          }\n        }\n      }\n\n      this.relFreq = this.intervalFreq.map((el) => {\n        return math.round(el / this.variationRow.length, 3)\n      })\n\n      this.intervalDensity = this.relFreq.map((el) => {\n        return math.round(el / this.intervalLength, 4)\n      })\n\n      this.freqPolyData = this.middles.map((middle, i) => {\n        return [middle, this.intervalFreq[i]]\n      })\n\n      this.distributionFunction = [0]\n      let currentFreq = 0\n      for (let i = 0; i < this.intervalFreq.length; ++i) {\n        this.distributionFunction.push((currentFreq += this.intervalFreq[i]) / this.variationRow.length)\n      }\n\n      let saTop = this.middles.reduce((prev, middle, i) => {\n        return prev + middle * this.intervalFreq[i]\n      }, 0)\n      this.sampleAverage = +(saTop / this.variationRow.length).toFixed(2)\n\n      this.correctedVariance = +(this.middles.reduce((prev, middle, i) => {\n        return prev + math.pow((middle - this.sampleAverage), 2) * this.intervalFreq[i]\n      }, 0) / (this.variationRow.length - 1)).toFixed(2)\n\n      this.sampleStandardDeviation = +math.sqrt(this.correctedVariance).toFixed(2)\n\n      this.sampleVariationCoefficient = (this.sampleStandardDeviation / this.sampleAverage) * 100\n\n\n\n      this.formulas.median = `$$M_e = \\\\frac{x_{50} + x_{51}}{2}; \\\\quad\n        M_e = \\\\frac{${this.variationRow[49]} + ${this.variationRow[50]}}{2} = ${this.median};$$`\n\n      this.formulas.mode = `\\`${this.mode.map(m => 'M_0 = ' + m).join('; \\\\quad')} \\`.`\n\n      this.formulas.variationRange = `$$x_{min} = ${this.variationRow[0]}; \\\\quad\n        x_{max} = ${this.variationRow[this.variationRow.length - 1]}; \\\\quad\n        R = ${this.variationRow[0]} - ${this.variationRow[this.variationRow.length - 1]}\n        = ${this.variationRange}.$$`\n\n      this.formulas.intervalLength = `$$\\\\quad h=\\\\frac{${this.variationRange}}{${this.intervalsCount}}\n        \\\\approx ${this.intervalLength}.$$`\n\n      this.formulas.empericalFunctionCommon = '$F^*(x_1) = 0;\\\\quad$\\n' +\n        '$F^*(x_2) = \\\\dfrac{n_1}{n}; \\\\quad$ $ F^*(x_3) = \\\\dfrac{n_1 + n_2}{n}; \\\\quad$ $ \\\\dots; \\\\quad$\\n' +\n        '$F^*(x_k) = \\\\dfrac{n_1 + n_2 + \\\\dots + n_{k - 1}}{n}; \\\\quad$\\n' +\n        '$F^*(x_{k+1}) = \\\\dfrac{n_1 + n_2 + \\\\dots + n_k}{n} = 1:$'\n\n      let ef = [`$F^*(${this.intervalBorders[0]}) = 0`]\n      // this.formulas.empericalFunction =\n      currentFreq = 0\n      for (let i = 1; i < this.intervalBorders.length; ++i) {\n        ef.push(`$F^*(${this.intervalBorders[1]}) =\n          \\\\dfrac{${(currentFreq) ? currentFreq + ' + ' : ''} ${this.intervalFreq[i - 1]}}{${this.variationRow.length}}\n          = ${this.distributionFunction[i]}`)\n        currentFreq += this.intervalFreq[i - 1]\n      }\n\n      this.formulas.empericalFunction = ef.join(';\\\\quad$') + '.$'\n\n      this.formulas.sampleAverage = `$$\\\\overline{x}_в = \\\\frac{x_1 n_1 + x_2 n_2 + \\\\dots + x_k n_k}{n} =\n        \\\\frac{${saTop}}{${this.variationRow.length}} \\\\approx ${this.sampleAverage}$$`\n\n      this.formulas.correctedVariance = `$$S^2 = \\\\frac{\\\\sum\\\\limits_{i=1}^{k}(x'_i - \\\\overline{x}_в)^2 \\\\cdot n_i}{n - 1}\n        = ${this.correctedVariance}.$$`\n\n      this.formulas.sampleStandardDeviation = `$$S = \\\\sqrt{S^2} = \\\\sqrt{${this.correctedVariance}} \\\\approx ${this.sampleStandardDeviation}$$`\n\n      this.formulas.sampleVariationCoefficient = `$$\\\\gamma = \\\\frac{S}{\\\\overline{x}_в} \\\\cdot 100\\\\% =\n        \\\\frac{${this.sampleStandardDeviation}}{${this.sampleAverage}} \\\\cdot 100\\\\% \\\\approx ${this.sampleVariationCoefficient.toFixed(0)}\\\\%$$`\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Lab1.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Lab1.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Lab1.vue?vue&type=template&id=655a09a5&\"\nimport script from \"./Lab1.vue?vue&type=script&lang=js&\"\nexport * from \"./Lab1.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'ޖެނުއަރީ',\n        'ފެބްރުއަރީ',\n        'މާރިޗު',\n        'އޭޕްރީލު',\n        'މޭ',\n        'ޖޫން',\n        'ޖުލައި',\n        'އޯގަސްޓު',\n        'ސެޕްޓެމްބަރު',\n        'އޮކްޓޯބަރު',\n        'ނޮވެމްބަރު',\n        'ޑިސެމްބަރު'\n    ], weekdays = [\n        'އާދިއްތަ',\n        'ހޯމަ',\n        'އަންގާރަ',\n        'ބުދަ',\n        'ބުރާސްފަތި',\n        'ހުކުރު',\n        'ހޮނިހިރު'\n    ];\n\n    var dv = moment.defineLocale('dv', {\n        months : months,\n        monthsShort : months,\n        weekdays : weekdays,\n        weekdaysShort : weekdays,\n        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),\n        longDateFormat : {\n\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/M/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /މކ|މފ/,\n        isPM : function (input) {\n            return 'މފ' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'މކ';\n            } else {\n                return 'މފ';\n            }\n        },\n        calendar : {\n            sameDay : '[މިއަދު] LT',\n            nextDay : '[މާދަމާ] LT',\n            nextWeek : 'dddd LT',\n            lastDay : '[އިއްޔެ] LT',\n            lastWeek : '[ފާއިތުވި] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ތެރޭގައި %s',\n            past : 'ކުރިން %s',\n            s : 'ސިކުންތުކޮޅެއް',\n            ss : 'd% ސިކުންތު',\n            m : 'މިނިޓެއް',\n            mm : 'މިނިޓު %d',\n            h : 'ގަޑިއިރެއް',\n            hh : 'ގަޑިއިރު %d',\n            d : 'ދުވަހެއް',\n            dd : 'ދުވަސް %d',\n            M : 'މަހެއް',\n            MM : 'މަސް %d',\n            y : 'އަހަރެއް',\n            yy : 'އަހަރު %d'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 7,  // Sunday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return dv;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n    function translate(number, withoutSuffix, key, isFuture) {\n        var num = number;\n        switch (key) {\n            case 's':\n                return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n            case 'ss':\n                return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';\n            case 'm':\n                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'mm':\n                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'h':\n                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'hh':\n                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'd':\n                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'dd':\n                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'M':\n                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'MM':\n                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'y':\n                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n            case 'yy':\n                return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n        }\n        return '';\n    }\n    function week(isFuture) {\n        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';\n    }\n\n    var hu = moment.defineLocale('hu', {\n        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'YYYY.MM.DD.',\n            LL : 'YYYY. MMMM D.',\n            LLL : 'YYYY. MMMM D. H:mm',\n            LLLL : 'YYYY. MMMM D., dddd H:mm'\n        },\n        meridiemParse: /de|du/i,\n        isPM: function (input) {\n            return input.charAt(1).toLowerCase() === 'u';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower === true ? 'de' : 'DE';\n            } else {\n                return isLower === true ? 'du' : 'DU';\n            }\n        },\n        calendar : {\n            sameDay : '[ma] LT[-kor]',\n            nextDay : '[holnap] LT[-kor]',\n            nextWeek : function () {\n                return week.call(this, true);\n            },\n            lastDay : '[tegnap] LT[-kor]',\n            lastWeek : function () {\n                return week.call(this, false);\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s múlva',\n            past : '%s',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return hu;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var zhCn = moment.defineLocale('zh-cn', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日Ah点mm分',\n            LLLL : 'YYYY年M月D日ddddAh点mm分',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' ||\n                    meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            } else {\n                // '中午'\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天]LT',\n            nextDay : '[明天]LT',\n            nextWeek : '[下]ddddLT',\n            lastDay : '[昨天]LT',\n            lastWeek : '[上]ddddLT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '周';\n                default:\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s内',\n            past : '%s前',\n            s : '几秒',\n            ss : '%d 秒',\n            m : '1 分钟',\n            mm : '%d 分钟',\n            h : '1 小时',\n            hh : '%d 小时',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 个月',\n            MM : '%d 个月',\n            y : '1 年',\n            yy : '%d 年'\n        },\n        week : {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return zhCn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var te = moment.defineLocale('te', {\n        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),\n        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),\n        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),\n        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[నేడు] LT',\n            nextDay : '[రేపు] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[నిన్న] LT',\n            lastWeek : '[గత] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s లో',\n            past : '%s క్రితం',\n            s : 'కొన్ని క్షణాలు',\n            ss : '%d సెకన్లు',\n            m : 'ఒక నిమిషం',\n            mm : '%d నిమిషాలు',\n            h : 'ఒక గంట',\n            hh : '%d గంటలు',\n            d : 'ఒక రోజు',\n            dd : '%d రోజులు',\n            M : 'ఒక నెల',\n            MM : '%d నెలలు',\n            y : 'ఒక సంవత్సరం',\n            yy : '%d సంవత్సరాలు'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}వ/,\n        ordinal : '%dవ',\n        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'రాత్రి') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ఉదయం') {\n                return hour;\n            } else if (meridiem === 'మధ్యాహ్నం') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'సాయంత్రం') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'రాత్రి';\n            } else if (hour < 10) {\n                return 'ఉదయం';\n            } else if (hour < 17) {\n                return 'మధ్యాహ్నం';\n            } else if (hour < 20) {\n                return 'సాయంత్రం';\n            } else {\n                return 'రాత్రి';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return te;\n\n})));\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var sv = moment.defineLocale('sv', {\n        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [kl.] HH:mm',\n            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Idag] LT',\n            nextDay: '[Imorgon] LT',\n            lastDay: '[Igår] LT',\n            nextWeek: '[På] dddd LT',\n            lastWeek: '[I] dddd[s] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : 'för %s sedan',\n            s : 'några sekunder',\n            ss : '%d sekunder',\n            m : 'en minut',\n            mm : '%d minuter',\n            h : 'en timme',\n            hh : '%d timmar',\n            d : 'en dag',\n            dd : '%d dagar',\n            M : 'en månad',\n            MM : '%d månader',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'e' :\n                (b === 1) ? 'a' :\n                (b === 2) ? 'a' :\n                (b === 3) ? 'e' : 'e';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sv;\n\n})));\n","//! moment.js language configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ugCn = moment.defineLocale('ug-cn', {\n        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n            '_'\n        ),\n        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n            '_'\n        ),\n        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(\n            '_'\n        ),\n        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',\n            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',\n            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'\n        },\n        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                meridiem === 'يېرىم كېچە' ||\n                meridiem === 'سەھەر' ||\n                meridiem === 'چۈشتىن بۇرۇن'\n            ) {\n                return hour;\n            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {\n                return hour + 12;\n            } else {\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return 'يېرىم كېچە';\n            } else if (hm < 900) {\n                return 'سەھەر';\n            } else if (hm < 1130) {\n                return 'چۈشتىن بۇرۇن';\n            } else if (hm < 1230) {\n                return 'چۈش';\n            } else if (hm < 1800) {\n                return 'چۈشتىن كېيىن';\n            } else {\n                return 'كەچ';\n            }\n        },\n        calendar: {\n            sameDay: '[بۈگۈن سائەت] LT',\n            nextDay: '[ئەتە سائەت] LT',\n            nextWeek: '[كېلەركى] dddd [سائەت] LT',\n            lastDay: '[تۆنۈگۈن] LT',\n            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%s كېيىن',\n            past: '%s بۇرۇن',\n            s: 'نەچچە سېكونت',\n            ss: '%d سېكونت',\n            m: 'بىر مىنۇت',\n            mm: '%d مىنۇت',\n            h: 'بىر سائەت',\n            hh: '%d سائەت',\n            d: 'بىر كۈن',\n            dd: '%d كۈن',\n            M: 'بىر ئاي',\n            MM: '%d ئاي',\n            y: 'بىر يىل',\n            yy: '%d يىل'\n        },\n\n        dayOfMonthOrdinalParse: /\\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '-كۈنى';\n                case 'w':\n                case 'W':\n                    return number + '-ھەپتە';\n                default:\n                    return number;\n            }\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow: 1, // Monday is the first day of the week.\n            doy: 7 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ugCn;\n\n})));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var msMy = moment.defineLocale('ms-my', {\n        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Esok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kelmarin pukul] LT',\n            lastWeek : 'dddd [lepas pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lepas',\n            s : 'beberapa saat',\n            ss : '%d saat',\n            m : 'seminit',\n            mm : '%d minit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return msMy;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var eo = moment.defineLocale('eo', {\n        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),\n        weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),\n        weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D[-a de] MMMM, YYYY',\n            LLL : 'D[-a de] MMMM, YYYY HH:mm',\n            LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'\n        },\n        meridiemParse: /[ap]\\.t\\.m/i,\n        isPM: function (input) {\n            return input.charAt(0).toLowerCase() === 'p';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'p.t.m.' : 'P.T.M.';\n            } else {\n                return isLower ? 'a.t.m.' : 'A.T.M.';\n            }\n        },\n        calendar : {\n            sameDay : '[Hodiaŭ je] LT',\n            nextDay : '[Morgaŭ je] LT',\n            nextWeek : 'dddd [je] LT',\n            lastDay : '[Hieraŭ je] LT',\n            lastWeek : '[pasinta] dddd [je] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'post %s',\n            past : 'antaŭ %s',\n            s : 'sekundoj',\n            ss : '%d sekundoj',\n            m : 'minuto',\n            mm : '%d minutoj',\n            h : 'horo',\n            hh : '%d horoj',\n            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo\n            dd : '%d tagoj',\n            M : 'monato',\n            MM : '%d monatoj',\n            y : 'jaro',\n            yy : '%d jaroj'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}a/,\n        ordinal : '%da',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return eo;\n\n})));\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'جنوري',\n        'فيبروري',\n        'مارچ',\n        'اپريل',\n        'مئي',\n        'جون',\n        'جولاءِ',\n        'آگسٽ',\n        'سيپٽمبر',\n        'آڪٽوبر',\n        'نومبر',\n        'ڊسمبر'\n    ];\n    var days = [\n        'آچر',\n        'سومر',\n        'اڱارو',\n        'اربع',\n        'خميس',\n        'جمع',\n        'ڇنڇر'\n    ];\n\n    var sd = moment.defineLocale('sd', {\n        months : months,\n        monthsShort : months,\n        weekdays : days,\n        weekdaysShort : days,\n        weekdaysMin : days,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd، D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /صبح|شام/,\n        isPM : function (input) {\n            return 'شام' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar : {\n            sameDay : '[اڄ] LT',\n            nextDay : '[سڀاڻي] LT',\n            nextWeek : 'dddd [اڳين هفتي تي] LT',\n            lastDay : '[ڪالهه] LT',\n            lastWeek : '[گزريل هفتي] dddd [تي] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s پوء',\n            past : '%s اڳ',\n            s : 'چند سيڪنڊ',\n            ss : '%d سيڪنڊ',\n            m : 'هڪ منٽ',\n            mm : '%d منٽ',\n            h : 'هڪ ڪلاڪ',\n            hh : '%d ڪلاڪ',\n            d : 'هڪ ڏينهن',\n            dd : '%d ڏينهن',\n            M : 'هڪ مهينو',\n            MM : '%d مهينا',\n            y : 'هڪ سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sd;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function relativeTimeWithMutation(number, withoutSuffix, key) {\n        var format = {\n            'mm': 'munutenn',\n            'MM': 'miz',\n            'dd': 'devezh'\n        };\n        return number + ' ' + mutation(format[key], number);\n    }\n    function specialMutationForYears(number) {\n        switch (lastNumber(number)) {\n            case 1:\n            case 3:\n            case 4:\n            case 5:\n            case 9:\n                return number + ' bloaz';\n            default:\n                return number + ' vloaz';\n        }\n    }\n    function lastNumber(number) {\n        if (number > 9) {\n            return lastNumber(number % 10);\n        }\n        return number;\n    }\n    function mutation(text, number) {\n        if (number === 2) {\n            return softMutation(text);\n        }\n        return text;\n    }\n    function softMutation(text) {\n        var mutationTable = {\n            'm': 'v',\n            'b': 'v',\n            'd': 'z'\n        };\n        if (mutationTable[text.charAt(0)] === undefined) {\n            return text;\n        }\n        return mutationTable[text.charAt(0)] + text.substring(1);\n    }\n\n    var br = moment.defineLocale('br', {\n        months : 'Genver_C\\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),\n        monthsShort : 'Gen_C\\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n        weekdays : 'Sul_Lun_Meurzh_Merc\\'her_Yaou_Gwener_Sadorn'.split('_'),\n        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h[e]mm A',\n            LTS : 'h[e]mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D [a viz] MMMM YYYY',\n            LLL : 'D [a viz] MMMM YYYY h[e]mm A',\n            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'\n        },\n        calendar : {\n            sameDay : '[Hiziv da] LT',\n            nextDay : '[Warc\\'hoazh da] LT',\n            nextWeek : 'dddd [da] LT',\n            lastDay : '[Dec\\'h da] LT',\n            lastWeek : 'dddd [paset da] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'a-benn %s',\n            past : '%s \\'zo',\n            s : 'un nebeud segondennoù',\n            ss : '%d eilenn',\n            m : 'ur vunutenn',\n            mm : relativeTimeWithMutation,\n            h : 'un eur',\n            hh : '%d eur',\n            d : 'un devezh',\n            dd : relativeTimeWithMutation,\n            M : 'ur miz',\n            MM : relativeTimeWithMutation,\n            y : 'ur bloaz',\n            yy : specialMutationForYears\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(añ|vet)/,\n        ordinal : function (number) {\n            var output = (number === 1) ? 'añ' : 'vet';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return br;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var mi = moment.defineLocale('mi', {\n        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),\n        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),\n        monthsRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,2}/i,\n        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),\n        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [i] HH:mm',\n            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'\n        },\n        calendar: {\n            sameDay: '[i teie mahana, i] LT',\n            nextDay: '[apopo i] LT',\n            nextWeek: 'dddd [i] LT',\n            lastDay: '[inanahi i] LT',\n            lastWeek: 'dddd [whakamutunga i] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'i roto i %s',\n            past: '%s i mua',\n            s: 'te hēkona ruarua',\n            ss: '%d hēkona',\n            m: 'he meneti',\n            mm: '%d meneti',\n            h: 'te haora',\n            hh: '%d haora',\n            d: 'he ra',\n            dd: '%d ra',\n            M: 'he marama',\n            MM: '%d marama',\n            y: 'he tau',\n            yy: '%d tau'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return mi;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var mk = moment.defineLocale('mk', {\n        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),\n        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay : '[Денес во] LT',\n            nextDay : '[Утре во] LT',\n            nextWeek : '[Во] dddd [во] LT',\n            lastDay : '[Вчера во] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[Изминатата] dddd [во] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[Изминатиот] dddd [во] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'после %s',\n            past : 'пред %s',\n            s : 'неколку секунди',\n            ss : '%d секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дена',\n            M : 'месец',\n            MM : '%d месеци',\n            y : 'година',\n            yy : '%d години'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return mk;\n\n})));\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var nb = moment.defineLocale('nb', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] HH:mm',\n            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[i dag kl.] LT',\n            nextDay: '[i morgen kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[i går kl.] LT',\n            lastWeek: '[forrige] dddd [kl.] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s siden',\n            s : 'noen sekunder',\n            ss : '%d sekunder',\n            m : 'ett minutt',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dager',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nb;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        0: '-ші',\n        1: '-ші',\n        2: '-ші',\n        3: '-ші',\n        4: '-ші',\n        5: '-ші',\n        6: '-шы',\n        7: '-ші',\n        8: '-ші',\n        9: '-шы',\n        10: '-шы',\n        20: '-шы',\n        30: '-шы',\n        40: '-шы',\n        50: '-ші',\n        60: '-шы',\n        70: '-ші',\n        80: '-ші',\n        90: '-шы',\n        100: '-ші'\n    };\n\n    var kk = moment.defineLocale('kk', {\n        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бүгін сағат] LT',\n            nextDay : '[Ертең сағат] LT',\n            nextWeek : 'dddd [сағат] LT',\n            lastDay : '[Кеше сағат] LT',\n            lastWeek : '[Өткен аптаның] dddd [сағат] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ішінде',\n            past : '%s бұрын',\n            s : 'бірнеше секунд',\n            ss : '%d секунд',\n            m : 'бір минут',\n            mm : '%d минут',\n            h : 'бір сағат',\n            hh : '%d сағат',\n            d : 'бір күн',\n            dd : '%d күн',\n            M : 'бір ай',\n            MM : '%d ай',\n            y : 'бір жыл',\n            yy : '%d жыл'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n        ordinal : function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return kk;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var arTn = moment.defineLocale('ar-tn', {\n        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss : '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات'\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return arTn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var it = moment.defineLocale('it', {\n        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Oggi alle] LT',\n            nextDay: '[Domani alle] LT',\n            nextWeek: 'dddd [alle] LT',\n            lastDay: '[Ieri alle] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[la scorsa] dddd [alle] LT';\n                    default:\n                        return '[lo scorso] dddd [alle] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n            },\n            past : '%s fa',\n            s : 'alcuni secondi',\n            ss : '%d secondi',\n            m : 'un minuto',\n            mm : '%d minuti',\n            h : 'un\\'ora',\n            hh : '%d ore',\n            d : 'un giorno',\n            dd : '%d giorni',\n            M : 'un mese',\n            MM : '%d mesi',\n            y : 'un anno',\n            yy : '%d anni'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return it;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var itCh = moment.defineLocale('it-ch', {\n        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Oggi alle] LT',\n            nextDay: '[Domani alle] LT',\n            nextWeek: 'dddd [alle] LT',\n            lastDay: '[Ieri alle] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[la scorsa] dddd [alle] LT';\n                    default:\n                        return '[lo scorso] dddd [alle] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n            },\n            past : '%s fa',\n            s : 'alcuni secondi',\n            ss : '%d secondi',\n            m : 'un minuto',\n            mm : '%d minuti',\n            h : 'un\\'ora',\n            hh : '%d ore',\n            d : 'un giorno',\n            dd : '%d giorni',\n            M : 'un mese',\n            MM : '%d mesi',\n            y : 'un anno',\n            yy : '%d anni'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return itCh;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enNz = moment.defineLocale('en-nz', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enNz;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');\n\n    var fy = moment.defineLocale('fy', {\n        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n        monthsParseExact : true,\n        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),\n        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),\n        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[hjoed om] LT',\n            nextDay: '[moarn om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[juster om] LT',\n            lastWeek: '[ôfrûne] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'oer %s',\n            past : '%s lyn',\n            s : 'in pear sekonden',\n            ss : '%d sekonden',\n            m : 'ien minút',\n            mm : '%d minuten',\n            h : 'ien oere',\n            hh : '%d oeren',\n            d : 'ien dei',\n            dd : '%d dagen',\n            M : 'ien moanne',\n            MM : '%d moannen',\n            y : 'ien jier',\n            yy : '%d jierren'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fy;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enIl = moment.defineLocale('en-il', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    return enIl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var sw = moment.defineLocale('sw', {\n        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),\n        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),\n        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[leo saa] LT',\n            nextDay : '[kesho saa] LT',\n            nextWeek : '[wiki ijayo] dddd [saat] LT',\n            lastDay : '[jana] LT',\n            lastWeek : '[wiki iliyopita] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s baadaye',\n            past : 'tokea %s',\n            s : 'hivi punde',\n            ss : 'sekunde %d',\n            m : 'dakika moja',\n            mm : 'dakika %d',\n            h : 'saa limoja',\n            hh : 'masaa %d',\n            d : 'siku moja',\n            dd : 'masiku %d',\n            M : 'mwezi mmoja',\n            MM : 'miezi %d',\n            y : 'mwaka mmoja',\n            yy : 'miaka %d'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return sw;\n\n})));\n","/**\n * typed-function\n *\n * Type checking for JavaScript functions\n *\n * https://github.com/josdejong/typed-function\n */\n'use strict';\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // OldNode. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like OldNode.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.typed = factory();\n  }\n}(this, function () {\n\n  function ok () {\n    return true;\n  }\n\n  function notOk () {\n    return false;\n  }\n\n  function undef () {\n    return undefined;\n  }\n\n  /**\n   * @typedef {{\n   *   params: Param[],\n   *   fn: function\n   * }} Signature\n   *\n   * @typedef {{\n   *   types: Type[],\n   *   restParam: boolean\n   * }} Param\n   *\n   * @typedef {{\n   *   name: string,\n   *   typeIndex: number,\n   *   test: function,\n   *   conversion?: ConversionDef,\n   *   conversionIndex: number,\n   * }} Type\n   *\n   * @typedef {{\n   *   from: string,\n   *   to: string,\n   *   convert: function (*) : *\n   * }} ConversionDef\n   *\n   * @typedef {{\n   *   name: string,\n   *   test: function(*) : boolean\n   * }} TypeDef\n   */\n\n  // create a new instance of typed-function\n  function create () {\n    // data type tests\n    var _types = [\n      { name: 'number',    test: function (x) { return typeof x === 'number' } },\n      { name: 'string',    test: function (x) { return typeof x === 'string' } },\n      { name: 'boolean',   test: function (x) { return typeof x === 'boolean' } },\n      { name: 'Function',  test: function (x) { return typeof x === 'function'} },\n      { name: 'Array',     test: Array.isArray },\n      { name: 'Date',      test: function (x) { return x instanceof Date } },\n      { name: 'RegExp',    test: function (x) { return x instanceof RegExp } },\n      { name: 'Object',    test: function (x) {\n        return typeof x === 'object' && x.constructor === Object\n      }},\n      { name: 'null',      test: function (x) { return x === null } },\n      { name: 'undefined', test: function (x) { return x === undefined } }\n    ];\n\n    var anyType = {\n      name: 'any',\n      test: ok\n    }\n\n    // types which need to be ignored\n    var _ignore = [];\n\n    // type conversions\n    var _conversions = [];\n\n    // This is a temporary object, will be replaced with a typed function at the end\n    var typed = {\n      types: _types,\n      conversions: _conversions,\n      ignore: _ignore\n    };\n\n    /**\n     * Find the test function for a type\n     * @param {String} typeName\n     * @return {TypeDef} Returns the type definition when found,\n     *                    Throws a TypeError otherwise\n     */\n    function findTypeByName (typeName) {\n      var entry = findInArray(typed.types, function (entry) {\n        return entry.name === typeName;\n      });\n\n      if (entry) {\n        return entry;\n      }\n\n      if (typeName === 'any') { // special baked-in case 'any'\n        return anyType;\n      }\n\n      var hint = findInArray(typed.types, function (entry) {\n        return entry.name.toLowerCase() === typeName.toLowerCase();\n      });\n\n      throw new TypeError('Unknown type \"' + typeName + '\"' +\n          (hint ? ('. Did you mean \"' + hint.name + '\"?') : ''));\n    }\n\n    /**\n     * Find the index of a type definition. Handles special case 'any'\n     * @param {TypeDef} type\n     * @return {number}\n     */\n    function findTypeIndex(type) {\n      if (type === anyType) {\n        return 999;\n      }\n\n      return typed.types.indexOf(type);\n    }\n\n    /**\n     * Find a type that matches a value.\n     * @param {*} value\n     * @return {string} Returns the name of the first type for which\n     *                  the type test matches the value.\n     */\n    function findTypeName(value) {\n      var entry = findInArray(typed.types, function (entry) {\n        return entry.test(value);\n      });\n\n      if (entry) {\n        return entry.name;\n      }\n\n      throw new TypeError('Value has unknown type. Value: ' + value);\n    }\n\n    /**\n     * Find a specific signature from a (composed) typed function, for example:\n     *\n     *   typed.find(fn, ['number', 'string'])\n     *   typed.find(fn, 'number, string')\n     *\n     * Function find only only works for exact matches.\n     *\n     * @param {Function} fn                   A typed-function\n     * @param {string | string[]} signature   Signature to be found, can be\n     *                                        an array or a comma separated string.\n     * @return {Function}                     Returns the matching signature, or\n     *                                        throws an error when no signature\n     *                                        is found.\n     */\n    function find (fn, signature) {\n      if (!fn.signatures) {\n        throw new TypeError('Function is no typed-function');\n      }\n\n      // normalize input\n      var arr;\n      if (typeof signature === 'string') {\n        arr = signature.split(',');\n        for (var i = 0; i < arr.length; i++) {\n          arr[i] = arr[i].trim();\n        }\n      }\n      else if (Array.isArray(signature)) {\n        arr = signature;\n      }\n      else {\n        throw new TypeError('String array or a comma separated string expected');\n      }\n\n      var str = arr.join(',');\n\n      // find an exact match\n      var match = fn.signatures[str];\n      if (match) {\n        return match;\n      }\n\n      // TODO: extend find to match non-exact signatures\n\n      throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + arr.join(', ') + '))');\n    }\n\n    /**\n     * Convert a given value to another data type.\n     * @param {*} value\n     * @param {string} type\n     */\n    function convert (value, type) {\n      var from = findTypeName(value);\n\n      // check conversion is needed\n      if (type === from) {\n        return value;\n      }\n\n      for (var i = 0; i < typed.conversions.length; i++) {\n        var conversion = typed.conversions[i];\n        if (conversion.from === from && conversion.to === type) {\n          return conversion.convert(value);\n        }\n      }\n\n      throw new Error('Cannot convert from ' + from + ' to ' + type);\n    }\n    \n    /**\n     * Stringify parameters in a normalized way\n     * @param {Param[]} params\n     * @return {string}\n     */\n    function stringifyParams (params) {\n      return params\n          .map(function (param) {\n            var typeNames = param.types.map(getTypeName);\n\n            return (param.restParam ? '...' : '') + typeNames.join('|');\n          })\n          .join(',');\n    }\n\n    /**\n     * Parse a parameter, like \"...number | boolean\"\n     * @param {string} param\n     * @param {ConversionDef[]} conversions\n     * @return {Param} param\n     */\n    function parseParam (param, conversions) {\n      var restParam = param.indexOf('...') === 0;\n      var types = (!restParam)\n          ? param\n          : (param.length > 3)\n              ? param.slice(3)\n              : 'any';\n\n      var typeNames = types.split('|').map(trim)\n          .filter(notEmpty)\n          .filter(notIgnore);\n\n      var matchingConversions = filterConversions(conversions, typeNames);\n\n      var exactTypes = typeNames.map(function (typeName) {\n        var type = findTypeByName(typeName);\n\n        return {\n          name: typeName,\n          typeIndex: findTypeIndex(type),\n          test: type.test,\n          conversion: null,\n          conversionIndex: -1\n        };\n      });\n\n      var convertibleTypes = matchingConversions.map(function (conversion) {\n        var type = findTypeByName(conversion.from);\n\n        return {\n          name: conversion.from,\n          typeIndex: findTypeIndex(type),\n          test: type.test,\n          conversion: conversion,\n          conversionIndex: conversions.indexOf(conversion)\n        };\n      });\n\n      return {\n        types: exactTypes.concat(convertibleTypes),\n        restParam: restParam\n      };\n    }\n\n    /**\n     * Parse a signature with comma separated parameters,\n     * like \"number | boolean, ...string\"\n     * @param {string} signature\n     * @param {function} fn\n     * @param {ConversionDef[]} conversions\n     * @return {Signature | null} signature\n     */\n    function parseSignature (signature, fn, conversions) {\n      var params = [];\n\n      if (signature.trim() !== '') {\n        params = signature\n            .split(',')\n            .map(trim)\n            .map(function (param, index, array) {\n              var parsedParam = parseParam(param, conversions);\n\n              if (parsedParam.restParam && (index !== array.length - 1)) {\n                throw new SyntaxError('Unexpected rest parameter \"' + param + '\": ' +\n                    'only allowed for the last parameter');\n              }\n\n              return parsedParam;\n          });\n      }\n\n      if (params.some(isInvalidParam)) {\n        // invalid signature: at least one parameter has no types\n        // (they may have been filtered)\n        return null;\n      }\n\n      return {\n        params: params,\n        fn: fn\n      };\n    }\n\n    /**\n     * Test whether a set of params contains a restParam\n     * @param {Param[]} params\n     * @return {boolean} Returns true when the last parameter is a restParam\n     */\n    function hasRestParam(params) {\n      var param = last(params)\n      return param ? param.restParam : false;\n    }\n\n    /**\n     * Test whether a parameter contains conversions\n     * @param {Param} param\n     * @return {boolean} Returns true when at least one of the parameters\n     *                   contains a conversion.\n     */\n    function hasConversions(param) {\n      return param.types.some(function (type) {\n        return type.conversion != null;\n      });\n    }\n\n    /**\n     * Create a type test for a single parameter, which can have one or multiple\n     * types.\n     * @param {Param} param\n     * @return {function(x: *) : boolean} Returns a test function\n     */\n    function compileTest(param) {\n      if (!param || param.types.length === 0) {\n        // nothing to do\n        return ok;\n      }\n      else if (param.types.length === 1) {\n        return findTypeByName(param.types[0].name).test;\n      }\n      else if (param.types.length === 2) {\n        var test0 = findTypeByName(param.types[0].name).test;\n        var test1 = findTypeByName(param.types[1].name).test;\n        return function or(x) {\n          return test0(x) || test1(x);\n        }\n      }\n      else { // param.types.length > 2\n        var tests = param.types.map(function (type) {\n          return findTypeByName(type.name).test;\n        })\n        return function or(x) {\n          for (var i = 0; i < tests.length; i++) {\n            if (tests[i](x)) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n    }\n\n    /**\n     * Create a test for all parameters of a signature\n     * @param {Param[]} params\n     * @return {function(args: Array<*>) : boolean}\n     */\n    function compileTests(params) {\n      var tests, test0, test1;\n\n      if (hasRestParam(params)) {\n        // variable arguments like '...number'\n        tests = initial(params).map(compileTest);\n        var varIndex = tests.length;\n        var lastTest = compileTest(last(params));\n        var testRestParam = function (args) {\n          for (var i = varIndex; i < args.length; i++) {\n            if (!lastTest(args[i])) {\n              return false;\n            }\n          }\n          return true;\n        }\n\n        return function testArgs(args) {\n          for (var i = 0; i < tests.length; i++) {\n            if (!tests[i](args[i])) {\n              return false;\n            }\n          }\n          return testRestParam(args) && (args.length >= varIndex + 1);\n        };\n      }\n      else {\n        // no variable arguments\n        if (params.length === 0) {\n          return function testArgs(args) {\n            return args.length === 0;\n          };\n        }\n        else if (params.length === 1) {\n          test0 = compileTest(params[0]);\n          return function testArgs(args) {\n            return test0(args[0]) && args.length === 1;\n          };\n        }\n        else if (params.length === 2) {\n          test0 = compileTest(params[0]);\n          test1 = compileTest(params[1]);\n          return function testArgs(args) {\n            return test0(args[0]) && test1(args[1]) && args.length === 2;\n          };\n        }\n        else { // arguments.length > 2\n          tests = params.map(compileTest);\n          return function testArgs(args) {\n            for (var i = 0; i < tests.length; i++) {\n              if (!tests[i](args[i])) {\n                return false;\n              }\n            }\n            return args.length === tests.length;\n          };\n        }\n      }\n    }\n\n    /**\n     * Find the parameter at a specific index of a signature.\n     * Handles rest parameters.\n     * @param {Signature} signature\n     * @param {number} index\n     * @return {Param | null} Returns the matching parameter when found,\n     *                        null otherwise.\n     */\n    function getParamAtIndex(signature, index) {\n      return index < signature.params.length\n          ? signature.params[index]\n          : hasRestParam(signature.params)\n              ? last(signature.params)\n              : null\n    }\n\n    /**\n     * Get all type names of a parameter\n     * @param {Signature} signature\n     * @param {number} index\n     * @param {boolean} excludeConversions\n     * @return {string[]} Returns an array with type names\n     */\n    function getExpectedTypeNames (signature, index, excludeConversions) {\n      var param = getParamAtIndex(signature, index);\n      var types = param\n          ? excludeConversions\n                  ? param.types.filter(isExactType)\n                  : param.types\n          : [];\n\n      return types.map(getTypeName);\n    }\n\n    /**\n     * Returns the name of a type\n     * @param {Type} type\n     * @return {string} Returns the type name\n     */\n    function getTypeName(type) {\n      return type.name;\n    }\n\n    /**\n     * Test whether a type is an exact type or conversion\n     * @param {Type} type\n     * @return {boolean} Returns true when\n     */\n    function isExactType(type) {\n      return type.conversion === null || type.conversion === undefined;\n    }\n\n    /**\n     * Helper function for creating error messages: create an array with\n     * all available types on a specific argument index.\n     * @param {Signature[]} signatures\n     * @param {number} index\n     * @return {string[]} Returns an array with available types\n     */\n    function mergeExpectedParams(signatures, index) {\n      var typeNames = uniq(flatMap(signatures, function (signature) {\n        return getExpectedTypeNames(signature, index, false);\n      }));\n\n      return (typeNames.indexOf('any') !== -1) ? ['any'] : typeNames;\n    }\n\n    /**\n     * Create\n     * @param {string} name             The name of the function\n     * @param {array.<*>} args          The actual arguments passed to the function\n     * @param {Signature[]} signatures  A list with available signatures\n     * @return {TypeError} Returns a type error with additional data\n     *                     attached to it in the property `data`\n     */\n    function createError(name, args, signatures) {\n      var err, expected;\n      var _name = name || 'unnamed';\n\n      // test for wrong type at some index\n      var matchingSignatures = signatures;\n      var index;\n      for (index = 0; index < args.length; index++) {\n        var nextMatchingDefs = matchingSignatures.filter(function (signature) {\n          var test = compileTest(getParamAtIndex(signature, index));\n          return (index < signature.params.length || hasRestParam(signature.params)) &&\n              test(args[index]);\n        });\n\n        if (nextMatchingDefs.length === 0) {\n          // no matching signatures anymore, throw error \"wrong type\"\n          expected = mergeExpectedParams(matchingSignatures, index);\n          if (expected.length > 0) {\n            var actualType = findTypeName(args[index]);\n\n            err = new TypeError('Unexpected type of argument in function ' + _name +\n                ' (expected: ' + expected.join(' or ') +\n                ', actual: ' + actualType + ', index: ' + index + ')');\n            err.data = {\n              category: 'wrongType',\n              fn: _name,\n              index: index,\n              actual: actualType,\n              expected: expected\n            }\n            return err;\n          }\n        }\n        else {\n          matchingSignatures = nextMatchingDefs;\n        }\n      }\n\n      // test for too few arguments\n      var lengths = matchingSignatures.map(function (signature) {\n        return hasRestParam(signature.params) ? Infinity : signature.params.length;\n      });\n      if (args.length < Math.min.apply(null, lengths)) {\n        expected = mergeExpectedParams(matchingSignatures, index);\n        err = new TypeError('Too few arguments in function ' + _name +\n            ' (expected: ' + expected.join(' or ') +\n            ', index: ' + args.length + ')');\n        err.data = {\n          category: 'tooFewArgs',\n          fn: _name,\n          index: args.length,\n          expected: expected\n        }\n        return err;\n      }\n\n      // test for too many arguments\n      var maxLength = Math.max.apply(null, lengths);\n      if (args.length > maxLength) {\n        err = new TypeError('Too many arguments in function ' + _name +\n            ' (expected: ' + maxLength + ', actual: ' + args.length + ')');\n        err.data = {\n          category: 'tooManyArgs',\n          fn: _name,\n          index: args.length,\n          expectedLength: maxLength\n        }\n        return err;\n      }\n\n      err = new TypeError('Arguments of type \"' + args.join(', ') +\n          '\" do not match any of the defined signatures of function ' + _name + '.');\n      err.data = {\n        category: 'mismatch',\n        actual: args.map(findTypeName)\n      }\n      return err;\n    }\n\n    /**\n     * Find the lowest index of all exact types of a parameter (no conversions)\n     * @param {Param} param\n     * @return {number} Returns the index of the lowest type in typed.types\n     */\n    function getLowestTypeIndex (param) {\n      var min = 999;\n\n      for (var i = 0; i < param.types.length; i++) {\n        if (isExactType(param.types[i])) {\n          min = Math.min(min, param.types[i].typeIndex);\n        }\n      }\n\n      return min;\n    }\n\n    /**\n     * Find the lowest index of the conversion of all types of the parameter\n     * having a conversion\n     * @param {Param} param\n     * @return {number} Returns the lowest index of the conversions of this type\n     */\n    function getLowestConversionIndex (param) {\n      var min = 999;\n\n      for (var i = 0; i < param.types.length; i++) {\n        if (!isExactType(param.types[i])) {\n          min = Math.min(min, param.types[i].conversionIndex);\n        }\n      }\n\n      return min;\n    }\n\n    /**\n     * Compare two params\n     * @param {Param} param1\n     * @param {Param} param2\n     * @return {number} returns a negative number when param1 must get a lower\n     *                  index than param2, a positive number when the opposite,\n     *                  or zero when both are equal\n     */\n    function compareParams (param1, param2) {\n      var c;\n\n      // compare having a rest parameter or not\n      c = param1.restParam - param2.restParam;\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare having conversions or not\n      c = hasConversions(param1) - hasConversions(param2);\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare the index of the types\n      c = getLowestTypeIndex(param1) - getLowestTypeIndex(param2);\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare the index of any conversion\n      return getLowestConversionIndex(param1) - getLowestConversionIndex(param2);\n    }\n\n    /**\n     * Compare two signatures\n     * @param {Signature} signature1\n     * @param {Signature} signature2\n     * @return {number} returns a negative number when param1 must get a lower\n     *                  index than param2, a positive number when the opposite,\n     *                  or zero when both are equal\n     */\n    function compareSignatures (signature1, signature2) {\n      var len = Math.min(signature1.params.length, signature2.params.length);\n      var i;\n      var c;\n\n      // compare whether the params have conversions at all or not\n      c = signature1.params.some(hasConversions) - signature2.params.some(hasConversions)\n      if (c !== 0) {\n        return c;\n      }\n\n      // next compare whether the params have conversions one by one\n      for (i = 0; i < len; i++) {\n        c = hasConversions(signature1.params[i]) - hasConversions(signature2.params[i]);\n        if (c !== 0) {\n          return c;\n        }\n      }\n\n      // compare the types of the params one by one\n      for (i = 0; i < len; i++) {\n        c = compareParams(signature1.params[i], signature2.params[i]);\n        if (c !== 0) {\n          return c;\n        }\n      }\n\n      // compare the number of params\n      return signature1.params.length - signature2.params.length;\n    }\n\n    /**\n     * Get params containing all types that can be converted to the defined types.\n     *\n     * @param {ConversionDef[]} conversions\n     * @param {string[]} typeNames\n     * @return {ConversionDef[]} Returns the conversions that are available\n     *                        for every type (if any)\n     */\n    function filterConversions(conversions, typeNames) {\n      var matches = {};\n\n      conversions.forEach(function (conversion) {\n        if (typeNames.indexOf(conversion.from) === -1 &&\n            typeNames.indexOf(conversion.to) !== -1 &&\n            !matches[conversion.from]) {\n          matches[conversion.from] = conversion;\n        }\n      });\n\n      return Object.keys(matches).map(function (from) {\n        return matches[from];\n      });\n    }\n\n    /**\n     * Preprocess arguments before calling the original function:\n     * - if needed convert the parameters\n     * - in case of rest parameters, move the rest parameters into an Array\n     * @param {Param[]} params\n     * @param {function} fn\n     * @return {function} Returns a wrapped function\n     */\n    function compileArgsPreprocessing(params, fn) {\n      var fnConvert = fn;\n\n      // TODO: can we make this wrapper function smarter/simpler?\n\n      if (params.some(hasConversions)) {\n        var restParam = hasRestParam(params);\n        var compiledConversions = params.map(compileArgConversion)\n\n        fnConvert = function convertArgs() {\n          var args = [];\n          var last = restParam ? arguments.length - 1 : arguments.length;\n          for (var i = 0; i < last; i++) {\n            args[i] = compiledConversions[i](arguments[i]);\n          }\n          if (restParam) {\n            args[last] = arguments[last].map(compiledConversions[last]);\n          }\n\n          return fn.apply(null, args);\n        }\n      }\n\n      var fnPreprocess = fnConvert;\n      if (hasRestParam(params)) {\n        var offset = params.length - 1;\n\n        fnPreprocess = function preprocessRestParams () {\n          return fnConvert.apply(null,\n              slice(arguments, 0, offset).concat([slice(arguments, offset)]));\n        }\n      }\n\n      return fnPreprocess;\n    }\n\n    /**\n     * Compile conversion for a parameter to the right type\n     * @param {Param} param\n     * @return {function} Returns the wrapped function that will convert arguments\n     *\n     */\n    function compileArgConversion(param) {\n      var test0, test1, conversion0, conversion1;\n      var tests = [];\n      var conversions = [];\n\n      param.types.forEach(function (type) {\n        if (type.conversion) {\n          tests.push(findTypeByName(type.conversion.from).test);\n          conversions.push(type.conversion.convert);\n        }\n      });\n\n      // create optimized conversion functions depending on the number of conversions\n      switch (conversions.length) {\n        case 0:\n          return function convertArg(arg) {\n            return arg;\n          }\n\n        case 1:\n          test0 = tests[0]\n          conversion0 = conversions[0];\n          return function convertArg(arg) {\n            if (test0(arg)) {\n              return conversion0(arg)\n            }\n            return arg;\n          }\n\n        case 2:\n          test0 = tests[0]\n          test1 = tests[1]\n          conversion0 = conversions[0];\n          conversion1 = conversions[1];\n          return function convertArg(arg) {\n            if (test0(arg)) {\n              return conversion0(arg)\n            }\n            if (test1(arg)) {\n              return conversion1(arg)\n            }\n            return arg;\n          }\n\n        default:\n          return function convertArg(arg) {\n            for (var i = 0; i < conversions.length; i++) {\n              if (tests[i](arg)) {\n                return conversions[i](arg);\n              }\n            }\n            return arg;\n          }\n      }\n    }\n\n    /**\n     * Convert an array with signatures into a map with signatures,\n     * where signatures with union types are split into separate signatures\n     *\n     * Throws an error when there are conflicting types\n     *\n     * @param {Signature[]} signatures\n     * @return {Object.<string, function>}  Returns a map with signatures\n     *                                      as key and the original function\n     *                                      of this signature as value.\n     */\n    function createSignaturesMap(signatures) {\n      var signaturesMap = {};\n      signatures.forEach(function (signature) {\n        if (!signature.params.some(hasConversions)) {\n          splitParams(signature.params, true).forEach(function (params) {\n            signaturesMap[stringifyParams(params)] = signature.fn;\n          });\n        }\n      });\n\n      return signaturesMap;\n    }\n\n    /**\n     * Split params with union types in to separate params.\n     *\n     * For example:\n     *\n     *     splitParams([['Array', 'Object'], ['string', 'RegExp'])\n     *     // returns:\n     *     // [\n     *     //   ['Array', 'string'],\n     *     //   ['Array', 'RegExp'],\n     *     //   ['Object', 'string'],\n     *     //   ['Object', 'RegExp']\n     *     // ]\n     *\n     * @param {Param[]} params\n     * @param {boolean} ignoreConversionTypes\n     * @return {Param[]}\n     */\n    function splitParams(params, ignoreConversionTypes) {\n      function _splitParams(params, index, types) {\n        if (index < params.length) {\n          var param = params[index]\n          var filteredTypes = ignoreConversionTypes\n              ? param.types.filter(isExactType)\n              : param.types;\n          var typeGroups\n\n          if (param.restParam) {\n            // split the types of a rest parameter in two:\n            // one with only exact types, and one with exact types and conversions\n            var exactTypes = filteredTypes.filter(isExactType)\n            typeGroups = exactTypes.length < filteredTypes.length\n                ? [exactTypes, filteredTypes]\n                : [filteredTypes]\n\n          }\n          else {\n            // split all the types of a regular parameter into one type per group\n            typeGroups = filteredTypes.map(function (type) {\n              return [type]\n            })\n          }\n\n          // recurse over the groups with types\n          return flatMap(typeGroups, function (typeGroup) {\n            return _splitParams(params, index + 1, types.concat([typeGroup]));\n          });\n\n        }\n        else {\n          // we've reached the end of the parameters. Now build a new Param\n          var splittedParams = types.map(function (type, typeIndex) {\n            return {\n              types: type,\n              restParam: (typeIndex === params.length - 1) && hasRestParam(params)\n            }\n          });\n\n          return [splittedParams];\n        }\n      }\n\n      return _splitParams(params, 0, []);\n    }\n\n    /**\n     * Test whether two signatures have a conflicting signature\n     * @param {Signature} signature1\n     * @param {Signature} signature2\n     * @return {boolean} Returns true when the signatures conflict, false otherwise.\n     */\n    function hasConflictingParams(signature1, signature2) {\n      var ii = Math.max(signature1.params.length, signature2.params.length);\n\n      for (var i = 0; i < ii; i++) {\n        var typesNames1 = getExpectedTypeNames(signature1, i, true);\n        var typesNames2 = getExpectedTypeNames(signature2, i, true);\n\n        if (!hasOverlap(typesNames1, typesNames2)) {\n          return false;\n        }\n      }\n\n      var len1 = signature1.params.length;\n      var len2 = signature2.params.length;\n      var restParam1 = hasRestParam(signature1.params);\n      var restParam2 = hasRestParam(signature2.params);\n\n      return restParam1\n          ? restParam2 ? (len1 === len2) : (len2 >= len1)\n          : restParam2 ? (len1 >= len2)  : (len1 === len2)\n    }\n\n    /**\n     * Create a typed function\n     * @param {String} name               The name for the typed function\n     * @param {Object.<string, function>} signaturesMap\n     *                                    An object with one or\n     *                                    multiple signatures as key, and the\n     *                                    function corresponding to the\n     *                                    signature as value.\n     * @return {function}  Returns the created typed function.\n     */\n    function createTypedFunction(name, signaturesMap) {\n      if (Object.keys(signaturesMap).length === 0) {\n        throw new SyntaxError('No signatures provided');\n      }\n\n      // parse the signatures, and check for conflicts\n      var parsedSignatures = [];\n      Object.keys(signaturesMap)\n          .map(function (signature) {\n            return parseSignature(signature, signaturesMap[signature], typed.conversions);\n          })\n          .filter(notNull)\n          .forEach(function (parsedSignature) {\n            // check whether this parameter conflicts with already parsed signatures\n            var conflictingSignature = findInArray(parsedSignatures, function (s) {\n              return hasConflictingParams(s, parsedSignature)\n            });\n            if (conflictingSignature) {\n              throw new TypeError('Conflicting signatures \"' +\n                  stringifyParams(conflictingSignature.params) + '\" and \"' +\n                  stringifyParams(parsedSignature.params) + '\".');\n            }\n\n            parsedSignatures.push(parsedSignature);\n          });\n\n      // split and filter the types of the signatures, and then order them\n      var signatures = flatMap(parsedSignatures, function (parsedSignature) {\n        var params = parsedSignature ? splitParams(parsedSignature.params, false) : []\n\n        return params.map(function (params) {\n          return {\n            params: params,\n            fn: parsedSignature.fn\n          };\n        });\n      }).filter(notNull);\n\n      signatures.sort(compareSignatures);\n\n      // we create a highly optimized checks for the first couple of signatures with max 2 arguments\n      var ok0 = signatures[0] && signatures[0].params.length <= 2 && !hasRestParam(signatures[0].params);\n      var ok1 = signatures[1] && signatures[1].params.length <= 2 && !hasRestParam(signatures[1].params);\n      var ok2 = signatures[2] && signatures[2].params.length <= 2 && !hasRestParam(signatures[2].params);\n      var ok3 = signatures[3] && signatures[3].params.length <= 2 && !hasRestParam(signatures[3].params);\n      var ok4 = signatures[4] && signatures[4].params.length <= 2 && !hasRestParam(signatures[4].params);\n      var ok5 = signatures[5] && signatures[5].params.length <= 2 && !hasRestParam(signatures[5].params);\n      var allOk = ok0 && ok1 && ok2 && ok3 && ok4 && ok5;\n\n      // compile the tests\n      var tests = signatures.map(function (signature) {\n        return compileTests(signature.params);\n      });\n\n      var test00 = ok0 ? compileTest(signatures[0].params[0]) : notOk;\n      var test10 = ok1 ? compileTest(signatures[1].params[0]) : notOk;\n      var test20 = ok2 ? compileTest(signatures[2].params[0]) : notOk;\n      var test30 = ok3 ? compileTest(signatures[3].params[0]) : notOk;\n      var test40 = ok4 ? compileTest(signatures[4].params[0]) : notOk;\n      var test50 = ok5 ? compileTest(signatures[5].params[0]) : notOk;\n\n      var test01 = ok0 ? compileTest(signatures[0].params[1]) : notOk;\n      var test11 = ok1 ? compileTest(signatures[1].params[1]) : notOk;\n      var test21 = ok2 ? compileTest(signatures[2].params[1]) : notOk;\n      var test31 = ok3 ? compileTest(signatures[3].params[1]) : notOk;\n      var test41 = ok4 ? compileTest(signatures[4].params[1]) : notOk;\n      var test51 = ok5 ? compileTest(signatures[5].params[1]) : notOk;\n\n      // compile the functions\n      var fns = signatures.map(function(signature) {\n        return compileArgsPreprocessing(signature.params, signature.fn)\n      });\n\n      var fn0 = ok0 ? fns[0] : undef;\n      var fn1 = ok1 ? fns[1] : undef;\n      var fn2 = ok2 ? fns[2] : undef;\n      var fn3 = ok3 ? fns[3] : undef;\n      var fn4 = ok4 ? fns[4] : undef;\n      var fn5 = ok5 ? fns[5] : undef;\n\n      var len0 = ok0 ? signatures[0].params.length : -1;\n      var len1 = ok1 ? signatures[1].params.length : -1;\n      var len2 = ok2 ? signatures[2].params.length : -1;\n      var len3 = ok3 ? signatures[3].params.length : -1;\n      var len4 = ok4 ? signatures[4].params.length : -1;\n      var len5 = ok5 ? signatures[5].params.length : -1;\n\n      // simple and generic, but also slow\n      var iStart = allOk ? 6 : 0;\n      var iEnd = signatures.length;\n      var generic = function generic() {\n        'use strict';\n\n        for (var i = iStart; i < iEnd; i++) {\n          if (tests[i](arguments)) {\n            return fns[i].apply(null, arguments);\n          }\n        }\n\n        throw createError(name, arguments, signatures);\n      }\n\n      // create the typed function\n      // fast, specialized version. Falls back to the slower, generic one if needed\n      var fn = function fn(arg0, arg1) {\n        'use strict';\n\n        if (arguments.length === len0 && test00(arg0) && test01(arg1)) { return fn0.apply(null, arguments); }\n        if (arguments.length === len1 && test10(arg0) && test11(arg1)) { return fn1.apply(null, arguments); }\n        if (arguments.length === len2 && test20(arg0) && test21(arg1)) { return fn2.apply(null, arguments); }\n        if (arguments.length === len3 && test30(arg0) && test31(arg1)) { return fn3.apply(null, arguments); }\n        if (arguments.length === len4 && test40(arg0) && test41(arg1)) { return fn4.apply(null, arguments); }\n        if (arguments.length === len5 && test50(arg0) && test51(arg1)) { return fn5.apply(null, arguments); }\n\n        return generic.apply(null, arguments);\n      }\n\n      // attach name the typed function\n      try {\n        Object.defineProperty(fn, 'name', {value: name});\n      }\n      catch (err) {\n        // old browsers do not support Object.defineProperty and some don't support setting the name property\n        // the function name is not essential for the functioning, it's mostly useful for debugging,\n        // so it's fine to have unnamed functions.\n      }\n\n      // attach signatures to the function\n      fn.signatures = createSignaturesMap(signatures);\n\n      return fn;\n    }\n\n    /**\n     * Test whether a type should be NOT be ignored\n     * @param {string} typeName\n     * @return {boolean}\n     */\n    function notIgnore(typeName) {\n      return typed.ignore.indexOf(typeName) === -1;\n    }\n\n    /**\n     * trim a string\n     * @param {string} str\n     * @return {string}\n     */\n    function trim(str) {\n      return str.trim();\n    }\n\n    /**\n     * Test whether a string is not empty\n     * @param {string} str\n     * @return {boolean}\n     */\n    function notEmpty(str) {\n      return !!str;\n    }\n\n    /**\n     * test whether a value is not strict equal to null\n     * @param {*} value\n     * @return {boolean}\n     */\n    function notNull(value) {\n      return value !== null;\n    }\n\n    /**\n     * Test whether a parameter has no types defined\n     * @param {Param} param\n     * @return {boolean}\n     */\n    function isInvalidParam (param) {\n      return param.types.length === 0;\n    }\n\n    /**\n     * Return all but the last items of an array\n     * @param {Array} arr\n     * @return {Array}\n     */\n    function initial(arr) {\n      return arr.slice(0, arr.length - 1);\n    }\n\n    /**\n     * return the last item of an array\n     * @param {Array} arr\n     * @return {*}\n     */\n    function last(arr) {\n      return arr[arr.length - 1];\n    }\n\n    /**\n     * Slice an array or function Arguments\n     * @param {Array | Arguments | IArguments} arr\n     * @param {number} start\n     * @param {number} [end]\n     * @return {Array}\n     */\n    function slice(arr, start, end) {\n      return Array.prototype.slice.call(arr, start, end);\n    }\n\n    /**\n     * Test whether an array contains some item\n     * @param {Array} array\n     * @param {*} item\n     * @return {boolean} Returns true if array contains item, false if not.\n     */\n    function contains(array, item) {\n      return array.indexOf(item) !== -1;\n    }\n\n    /**\n     * Test whether two arrays have overlapping items\n     * @param {Array} array1\n     * @param {Array} array2\n     * @return {boolean} Returns true when at least one item exists in both arrays\n     */\n    function hasOverlap(array1, array2) {\n      for (var i = 0; i < array1.length; i++) {\n        if (contains(array2, array1[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Return the first item from an array for which test(arr[i]) returns true\n     * @param {Array} arr\n     * @param {function} test\n     * @return {* | undefined} Returns the first matching item\n     *                         or undefined when there is no match\n     */\n    function findInArray(arr, test) {\n      for (var i = 0; i < arr.length; i++) {\n        if (test(arr[i])) {\n          return arr[i];\n        }\n      }\n      return undefined;\n    }\n\n    /**\n     * Filter unique items of an array with strings\n     * @param {string[]} arr\n     * @return {string[]}\n     */\n    function uniq(arr) {\n      var entries = {}\n      for (var i = 0; i < arr.length; i++) {\n        entries[arr[i]] = true;\n      }\n      return Object.keys(entries);\n    }\n\n    /**\n     * Flat map the result invoking a callback for every item in an array.\n     * https://gist.github.com/samgiles/762ee337dff48623e729\n     * @param {Array} arr\n     * @param {function} callback\n     * @return {Array}\n     */\n    function flatMap(arr, callback) {\n      return Array.prototype.concat.apply([], arr.map(callback));\n    }\n\n    /**\n     * Retrieve the function name from a set of typed functions,\n     * and check whether the name of all functions match (if given)\n     * @param {function[]} fns\n     */\n    function getName (fns) {\n      var name = '';\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // check whether the names are the same when defined\n        if ((typeof fn.signatures === 'object' || typeof fn.signature === 'string') && fn.name !== '') {\n          if (name === '') {\n            name = fn.name;\n          }\n          else if (name !== fn.name) {\n            var err = new Error('Function names do not match (expected: ' + name + ', actual: ' + fn.name + ')');\n            err.data = {\n              actual: fn.name,\n              expected: name\n            };\n            throw err;\n          }\n        }\n      }\n\n      return name;\n    }\n\n    // extract and merge all signatures of a list with typed functions\n    function extractSignatures(fns) {\n      var err;\n      var signaturesMap = {};\n\n      function validateUnique(_signature, _fn) {\n        if (signaturesMap.hasOwnProperty(_signature) && _fn !== signaturesMap[_signature]) {\n          err = new Error('Signature \"' + _signature + '\" is defined twice');\n          err.data = {signature: _signature};\n          throw err;\n          // else: both signatures point to the same function, that's fine\n        }\n      }\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // test whether this is a typed-function\n        if (typeof fn.signatures === 'object') {\n          // merge the signatures\n          for (var signature in fn.signatures) {\n            if (fn.signatures.hasOwnProperty(signature)) {\n              validateUnique(signature, fn.signatures[signature]);\n              signaturesMap[signature] = fn.signatures[signature];\n            }\n          }\n        }\n        else if (typeof fn.signature === 'string') {\n          validateUnique(fn.signature, fn);\n          signaturesMap[fn.signature] = fn;\n        }\n        else {\n          err = new TypeError('Function is no typed-function (index: ' + i + ')');\n          err.data = {index: i};\n          throw err;\n        }\n      }\n\n      return signaturesMap;\n    }\n\n    typed = createTypedFunction('typed', {\n      'string, Object': createTypedFunction,\n      'Object': function (signaturesMap) {\n        // find existing name\n        var fns = [];\n        for (var signature in signaturesMap) {\n          if (signaturesMap.hasOwnProperty(signature)) {\n            fns.push(signaturesMap[signature]);\n          }\n        }\n        var name = getName(fns);\n        return createTypedFunction(name, signaturesMap);\n      },\n      '...Function': function (fns) {\n        return createTypedFunction(getName(fns), extractSignatures(fns));\n      },\n      'string, ...Function': function (name, fns) {\n        return createTypedFunction(name, extractSignatures(fns));\n      }\n    });\n\n    typed.create = create;\n    typed.types = _types;\n    typed.conversions = _conversions;\n    typed.ignore = _ignore;\n    typed.convert = convert;\n    typed.find = find;\n\n    /**\n     * add a type\n     * @param {{name: string, test: function}} type\n     * @param {boolean} [beforeObjectTest=true]\n     *                          If true, the new test will be inserted before\n     *                          the test with name 'Object' (if any), since\n     *                          tests for Object match Array and classes too.\n     */\n    typed.addType = function (type, beforeObjectTest) {\n      if (!type || typeof type.name !== 'string' || typeof type.test !== 'function') {\n        throw new TypeError('Object with properties {name: string, test: function} expected');\n      }\n\n      if (beforeObjectTest !== false) {\n        for (var i = 0; i < typed.types.length; i++) {\n          if (typed.types[i].name === 'Object') {\n            typed.types.splice(i, 0, type);\n            return\n          }\n        }\n      }\n\n      typed.types.push(type);\n    };\n\n    // add a conversion\n    typed.addConversion = function (conversion) {\n      if (!conversion\n          || typeof conversion.from !== 'string'\n          || typeof conversion.to !== 'string'\n          || typeof conversion.convert !== 'function') {\n        throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');\n      }\n\n      typed.conversions.push(conversion);\n    };\n\n    return typed;\n  }\n\n  return create();\n}));","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),\n        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n    function plural(n) {\n        return (n > 1) && (n < 5);\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':  // a few seconds / in a few seconds / a few seconds ago\n                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'sekundy' : 'sekúnd');\n                } else {\n                    return result + 'sekundami';\n                }\n                break;\n            case 'm':  // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'minúty' : 'minút');\n                } else {\n                    return result + 'minútami';\n                }\n                break;\n            case 'h':  // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'hodiny' : 'hodín');\n                } else {\n                    return result + 'hodinami';\n                }\n                break;\n            case 'd':  // a day / in a day / a day ago\n                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'dni' : 'dní');\n                } else {\n                    return result + 'dňami';\n                }\n                break;\n            case 'M':  // a month / in a month / a month ago\n                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'mesiace' : 'mesiacov');\n                } else {\n                    return result + 'mesiacmi';\n                }\n                break;\n            case 'y':  // a year / in a year / a year ago\n                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'roky' : 'rokov');\n                } else {\n                    return result + 'rokmi';\n                }\n                break;\n        }\n    }\n\n    var sk = moment.defineLocale('sk', {\n        months : months,\n        monthsShort : monthsShort,\n        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),\n        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay: '[dnes o] LT',\n            nextDay: '[zajtra o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [o] LT';\n                    case 3:\n                        return '[v stredu o] LT';\n                    case 4:\n                        return '[vo štvrtok o] LT';\n                    case 5:\n                        return '[v piatok o] LT';\n                    case 6:\n                        return '[v sobotu o] LT';\n                }\n            },\n            lastDay: '[včera o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulú nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[minulý] dddd [o] LT';\n                    case 3:\n                        return '[minulú stredu o] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [o] LT';\n                    case 6:\n                        return '[minulú sobotu o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'pred %s',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sk;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var yo = moment.defineLocale('yo', {\n        months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),\n        monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),\n        weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),\n        weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),\n        weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Ònì ni] LT',\n            nextDay : '[Ọ̀la ni] LT',\n            nextWeek : 'dddd [Ọsẹ̀ tón\\'bọ] [ni] LT',\n            lastDay : '[Àna ni] LT',\n            lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ní %s',\n            past : '%s kọjá',\n            s : 'ìsẹjú aayá die',\n            ss :'aayá %d',\n            m : 'ìsẹjú kan',\n            mm : 'ìsẹjú %d',\n            h : 'wákati kan',\n            hh : 'wákati %d',\n            d : 'ọjọ́ kan',\n            dd : 'ọjọ́ %d',\n            M : 'osù kan',\n            MM : 'osù %d',\n            y : 'ọdún kan',\n            yy : 'ọdún %d'\n        },\n        dayOfMonthOrdinalParse : /ọjọ́\\s\\d{1,2}/,\n        ordinal : 'ọjọ́ %d',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return yo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n            case 'ss':\n                if (number === 1) {\n                    result += withoutSuffix ? 'sekundo' : 'sekundi';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n                } else {\n                    result += 'sekund';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'ena minuta' : 'eno minuto';\n            case 'mm':\n                if (number === 1) {\n                    result += withoutSuffix ? 'minuta' : 'minuto';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'ena ura' : 'eno uro';\n            case 'hh':\n                if (number === 1) {\n                    result += withoutSuffix ? 'ura' : 'uro';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'uri' : 'urama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'ure' : 'urami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'ur' : 'urami';\n                }\n                return result;\n            case 'd':\n                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n            case 'dd':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n                } else {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n                }\n                return result;\n            case 'M':\n                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n            case 'MM':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n                } else {\n                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n                }\n                return result;\n            case 'y':\n                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n            case 'yy':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'leto' : 'letom';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'leta' : 'leti';\n                } else {\n                    result += withoutSuffix || isFuture ? 'let' : 'leti';\n                }\n                return result;\n        }\n    }\n\n    var sl = moment.defineLocale('sl', {\n        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danes ob] LT',\n            nextDay  : '[jutri ob] LT',\n\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[v] [sredo] [ob] LT';\n                    case 6:\n                        return '[v] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[v] dddd [ob] LT';\n                }\n            },\n            lastDay  : '[včeraj ob] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[prejšnjo] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[prejšnjo] [sredo] [ob] LT';\n                    case 6:\n                        return '[prejšnjo] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prejšnji] dddd [ob] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'čez %s',\n            past   : 'pred %s',\n            s      : processRelativeTime,\n            ss     : processRelativeTime,\n            m      : processRelativeTime,\n            mm     : processRelativeTime,\n            h      : processRelativeTime,\n            hh     : processRelativeTime,\n            d      : processRelativeTime,\n            dd     : processRelativeTime,\n            M      : processRelativeTime,\n            MM     : processRelativeTime,\n            y      : processRelativeTime,\n            yy     : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return sl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\n        numbersFuture = [\n            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n            numbersPast[7], numbersPast[8], numbersPast[9]\n        ];\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = '';\n        switch (key) {\n            case 's':\n                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n            case 'ss':\n                return isFuture ? 'sekunnin' : 'sekuntia';\n            case 'm':\n                return isFuture ? 'minuutin' : 'minuutti';\n            case 'mm':\n                result = isFuture ? 'minuutin' : 'minuuttia';\n                break;\n            case 'h':\n                return isFuture ? 'tunnin' : 'tunti';\n            case 'hh':\n                result = isFuture ? 'tunnin' : 'tuntia';\n                break;\n            case 'd':\n                return isFuture ? 'päivän' : 'päivä';\n            case 'dd':\n                result = isFuture ? 'päivän' : 'päivää';\n                break;\n            case 'M':\n                return isFuture ? 'kuukauden' : 'kuukausi';\n            case 'MM':\n                result = isFuture ? 'kuukauden' : 'kuukautta';\n                break;\n            case 'y':\n                return isFuture ? 'vuoden' : 'vuosi';\n            case 'yy':\n                result = isFuture ? 'vuoden' : 'vuotta';\n                break;\n        }\n        result = verbalNumber(number, isFuture) + ' ' + result;\n        return result;\n    }\n    function verbalNumber(number, isFuture) {\n        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;\n    }\n\n    var fi = moment.defineLocale('fi', {\n        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'Do MMMM[ta] YYYY',\n            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',\n            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n            l : 'D.M.YYYY',\n            ll : 'Do MMM YYYY',\n            lll : 'Do MMM YYYY, [klo] HH.mm',\n            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'\n        },\n        calendar : {\n            sameDay : '[tänään] [klo] LT',\n            nextDay : '[huomenna] [klo] LT',\n            nextWeek : 'dddd [klo] LT',\n            lastDay : '[eilen] [klo] LT',\n            lastWeek : '[viime] dddd[na] [klo] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s päästä',\n            past : '%s sitten',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fi;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    };\n\n    var arSa = moment.defineLocale('ar-sa', {\n        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return arSa;\n\n})));\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Lab.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Lab.vue?vue&type=style&index=0&lang=scss&\"","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var bg = moment.defineLocale('bg', {\n        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay : '[Днес в] LT',\n            nextDay : '[Утре в] LT',\n            nextWeek : 'dddd [в] LT',\n            lastDay : '[Вчера в] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[В изминалата] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[В изминалия] dddd [в] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'след %s',\n            past : 'преди %s',\n            s : 'няколко секунди',\n            ss : '%d секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дни',\n            M : 'месец',\n            MM : '%d месеца',\n            y : 'година',\n            yy : '%d години'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return bg;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '၁',\n        '2': '၂',\n        '3': '၃',\n        '4': '၄',\n        '5': '၅',\n        '6': '၆',\n        '7': '၇',\n        '8': '၈',\n        '9': '၉',\n        '0': '၀'\n    }, numberMap = {\n        '၁': '1',\n        '၂': '2',\n        '၃': '3',\n        '၄': '4',\n        '၅': '5',\n        '၆': '6',\n        '၇': '7',\n        '၈': '8',\n        '၉': '9',\n        '၀': '0'\n    };\n\n    var my = moment.defineLocale('my', {\n        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),\n        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),\n        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),\n        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[ယနေ.] LT [မှာ]',\n            nextDay: '[မနက်ဖြန်] LT [မှာ]',\n            nextWeek: 'dddd LT [မှာ]',\n            lastDay: '[မနေ.က] LT [မှာ]',\n            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'လာမည့် %s မှာ',\n            past: 'လွန်ခဲ့သော %s က',\n            s: 'စက္ကန်.အနည်းငယ်',\n            ss : '%d စက္ကန့်',\n            m: 'တစ်မိနစ်',\n            mm: '%d မိနစ်',\n            h: 'တစ်နာရီ',\n            hh: '%d နာရီ',\n            d: 'တစ်ရက်',\n            dd: '%d ရက်',\n            M: 'တစ်လ',\n            MM: '%d လ',\n            y: 'တစ်နှစ်',\n            yy: '%d နှစ်'\n        },\n        preparse: function (string) {\n            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return my;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var gl = moment.defineLocale('gl', {\n        months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n        monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY H:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            lastDay : function () {\n                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';\n            },\n            lastWeek : function () {\n                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (str) {\n                if (str.indexOf('un') === 0) {\n                    return 'n' + str;\n                }\n                return 'en ' + str;\n            },\n            past : 'hai %s',\n            s : 'uns segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'unha hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return gl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    var es = moment.defineLocale('es', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex : monthsRegex,\n        monthsShortRegex : monthsRegex,\n        monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex : /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY H:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return es;\n\n})));\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n\n    var el = moment.defineLocale('el', {\n        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),\n        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),\n        months : function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return this._monthsNominativeEl;\n            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'\n                return this._monthsGenitiveEl[momentToFormat.month()];\n            } else {\n                return this._monthsNominativeEl[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),\n        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'μμ' : 'ΜΜ';\n            } else {\n                return isLower ? 'πμ' : 'ΠΜ';\n            }\n        },\n        isPM : function (input) {\n            return ((input + '').toLowerCase()[0] === 'μ');\n        },\n        meridiemParse : /[ΠΜ]\\.?Μ?\\.?/i,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendarEl : {\n            sameDay : '[Σήμερα {}] LT',\n            nextDay : '[Αύριο {}] LT',\n            nextWeek : 'dddd [{}] LT',\n            lastDay : '[Χθες {}] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 6:\n                        return '[το προηγούμενο] dddd [{}] LT';\n                    default:\n                        return '[την προηγούμενη] dddd [{}] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        calendar : function (key, mom) {\n            var output = this._calendarEl[key],\n                hours = mom && mom.hours();\n            if (isFunction(output)) {\n                output = output.apply(mom);\n            }\n            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));\n        },\n        relativeTime : {\n            future : 'σε %s',\n            past : '%s πριν',\n            s : 'λίγα δευτερόλεπτα',\n            ss : '%d δευτερόλεπτα',\n            m : 'ένα λεπτό',\n            mm : '%d λεπτά',\n            h : 'μία ώρα',\n            hh : '%d ώρες',\n            d : 'μία μέρα',\n            dd : '%d μέρες',\n            M : 'ένας μήνας',\n            MM : '%d μήνες',\n            y : 'ένας χρόνος',\n            yy : '%d χρόνια'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}η/,\n        ordinal: '%dη',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4st is the first week of the year.\n        }\n    });\n\n    return el;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),\n        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n    function plural(n) {\n        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);\n    }\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                return result + (plural(number) ? 'sekundy' : 'sekund');\n            case 'm':\n                return withoutSuffix ? 'minuta' : 'minutę';\n            case 'mm':\n                return result + (plural(number) ? 'minuty' : 'minut');\n            case 'h':\n                return withoutSuffix  ? 'godzina'  : 'godzinę';\n            case 'hh':\n                return result + (plural(number) ? 'godziny' : 'godzin');\n            case 'MM':\n                return result + (plural(number) ? 'miesiące' : 'miesięcy');\n            case 'yy':\n                return result + (plural(number) ? 'lata' : 'lat');\n        }\n    }\n\n    var pl = moment.defineLocale('pl', {\n        months : function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return monthsNominative;\n            } else if (format === '') {\n                // Hack: if format empty we know this is used to generate\n                // RegExp by moment. Give then back both valid forms of months\n                // in RegExp ready format.\n                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';\n            } else if (/D MMMM/.test(format)) {\n                return monthsSubjective[momentToFormat.month()];\n            } else {\n                return monthsNominative[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n        weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Dziś o] LT',\n            nextDay: '[Jutro o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W niedzielę o] LT';\n\n                    case 2:\n                        return '[We wtorek o] LT';\n\n                    case 3:\n                        return '[W środę o] LT';\n\n                    case 6:\n                        return '[W sobotę o] LT';\n\n                    default:\n                        return '[W] dddd [o] LT';\n                }\n            },\n            lastDay: '[Wczoraj o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W zeszłą niedzielę o] LT';\n                    case 3:\n                        return '[W zeszłą środę o] LT';\n                    case 6:\n                        return '[W zeszłą sobotę o] LT';\n                    default:\n                        return '[W zeszły] dddd [o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : '%s temu',\n            s : 'kilka sekund',\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : '1 dzień',\n            dd : '%d dni',\n            M : 'miesiąc',\n            MM : translate,\n            y : 'rok',\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return pl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '۱',\n        '2': '۲',\n        '3': '۳',\n        '4': '۴',\n        '5': '۵',\n        '6': '۶',\n        '7': '۷',\n        '8': '۸',\n        '9': '۹',\n        '0': '۰'\n    }, numberMap = {\n        '۱': '1',\n        '۲': '2',\n        '۳': '3',\n        '۴': '4',\n        '۵': '5',\n        '۶': '6',\n        '۷': '7',\n        '۸': '8',\n        '۹': '9',\n        '۰': '0'\n    };\n\n    var fa = moment.defineLocale('fa', {\n        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        weekdays : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysShort : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /قبل از ظهر|بعد از ظهر/,\n        isPM: function (input) {\n            return /بعد از ظهر/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'قبل از ظهر';\n            } else {\n                return 'بعد از ظهر';\n            }\n        },\n        calendar : {\n            sameDay : '[امروز ساعت] LT',\n            nextDay : '[فردا ساعت] LT',\n            nextWeek : 'dddd [ساعت] LT',\n            lastDay : '[دیروز ساعت] LT',\n            lastWeek : 'dddd [پیش] [ساعت] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'در %s',\n            past : '%s پیش',\n            s : 'چند ثانیه',\n            ss : 'ثانیه d%',\n            m : 'یک دقیقه',\n            mm : '%d دقیقه',\n            h : 'یک ساعت',\n            hh : '%d ساعت',\n            d : 'یک روز',\n            dd : '%d روز',\n            M : 'یک ماه',\n            MM : '%d ماه',\n            y : 'یک سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/[۰-۹]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}م/,\n        ordinal : '%dم',\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12 // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return fa;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    }, pluralForm = function (n) {\n        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n    }, plurals = {\n        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n    }, pluralize = function (u) {\n        return function (number, withoutSuffix, string, isFuture) {\n            var f = pluralForm(number),\n                str = plurals[u][pluralForm(number)];\n            if (f === 2) {\n                str = str[withoutSuffix ? 0 : 1];\n            }\n            return str.replace(/%d/i, number);\n        };\n    }, months = [\n        'يناير',\n        'فبراير',\n        'مارس',\n        'أبريل',\n        'مايو',\n        'يونيو',\n        'يوليو',\n        'أغسطس',\n        'سبتمبر',\n        'أكتوبر',\n        'نوفمبر',\n        'ديسمبر'\n    ];\n\n    var ar = moment.defineLocale('ar', {\n        months : months,\n        monthsShort : months,\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/\\u200FM/\\u200FYYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'بعد %s',\n            past : 'منذ %s',\n            s : pluralize('s'),\n            ss : pluralize('s'),\n            m : pluralize('m'),\n            mm : pluralize('m'),\n            h : pluralize('h'),\n            hh : pluralize('h'),\n            d : pluralize('d'),\n            dd : pluralize('d'),\n            M : pluralize('M'),\n            MM : pluralize('M'),\n            y : pluralize('y'),\n            yy : pluralize('y')\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return ar;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '১',\n        '2': '২',\n        '3': '৩',\n        '4': '৪',\n        '5': '৫',\n        '6': '৬',\n        '7': '৭',\n        '8': '৮',\n        '9': '৯',\n        '0': '০'\n    },\n    numberMap = {\n        '১': '1',\n        '২': '2',\n        '৩': '3',\n        '৪': '4',\n        '৫': '5',\n        '৬': '6',\n        '৭': '7',\n        '৮': '8',\n        '৯': '9',\n        '০': '0'\n    };\n\n    var bn = moment.defineLocale('bn', {\n        months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),\n        monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),\n        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),\n        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n        weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm সময়',\n            LTS : 'A h:mm:ss সময়',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm সময়',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'\n        },\n        calendar : {\n            sameDay : '[আজ] LT',\n            nextDay : '[আগামীকাল] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[গতকাল] LT',\n            lastWeek : '[গত] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s পরে',\n            past : '%s আগে',\n            s : 'কয়েক সেকেন্ড',\n            ss : '%d সেকেন্ড',\n            m : 'এক মিনিট',\n            mm : '%d মিনিট',\n            h : 'এক ঘন্টা',\n            hh : '%d ঘন্টা',\n            d : 'এক দিন',\n            dd : '%d দিন',\n            M : 'এক মাস',\n            MM : '%d মাস',\n            y : 'এক বছর',\n            yy : '%d বছর'\n        },\n        preparse: function (string) {\n            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'রাত' && hour >= 4) ||\n                    (meridiem === 'দুপুর' && hour < 5) ||\n                    meridiem === 'বিকাল') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'রাত';\n            } else if (hour < 10) {\n                return 'সকাল';\n            } else if (hour < 17) {\n                return 'দুপুর';\n            } else if (hour < 20) {\n                return 'বিকাল';\n            } else {\n                return 'রাত';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return bn;\n\n})));\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var zhTw = moment.defineLocale('zh-tw', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日dddd HH:mm',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天] LT',\n            nextDay : '[明天] LT',\n            nextWeek : '[下]dddd LT',\n            lastDay : '[昨天] LT',\n            lastWeek : '[上]dddd LT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd' :\n                case 'D' :\n                case 'DDD' :\n                    return number + '日';\n                case 'M' :\n                    return number + '月';\n                case 'w' :\n                case 'W' :\n                    return number + '週';\n                default :\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s內',\n            past : '%s前',\n            s : '幾秒',\n            ss : '%d 秒',\n            m : '1 分鐘',\n            mm : '%d 分鐘',\n            h : '1 小時',\n            hh : '%d 小時',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 個月',\n            MM : '%d 個月',\n            y : '1 年',\n            yy : '%d 年'\n        }\n    });\n\n    return zhTw;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            'hh': 'час_часа_часов',\n            'dd': 'день_дня_дней',\n            'MM': 'месяц_месяца_месяцев',\n            'yy': 'год_года_лет'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n\n    // http://new.gramota.ru/spravka/rules/139-prop : § 103\n    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n    var ru = moment.defineLocale('ru', {\n        months : {\n            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n        },\n        monthsShort : {\n            // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n        },\n        weekdays : {\n            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n            isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n        },\n        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n\n        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n        monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // копия предыдущего\n        monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // полные названия с падежами\n        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n        // Выражение, которое соотвествует только сокращённым формам\n        monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., H:mm',\n            LLLL : 'dddd, D MMMM YYYY г., H:mm'\n        },\n        calendar : {\n            sameDay: '[Сегодня, в] LT',\n            nextDay: '[Завтра, в] LT',\n            lastDay: '[Вчера, в] LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В следующее] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В следующий] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В следующую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В прошлое] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В прошлый] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В прошлую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'через %s',\n            past : '%s назад',\n            s : 'несколько секунд',\n            ss : relativeTimeWithPlural,\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'час',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM : function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                case 'w':\n                case 'W':\n                    return number + '-я';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ru;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        switch (key) {\n            case 's':\n                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n            case 'ss':\n                return number + (withoutSuffix ? ' секунд' : ' секундын');\n            case 'm':\n            case 'mm':\n                return number + (withoutSuffix ? ' минут' : ' минутын');\n            case 'h':\n            case 'hh':\n                return number + (withoutSuffix ? ' цаг' : ' цагийн');\n            case 'd':\n            case 'dd':\n                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');\n            case 'M':\n            case 'MM':\n                return number + (withoutSuffix ? ' сар' : ' сарын');\n            case 'y':\n            case 'yy':\n                return number + (withoutSuffix ? ' жил' : ' жилийн');\n            default:\n                return number;\n        }\n    }\n\n    var mn = moment.defineLocale('mn', {\n        months : 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n        monthsShort : '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n        weekdaysShort : 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n        weekdaysMin : 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY оны MMMMын D',\n            LLL : 'YYYY оны MMMMын D HH:mm',\n            LLLL : 'dddd, YYYY оны MMMMын D HH:mm'\n        },\n        meridiemParse: /ҮӨ|ҮХ/i,\n        isPM : function (input) {\n            return input === 'ҮХ';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ҮӨ';\n            } else {\n                return 'ҮХ';\n            }\n        },\n        calendar : {\n            sameDay : '[Өнөөдөр] LT',\n            nextDay : '[Маргааш] LT',\n            nextWeek : '[Ирэх] dddd LT',\n            lastDay : '[Өчигдөр] LT',\n            lastWeek : '[Өнгөрсөн] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s дараа',\n            past : '%s өмнө',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + ' өдөр';\n                default:\n                    return number;\n            }\n        }\n    });\n\n    return mn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        0: '-чү',\n        1: '-чи',\n        2: '-чи',\n        3: '-чү',\n        4: '-чү',\n        5: '-чи',\n        6: '-чы',\n        7: '-чи',\n        8: '-чи',\n        9: '-чу',\n        10: '-чу',\n        20: '-чы',\n        30: '-чу',\n        40: '-чы',\n        50: '-чү',\n        60: '-чы',\n        70: '-чи',\n        80: '-чи',\n        90: '-чу',\n        100: '-чү'\n    };\n\n    var ky = moment.defineLocale('ky', {\n        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),\n        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),\n        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бүгүн саат] LT',\n            nextDay : '[Эртең саат] LT',\n            nextWeek : 'dddd [саат] LT',\n            lastDay : '[Кечээ саат] LT',\n            lastWeek : '[Өткөн аптанын] dddd [күнү] [саат] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ичинде',\n            past : '%s мурун',\n            s : 'бирнече секунд',\n            ss : '%d секунд',\n            m : 'бир мүнөт',\n            mm : '%d мүнөт',\n            h : 'бир саат',\n            hh : '%d саат',\n            d : 'бир күн',\n            dd : '%d күн',\n            M : 'бир ай',\n            MM : '%d ай',\n            y : 'бир жыл',\n            yy : '%d жыл'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(чи|чы|чү|чу)/,\n        ordinal : function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return ky;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n                'ss': 'secunde',\n                'mm': 'minute',\n                'hh': 'ore',\n                'dd': 'zile',\n                'MM': 'luni',\n                'yy': 'ani'\n            },\n            separator = ' ';\n        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {\n            separator = ' de ';\n        }\n        return number + separator + format[key];\n    }\n\n    var ro = moment.defineLocale('ro', {\n        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay: '[azi la] LT',\n            nextDay: '[mâine la] LT',\n            nextWeek: 'dddd [la] LT',\n            lastDay: '[ieri la] LT',\n            lastWeek: '[fosta] dddd [la] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'peste %s',\n            past : '%s în urmă',\n            s : 'câteva secunde',\n            ss : relativeTimeWithPlural,\n            m : 'un minut',\n            mm : relativeTimeWithPlural,\n            h : 'o oră',\n            hh : relativeTimeWithPlural,\n            d : 'o zi',\n            dd : relativeTimeWithPlural,\n            M : 'o lună',\n            MM : relativeTimeWithPlural,\n            y : 'un an',\n            yy : relativeTimeWithPlural\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return ro;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var cy = moment.defineLocale('cy', {\n        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),\n        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),\n        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),\n        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),\n        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),\n        weekdaysParseExact : true,\n        // time formats are the same as en-gb\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[Heddiw am] LT',\n            nextDay: '[Yfory am] LT',\n            nextWeek: 'dddd [am] LT',\n            lastDay: '[Ddoe am] LT',\n            lastWeek: 'dddd [diwethaf am] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'mewn %s',\n            past: '%s yn ôl',\n            s: 'ychydig eiliadau',\n            ss: '%d eiliad',\n            m: 'munud',\n            mm: '%d munud',\n            h: 'awr',\n            hh: '%d awr',\n            d: 'diwrnod',\n            dd: '%d diwrnod',\n            M: 'mis',\n            MM: '%d mis',\n            y: 'blwyddyn',\n            yy: '%d flynedd'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,\n        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n        ordinal: function (number) {\n            var b = number,\n                output = '',\n                lookup = [\n                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed\n                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed\n                ];\n            if (b > 20) {\n                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n                    output = 'fed'; // not 30ain, 70ain or 90ain\n                } else {\n                    output = 'ain';\n                }\n            } else if (b > 0) {\n                output = lookup[b];\n            }\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return cy;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var fr = moment.defineLocale('fr', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // TODO: Return 'e' when day of month > 1. Move this case inside\n                // block for masculine words below.\n                // See https://github.com/moment/moment/issues/3375\n                case 'D':\n                    return number + (number === 1 ? 'er' : '');\n\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var arDz = moment.defineLocale('ar-dz', {\n        months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return arDz;\n\n})));\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VTable.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VTable.vue?vue&type=style&index=0&lang=css&\"","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var bm = moment.defineLocale('bm', {\n        months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),\n        monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),\n        weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),\n        weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),\n        weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'MMMM [tile] D [san] YYYY',\n            LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n            LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'\n        },\n        calendar : {\n            sameDay : '[Bi lɛrɛ] LT',\n            nextDay : '[Sini lɛrɛ] LT',\n            nextWeek : 'dddd [don lɛrɛ] LT',\n            lastDay : '[Kunu lɛrɛ] LT',\n            lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s kɔnɔ',\n            past : 'a bɛ %s bɔ',\n            s : 'sanga dama dama',\n            ss : 'sekondi %d',\n            m : 'miniti kelen',\n            mm : 'miniti %d',\n            h : 'lɛrɛ kelen',\n            hh : 'lɛrɛ %d',\n            d : 'tile kelen',\n            dd : 'tile %d',\n            M : 'kalo kelen',\n            MM : 'kalo %d',\n            y : 'san kelen',\n            yy : 'san %d'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return bm;\n\n})));\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n            'dd': 'день_дні_днів',\n            'MM': 'місяць_місяці_місяців',\n            'yy': 'рік_роки_років'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n        };\n\n        if (m === true) {\n            return weekdays['nominative'].slice(1, 7).concat(weekdays['nominative'].slice(0, 1));\n        }\n        if (!m) {\n            return weekdays['nominative'];\n        }\n\n        var nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n            'accusative' :\n            ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n                'genitive' :\n                'nominative');\n        return weekdays[nounCase][m.day()];\n    }\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    var uk = moment.defineLocale('uk', {\n        months : {\n            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n        },\n        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY р.',\n            LLL : 'D MMMM YYYY р., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY р., HH:mm'\n        },\n        calendar : {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return processHoursFunction('[Минулої] dddd [').call(this);\n                    case 1:\n                    case 2:\n                    case 4:\n                        return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past : '%s тому',\n            s : 'декілька секунд',\n            ss : relativeTimeWithPlural,\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'годину',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'місяць',\n            MM : relativeTimeWithPlural,\n            y : 'рік',\n            yy : relativeTimeWithPlural\n        },\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n        meridiemParse: /ночі|ранку|дня|вечора/,\n        isPM: function (input) {\n            return /^(дня|вечора)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return uk;\n\n})));\n","'use strict';\r\n\r\nvar width = 256;// each RC4 output is 0 <= x < 256\r\nvar chunks = 6;// at least six RC4 outputs for each double\r\nvar digits = 52;// there are 52 significant digits in a double\r\nvar pool = [];// pool: entropy pool starts empty\r\nvar GLOBAL = typeof global === 'undefined' ? window : global;\r\n\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\nvar startdenom = Math.pow(width, chunks),\r\n    significance = Math.pow(2, digits),\r\n    overflow = significance * 2,\r\n    mask = width - 1;\r\n\r\n\r\nvar oldRandom = Math.random;\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\nmodule.exports = function(seed, options) {\r\n  if (options && options.global === true) {\r\n    options.global = false;\r\n    Math.random = module.exports(seed, options);\r\n    options.global = true;\r\n    return Math.random;\r\n  }\r\n  var use_entropy = (options && options.entropy) || false;\r\n  var key = [];\r\n\r\n  // Flatten the seed string or build one from local entropy if needed.\r\n  var shortseed = mixkey(flatten(\r\n    use_entropy ? [seed, tostring(pool)] :\r\n    0 in arguments ? seed : autoseed(), 3), key);\r\n\r\n  // Use the seed to initialize an ARC4 generator.\r\n  var arc4 = new ARC4(key);\r\n\r\n  // Mix the randomness into accumulated entropy.\r\n  mixkey(tostring(arc4.S), pool);\r\n\r\n  // Override Math.random\r\n\r\n  // This function returns a random double in [0, 1) that contains\r\n  // randomness in every bit of the mantissa of the IEEE 754 value.\r\n\r\n  return function() {         // Closure to return a random double:\r\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n        x = 0;                          //   and no 'extra last byte'.\r\n    while (n < significance) {          // Fill up all significant digits by\r\n      n = (n + x) * width;              //   shifting numerator and\r\n      d *= width;                       //   denominator and generating a\r\n      x = arc4.g(1);                    //   new least-significant-byte.\r\n    }\r\n    while (n >= overflow) {             // To avoid rounding up, before adding\r\n      n /= 2;                           //   last byte, shift everything\r\n      d /= 2;                           //   right using integer Math until\r\n      x >>>= 1;                         //   we have exactly the desired bits.\r\n    }\r\n    return (n + x) / d;                 // Form the number within [0, 1).\r\n  };\r\n};\r\n\r\nmodule.exports.resetGlobal = function () {\r\n  Math.random = oldRandom;\r\n};\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n/** @constructor */\r\nfunction ARC4(key) {\r\n  var t, keylen = key.length,\r\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n  // The empty key [] is treated as [0].\r\n  if (!keylen) { key = [keylen++]; }\r\n\r\n  // Set up S using the standard key scheduling algorithm.\r\n  while (i < width) {\r\n    s[i] = i++;\r\n  }\r\n  for (i = 0; i < width; i++) {\r\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n    s[j] = t;\r\n  }\r\n\r\n  // The \"g\" method returns the next (count) outputs as one number.\r\n  (me.g = function(count) {\r\n    // Using instance members instead of closure state nearly doubles speed.\r\n    var t, r = 0,\r\n        i = me.i, j = me.j, s = me.S;\r\n    while (count--) {\r\n      t = s[i = mask & (i + 1)];\r\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n    }\r\n    me.i = i; me.j = j;\r\n    return r;\r\n    // For robust unpredictability discard an initial batch of values.\r\n    // See http://www.rsa.com/rsalabs/node.asp?id=2009\r\n  })(width);\r\n}\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\nfunction flatten(obj, depth) {\r\n  var result = [], typ = (typeof obj)[0], prop;\r\n  if (depth && typ == 'o') {\r\n    for (prop in obj) {\r\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n    }\r\n  }\r\n  return (result.length ? result : typ == 's' ? obj : obj + '\\0');\r\n}\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\nfunction mixkey(seed, key) {\r\n  var stringseed = seed + '', smear, j = 0;\r\n  while (j < stringseed.length) {\r\n    key[mask & j] =\r\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n  }\r\n  return tostring(key);\r\n}\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto if available.\r\n//\r\n/** @param {Uint8Array=} seed */\r\nfunction autoseed(seed) {\r\n  try {\r\n    GLOBAL.crypto.getRandomValues(seed = new Uint8Array(width));\r\n    return tostring(seed);\r\n  } catch (e) {\r\n    return [+new Date, GLOBAL, GLOBAL.navigator && GLOBAL.navigator.plugins,\r\n            GLOBAL.screen, tostring(pool)];\r\n  }\r\n}\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\nfunction tostring(a) {\r\n  return String.fromCharCode.apply(0, a);\r\n}\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to intefere with determinstic PRNG state later,\r\n// seedrandom will not call Math.random on its own again after\r\n// initialization.\r\n//\r\nmixkey(Math.random(), pool);\r\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var lo = moment.defineLocale('lo', {\n        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,\n        isPM: function (input) {\n            return input === 'ຕອນແລງ';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ຕອນເຊົ້າ';\n            } else {\n                return 'ຕອນແລງ';\n            }\n        },\n        calendar : {\n            sameDay : '[ມື້ນີ້ເວລາ] LT',\n            nextDay : '[ມື້ອື່ນເວລາ] LT',\n            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',\n            lastDay : '[ມື້ວານນີ້ເວລາ] LT',\n            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ອີກ %s',\n            past : '%sຜ່ານມາ',\n            s : 'ບໍ່ເທົ່າໃດວິນາທີ',\n            ss : '%d ວິນາທີ' ,\n            m : '1 ນາທີ',\n            mm : '%d ນາທີ',\n            h : '1 ຊົ່ວໂມງ',\n            hh : '%d ຊົ່ວໂມງ',\n            d : '1 ມື້',\n            dd : '%d ມື້',\n            M : '1 ເດືອນ',\n            MM : '%d ເດືອນ',\n            y : '1 ປີ',\n            yy : '%d ປີ'\n        },\n        dayOfMonthOrdinalParse: /(ທີ່)\\d{1,2}/,\n        ordinal : function (number) {\n            return 'ທີ່' + number;\n        }\n    });\n\n    return lo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var deAt = moment.defineLocale('de-at', {\n        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return deAt;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var de = moment.defineLocale('de', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return de;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var tzmLatn = moment.defineLocale('tzm-latn', {\n        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[asdkh g] LT',\n            nextDay: '[aska g] LT',\n            nextWeek: 'dddd [g] LT',\n            lastDay: '[assant g] LT',\n            lastWeek: 'dddd [g] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'dadkh s yan %s',\n            past : 'yan %s',\n            s : 'imik',\n            ss : '%d imik',\n            m : 'minuḍ',\n            mm : '%d minuḍ',\n            h : 'saɛa',\n            hh : '%d tassaɛin',\n            d : 'ass',\n            dd : '%d ossan',\n            M : 'ayowr',\n            MM : '%d iyyirn',\n            y : 'asgas',\n            yy : '%d isgasn'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return tzmLatn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var jv = moment.defineLocale('jv', {\n        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),\n        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),\n        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),\n        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /enjing|siyang|sonten|ndalu/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'enjing') {\n                return hour;\n            } else if (meridiem === 'siyang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'enjing';\n            } else if (hours < 15) {\n                return 'siyang';\n            } else if (hours < 19) {\n                return 'sonten';\n            } else {\n                return 'ndalu';\n            }\n        },\n        calendar : {\n            sameDay : '[Dinten puniko pukul] LT',\n            nextDay : '[Mbenjang pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kala wingi pukul] LT',\n            lastWeek : 'dddd [kepengker pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'wonten ing %s',\n            past : '%s ingkang kepengker',\n            s : 'sawetawis detik',\n            ss : '%d detik',\n            m : 'setunggal menit',\n            mm : '%d menit',\n            h : 'setunggal jam',\n            hh : '%d jam',\n            d : 'sedinten',\n            dd : '%d dinten',\n            M : 'sewulan',\n            MM : '%d wulan',\n            y : 'setaun',\n            yy : '%d taun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return jv;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var nn = moment.defineLocale('nn', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),\n        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),\n        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] H:mm',\n            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[I dag klokka] LT',\n            nextDay: '[I morgon klokka] LT',\n            nextWeek: 'dddd [klokka] LT',\n            lastDay: '[I går klokka] LT',\n            lastWeek: '[Føregåande] dddd [klokka] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s sidan',\n            s : 'nokre sekund',\n            ss : '%d sekund',\n            m : 'eit minutt',\n            mm : '%d minutt',\n            h : 'ein time',\n            hh : '%d timar',\n            d : 'ein dag',\n            dd : '%d dagar',\n            M : 'ein månad',\n            MM : '%d månader',\n            y : 'eit år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var units = {\n        'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),\n        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        'h': 'stundas_stundām_stunda_stundas'.split('_'),\n        'hh': 'stundas_stundām_stunda_stundas'.split('_'),\n        'd': 'dienas_dienām_diena_dienas'.split('_'),\n        'dd': 'dienas_dienām_diena_dienas'.split('_'),\n        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        'y': 'gada_gadiem_gads_gadi'.split('_'),\n        'yy': 'gada_gadiem_gads_gadi'.split('_')\n    };\n    /**\n     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.\n     */\n    function format(forms, number, withoutSuffix) {\n        if (withoutSuffix) {\n            // E.g. \"21 minūte\", \"3 minūtes\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];\n        } else {\n            // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".\n            // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];\n        }\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        return number + ' ' + format(units[key], number, withoutSuffix);\n    }\n    function relativeTimeWithSingular(number, withoutSuffix, key) {\n        return format(units[key], number, withoutSuffix);\n    }\n    function relativeSeconds(number, withoutSuffix) {\n        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';\n    }\n\n    var lv = moment.defineLocale('lv', {\n        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),\n        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY.',\n            LL : 'YYYY. [gada] D. MMMM',\n            LLL : 'YYYY. [gada] D. MMMM, HH:mm',\n            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'\n        },\n        calendar : {\n            sameDay : '[Šodien pulksten] LT',\n            nextDay : '[Rīt pulksten] LT',\n            nextWeek : 'dddd [pulksten] LT',\n            lastDay : '[Vakar pulksten] LT',\n            lastWeek : '[Pagājušā] dddd [pulksten] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'pēc %s',\n            past : 'pirms %s',\n            s : relativeSeconds,\n            ss : relativeTimeWithPlural,\n            m : relativeTimeWithSingular,\n            mm : relativeTimeWithPlural,\n            h : relativeTimeWithSingular,\n            hh : relativeTimeWithPlural,\n            d : relativeTimeWithSingular,\n            dd : relativeTimeWithPlural,\n            M : relativeTimeWithSingular,\n            MM : relativeTimeWithPlural,\n            y : relativeTimeWithSingular,\n            yy : relativeTimeWithPlural\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return lv;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var deCh = moment.defineLocale('de-ch', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return deCh;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var tzm = moment.defineLocale('tzm', {\n        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',\n            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n            nextWeek: 'dddd [ⴴ] LT',\n            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n            lastWeek: 'dddd [ⴴ] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',\n            past : 'ⵢⴰⵏ %s',\n            s : 'ⵉⵎⵉⴽ',\n            ss : '%d ⵉⵎⵉⴽ',\n            m : 'ⵎⵉⵏⵓⴺ',\n            mm : '%d ⵎⵉⵏⵓⴺ',\n            h : 'ⵙⴰⵄⴰ',\n            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',\n            d : 'ⴰⵙⵙ',\n            dd : '%d oⵙⵙⴰⵏ',\n            M : 'ⴰⵢoⵓⵔ',\n            MM : '%d ⵉⵢⵢⵉⵔⵏ',\n            y : 'ⴰⵙⴳⴰⵙ',\n            yy : '%d ⵉⵙⴳⴰⵙⵏ'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return tzm;\n\n})));\n","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            var args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays (ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        var weekdays = isArray(this._weekdays) ? this._weekdays :\n            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];\n        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)\n            : (m) ? weekdays[m.day()] : weekdays;\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000;\n    var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n    var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return (dividend % divisor + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':   return months;\n                case 'quarter': return months / 3;\n                case 'year':    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asQuarters     = makeAs('Q');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asQuarters     = asQuarters;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.24.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var he = moment.defineLocale('he', {\n        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [ב]MMMM YYYY',\n            LLL : 'D [ב]MMMM YYYY HH:mm',\n            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',\n            l : 'D/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd, D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[היום ב־]LT',\n            nextDay : '[מחר ב־]LT',\n            nextWeek : 'dddd [בשעה] LT',\n            lastDay : '[אתמול ב־]LT',\n            lastWeek : '[ביום] dddd [האחרון בשעה] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'בעוד %s',\n            past : 'לפני %s',\n            s : 'מספר שניות',\n            ss : '%d שניות',\n            m : 'דקה',\n            mm : '%d דקות',\n            h : 'שעה',\n            hh : function (number) {\n                if (number === 2) {\n                    return 'שעתיים';\n                }\n                return number + ' שעות';\n            },\n            d : 'יום',\n            dd : function (number) {\n                if (number === 2) {\n                    return 'יומיים';\n                }\n                return number + ' ימים';\n            },\n            M : 'חודש',\n            MM : function (number) {\n                if (number === 2) {\n                    return 'חודשיים';\n                }\n                return number + ' חודשים';\n            },\n            y : 'שנה',\n            yy : function (number) {\n                if (number === 2) {\n                    return 'שנתיים';\n                } else if (number % 10 === 0 && number !== 10) {\n                    return number + ' שנה';\n                }\n                return number + ' שנים';\n            }\n        },\n        meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n        isPM : function (input) {\n            return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 5) {\n                return 'לפנות בוקר';\n            } else if (hour < 10) {\n                return 'בבוקר';\n            } else if (hour < 12) {\n                return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n            } else if (hour < 18) {\n                return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n            } else {\n                return 'בערב';\n            }\n        }\n    });\n\n    return he;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var sq = moment.defineLocale('sq', {\n        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),\n        weekdaysParseExact : true,\n        meridiemParse: /PD|MD/,\n        isPM: function (input) {\n            return input.charAt(0) === 'M';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            return hours < 12 ? 'PD' : 'MD';\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Sot në] LT',\n            nextDay : '[Nesër në] LT',\n            nextWeek : 'dddd [në] LT',\n            lastDay : '[Dje në] LT',\n            lastWeek : 'dddd [e kaluar në] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'në %s',\n            past : '%s më parë',\n            s : 'disa sekonda',\n            ss : '%d sekonda',\n            m : 'një minutë',\n            mm : '%d minuta',\n            h : 'një orë',\n            hh : '%d orë',\n            d : 'një ditë',\n            dd : '%d ditë',\n            M : 'një muaj',\n            MM : '%d muaj',\n            y : 'një vit',\n            yy : '%d vite'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sq;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enSG = moment.defineLocale('en-SG', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enSG;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var translator = {\n        words: { //Different grammatical cases\n            ss: ['sekunda', 'sekunde', 'sekundi'],\n            m: ['jedan minut', 'jedne minute'],\n            mm: ['minut', 'minute', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mesec', 'meseca', 'meseci'],\n            yy: ['godina', 'godine', 'godina']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    var sr = moment.defineLocale('sr', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedelju] [u] LT';\n                    case 3:\n                        return '[u] [sredu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[juče u] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[prošle] [nedelje] [u] LT',\n                    '[prošlog] [ponedeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'pre %s',\n            s      : 'nekoliko sekundi',\n            ss     : translator.translate,\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'dan',\n            dd     : translator.translate,\n            M      : 'mesec',\n            MM     : translator.translate,\n            y      : 'godinu',\n            yy     : translator.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return sr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.\n    // This is currently too difficult (maybe even impossible) to add.\n    var tzl = moment.defineLocale('tzl', {\n        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),\n        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),\n        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),\n        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM [dallas] YYYY',\n            LLL : 'D. MMMM [dallas] YYYY HH.mm',\n            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'\n        },\n        meridiemParse: /d\\'o|d\\'a/i,\n        isPM : function (input) {\n            return 'd\\'o' === input.toLowerCase();\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'd\\'o' : 'D\\'O';\n            } else {\n                return isLower ? 'd\\'a' : 'D\\'A';\n            }\n        },\n        calendar : {\n            sameDay : '[oxhi à] LT',\n            nextDay : '[demà à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[ieiri à] LT',\n            lastWeek : '[sür el] dddd [lasteu à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'osprei %s',\n            past : 'ja%s',\n            s : processRelativeTime,\n            ss : processRelativeTime,\n            m : processRelativeTime,\n            mm : processRelativeTime,\n            h : processRelativeTime,\n            hh : processRelativeTime,\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's': ['viensas secunds', '\\'iensas secunds'],\n            'ss': [number + ' secunds', '' + number + ' secunds'],\n            'm': ['\\'n míut', '\\'iens míut'],\n            'mm': [number + ' míuts', '' + number + ' míuts'],\n            'h': ['\\'n þora', '\\'iensa þora'],\n            'hh': [number + ' þoras', '' + number + ' þoras'],\n            'd': ['\\'n ziua', '\\'iensa ziua'],\n            'dd': [number + ' ziuas', '' + number + ' ziuas'],\n            'M': ['\\'n mes', '\\'iens mes'],\n            'MM': [number + ' mesen', '' + number + ' mesen'],\n            'y': ['\\'n ar', '\\'iens ar'],\n            'yy': [number + ' ars', '' + number + ' ars']\n        };\n        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);\n    }\n\n    return tzl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');\n\n    function translateFuture(output) {\n        var time = output;\n        time = (output.indexOf('jaj') !== -1) ?\n        time.slice(0, -3) + 'leS' :\n        (output.indexOf('jar') !== -1) ?\n        time.slice(0, -3) + 'waQ' :\n        (output.indexOf('DIS') !== -1) ?\n        time.slice(0, -3) + 'nem' :\n        time + ' pIq';\n        return time;\n    }\n\n    function translatePast(output) {\n        var time = output;\n        time = (output.indexOf('jaj') !== -1) ?\n        time.slice(0, -3) + 'Hu’' :\n        (output.indexOf('jar') !== -1) ?\n        time.slice(0, -3) + 'wen' :\n        (output.indexOf('DIS') !== -1) ?\n        time.slice(0, -3) + 'ben' :\n        time + ' ret';\n        return time;\n    }\n\n    function translate(number, withoutSuffix, string, isFuture) {\n        var numberNoun = numberAsNoun(number);\n        switch (string) {\n            case 'ss':\n                return numberNoun + ' lup';\n            case 'mm':\n                return numberNoun + ' tup';\n            case 'hh':\n                return numberNoun + ' rep';\n            case 'dd':\n                return numberNoun + ' jaj';\n            case 'MM':\n                return numberNoun + ' jar';\n            case 'yy':\n                return numberNoun + ' DIS';\n        }\n    }\n\n    function numberAsNoun(number) {\n        var hundred = Math.floor((number % 1000) / 100),\n        ten = Math.floor((number % 100) / 10),\n        one = number % 10,\n        word = '';\n        if (hundred > 0) {\n            word += numbersNouns[hundred] + 'vatlh';\n        }\n        if (ten > 0) {\n            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';\n        }\n        if (one > 0) {\n            word += ((word !== '') ? ' ' : '') + numbersNouns[one];\n        }\n        return (word === '') ? 'pagh' : word;\n    }\n\n    var tlh = moment.defineLocale('tlh', {\n        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),\n        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[DaHjaj] LT',\n            nextDay: '[wa’leS] LT',\n            nextWeek: 'LLL',\n            lastDay: '[wa’Hu’] LT',\n            lastWeek: 'LLL',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : translateFuture,\n            past : translatePast,\n            s : 'puS lup',\n            ss : translate,\n            m : 'wa’ tup',\n            mm : translate,\n            h : 'wa’ rep',\n            hh : translate,\n            d : 'wa’ jaj',\n            dd : translate,\n            M : 'wa’ jar',\n            MM : translate,\n            y : 'wa’ DIS',\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return tlh;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '༡',\n        '2': '༢',\n        '3': '༣',\n        '4': '༤',\n        '5': '༥',\n        '6': '༦',\n        '7': '༧',\n        '8': '༨',\n        '9': '༩',\n        '0': '༠'\n    },\n    numberMap = {\n        '༡': '1',\n        '༢': '2',\n        '༣': '3',\n        '༤': '4',\n        '༥': '5',\n        '༦': '6',\n        '༧': '7',\n        '༨': '8',\n        '༩': '9',\n        '༠': '0'\n    };\n\n    var bo = moment.defineLocale('bo', {\n        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),\n        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[དི་རིང] LT',\n            nextDay : '[སང་ཉིན] LT',\n            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',\n            lastDay : '[ཁ་སང] LT',\n            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ལ་',\n            past : '%s སྔན་ལ',\n            s : 'ལམ་སང',\n            ss : '%d སྐར་ཆ།',\n            m : 'སྐར་མ་གཅིག',\n            mm : '%d སྐར་མ',\n            h : 'ཆུ་ཚོད་གཅིག',\n            hh : '%d ཆུ་ཚོད',\n            d : 'ཉིན་གཅིག',\n            dd : '%d ཉིན་',\n            M : 'ཟླ་བ་གཅིག',\n            MM : '%d ཟླ་བ',\n            y : 'ལོ་གཅིག',\n            yy : '%d ལོ'\n        },\n        preparse: function (string) {\n            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||\n                    (meridiem === 'ཉིན་གུང' && hour < 5) ||\n                    meridiem === 'དགོང་དག') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'མཚན་མོ';\n            } else if (hour < 10) {\n                return 'ཞོགས་ཀས';\n            } else if (hour < 17) {\n                return 'ཉིན་གུང';\n            } else if (hour < 20) {\n                return 'དགོང་དག';\n            } else {\n                return 'མཚན་མོ';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return bo;\n\n})));\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ptBr = moment.defineLocale('pt-br', {\n        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : 'há %s',\n            s : 'poucos segundos',\n            ss : '%d segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal : '%dº'\n    });\n\n    return ptBr;\n\n})));\n","/**\n * @license Fraction.js v4.0.12 09/09/2015\n * http://www.xarg.org/2014/03/rational-numbers-in-javascript/\n *\n * Copyright (c) 2015, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <nominator>, 1 => <denominator> ]\n * [ n => <nominator>, d => <denominator> ]\n *\n * Integer form\n * - Single integer value\n *\n * Double form\n * - Single double value\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n *\n * var f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n\n(function(root) {\n\n  \"use strict\";\n\n  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\n  var MAX_CYCLE_LEN = 2000;\n\n  // Parsed data to avoid calling \"new\" all the time\n  var P = {\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1\n  };\n\n  function createError(name) {\n\n    function errorConstructor() {\n      var temp = Error.apply(this, arguments);\n      temp['name'] = this['name'] = name;\n      this['stack'] = temp['stack'];\n      this['message'] = temp['message'];\n    }\n\n    /**\n     * Error constructor\n     *\n     * @constructor\n     */\n    function IntermediateInheritor() {}\n    IntermediateInheritor.prototype = Error.prototype;\n    errorConstructor.prototype = new IntermediateInheritor();\n\n    return errorConstructor;\n  }\n\n  var DivisionByZero = Fraction['DivisionByZero'] = createError('DivisionByZero');\n  var InvalidParameter = Fraction['InvalidParameter'] = createError('InvalidParameter');\n\n  function assign(n, s) {\n\n    if (isNaN(n = parseInt(n, 10))) {\n      throwInvalidParam();\n    }\n    return n * s;\n  }\n\n  function throwInvalidParam() {\n    throw new InvalidParameter();\n  }\n\n  var parse = function(p1, p2) {\n\n    var n = 0, d = 1, s = 1;\n    var v = 0, w = 0, x = 0, y = 1, z = 1;\n\n    var A = 0, B = 1;\n    var C = 1, D = 1;\n\n    var N = 10000000;\n    var M;\n\n    if (p1 === undefined || p1 === null) {\n      /* void */\n    } else if (p2 !== undefined) {\n      n = p1;\n      d = p2;\n      s = n * d;\n    } else\n      switch (typeof p1) {\n\n        case \"object\":\n        {\n          if (\"d\" in p1 && \"n\" in p1) {\n            n = p1[\"n\"];\n            d = p1[\"d\"];\n            if (\"s\" in p1)\n              n *= p1[\"s\"];\n          } else if (0 in p1) {\n            n = p1[0];\n            if (1 in p1)\n              d = p1[1];\n          } else {\n            throwInvalidParam();\n          }\n          s = n * d;\n          break;\n        }\n        case \"number\":\n        {\n          if (p1 < 0) {\n            s = p1;\n            p1 = -p1;\n          }\n\n          if (p1 % 1 === 0) {\n            n = p1;\n          } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow\n\n            if (p1 >= 1) {\n              z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));\n              p1 /= z;\n            }\n\n            // Using Farey Sequences\n            // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/\n\n            while (B <= N && D <= N) {\n              M = (A + C) / (B + D);\n\n              if (p1 === M) {\n                if (B + D <= N) {\n                  n = A + C;\n                  d = B + D;\n                } else if (D > B) {\n                  n = C;\n                  d = D;\n                } else {\n                  n = A;\n                  d = B;\n                }\n                break;\n\n              } else {\n\n                if (p1 > M) {\n                  A += C;\n                  B += D;\n                } else {\n                  C += A;\n                  D += B;\n                }\n\n                if (B > N) {\n                  n = C;\n                  d = D;\n                } else {\n                  n = A;\n                  d = B;\n                }\n              }\n            }\n            n *= z;\n          } else if (isNaN(p1) || isNaN(p2)) {\n            d = n = NaN;\n          }\n          break;\n        }\n        case \"string\":\n        {\n          B = p1.match(/\\d+|./g);\n\n          if (B === null)\n            throwInvalidParam();\n\n          if (B[A] === '-') {// Check for minus sign at the beginning\n            s = -1;\n            A++;\n          } else if (B[A] === '+') {// Check for plus sign at the beginning\n            A++;\n          }\n\n          if (B.length === A + 1) { // Check if it's just a simple number \"1234\"\n            w = assign(B[A++], s);\n          } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number\n\n            if (B[A] !== '.') { // Handle 0.5 and .5\n              v = assign(B[A++], s);\n            }\n            A++;\n\n            // Check for decimal places\n            if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === \"'\" && B[A + 3] === \"'\") {\n              w = assign(B[A], s);\n              y = Math.pow(10, B[A].length);\n              A++;\n            }\n\n            // Check for repeating places\n            if (B[A] === '(' && B[A + 2] === ')' || B[A] === \"'\" && B[A + 2] === \"'\") {\n              x = assign(B[A + 1], s);\n              z = Math.pow(10, B[A + 1].length) - 1;\n              A += 3;\n            }\n\n          } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction \"123/456\" or \"123:456\"\n            w = assign(B[A], s);\n            y = assign(B[A + 2], 1);\n            A += 3;\n          } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction \"123 1/2\"\n            v = assign(B[A], s);\n            w = assign(B[A + 2], s);\n            y = assign(B[A + 4], 1);\n            A += 5;\n          }\n\n          if (B.length <= A) { // Check for more tokens on the stack\n            d = y * z;\n            s = /* void */\n                    n = x + d * v + z * w;\n            break;\n          }\n\n          /* Fall through on error */\n        }\n        default:\n          throwInvalidParam();\n      }\n\n    if (d === 0) {\n      throw new DivisionByZero();\n    }\n\n    P[\"s\"] = s < 0 ? -1 : 1;\n    P[\"n\"] = Math.abs(n);\n    P[\"d\"] = Math.abs(d);\n  };\n\n  function modpow(b, e, m) {\n\n    var r = 1;\n    for (; e > 0; b = (b * b) % m, e >>= 1) {\n\n      if (e & 1) {\n        r = (r * b) % m;\n      }\n    }\n    return r;\n  }\n\n\n  function cycleLen(n, d) {\n\n    for (; d % 2 === 0;\n            d /= 2) {\n    }\n\n    for (; d % 5 === 0;\n            d /= 5) {\n    }\n\n    if (d === 1) // Catch non-cyclic numbers\n      return 0;\n\n    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n    // 10^(d-1) % d == 1\n    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n    // as we want to translate the numbers to strings.\n\n    var rem = 10 % d;\n    var t = 1;\n\n    for (; rem !== 1; t++) {\n      rem = rem * 10 % d;\n\n      if (t > MAX_CYCLE_LEN)\n        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n    }\n    return t;\n  }\n\n\n     function cycleStart(n, d, len) {\n\n    var rem1 = 1;\n    var rem2 = modpow(10, len, d);\n\n    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)\n      // Solve 10^s == 10^(s+t) (mod d)\n\n      if (rem1 === rem2)\n        return t;\n\n      rem1 = rem1 * 10 % d;\n      rem2 = rem2 * 10 % d;\n    }\n    return 0;\n  }\n\n  function gcd(a, b) {\n\n    if (!a)\n      return b;\n    if (!b)\n      return a;\n\n    while (1) {\n      a %= b;\n      if (!a)\n        return b;\n      b %= a;\n      if (!b)\n        return a;\n    }\n  };\n\n  /**\n   * Module constructor\n   *\n   * @constructor\n   * @param {number|Fraction=} a\n   * @param {number=} b\n   */\n  function Fraction(a, b) {\n\n    if (!(this instanceof Fraction)) {\n      return new Fraction(a, b);\n    }\n\n    parse(a, b);\n\n    if (Fraction['REDUCE']) {\n      a = gcd(P[\"d\"], P[\"n\"]); // Abuse a\n    } else {\n      a = 1;\n    }\n\n    this[\"s\"] = P[\"s\"];\n    this[\"n\"] = P[\"n\"] / a;\n    this[\"d\"] = P[\"d\"] / a;\n  }\n\n  /**\n   * Boolean global variable to be able to disable automatic reduction of the fraction\n   *\n   */\n  Fraction['REDUCE'] = 1;\n\n  Fraction.prototype = {\n\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1,\n\n    /**\n     * Calculates the absolute value\n     *\n     * Ex: new Fraction(-4).abs() => 4\n     **/\n    \"abs\": function() {\n\n      return new Fraction(this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Inverts the sign of the current fraction\n     *\n     * Ex: new Fraction(-4).neg() => 4\n     **/\n    \"neg\": function() {\n\n      return new Fraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Adds two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n     **/\n    \"add\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Subtracts two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n     **/\n    \"sub\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Multiplies two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n     **/\n    \"mul\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Divides two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n     **/\n    \"div\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"],\n              this[\"d\"] * P[\"n\"]\n              );\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * Ex: new Fraction(\"-17.(345)\").clone()\n     **/\n    \"clone\": function() {\n      return new Fraction(this);\n    },\n\n    /**\n     * Calculates the modulo of two rational numbers - a more precise fmod\n     *\n     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n     **/\n    \"mod\": function(a, b) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return new Fraction(NaN);\n      }\n\n      if (a === undefined) {\n        return new Fraction(this[\"s\"] * this[\"n\"] % this[\"d\"], 1);\n      }\n\n      parse(a, b);\n      if (0 === P[\"n\"] && 0 === this[\"d\"]) {\n        Fraction(0, 0); // Throw DivisionByZero\n      }\n\n      /*\n       * First silly attempt, kinda slow\n       *\n       return that[\"sub\"]({\n       \"n\": num[\"n\"] * Math.floor((this.n / this.d) / (num.n / num.d)),\n       \"d\": num[\"d\"],\n       \"s\": this[\"s\"]\n       });*/\n\n      /*\n       * New attempt: a1 / b1 = a2 / b2 * q + r\n       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r\n       * => (b2 * a1 % a2 * b1) / (b1 * b2)\n       */\n      return new Fraction(\n              this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]),\n              P[\"d\"] * this[\"d\"]\n              );\n    },\n\n    /**\n     * Calculates the fractional gcd of two rational numbers\n     *\n     * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n     */\n    \"gcd\": function(a, b) {\n\n      parse(a, b);\n\n      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n      return new Fraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n    },\n\n    /**\n     * Calculates the fractional lcm of two rational numbers\n     *\n     * Ex: new Fraction(5,8).lcm(3,7) => 15\n     */\n    \"lcm\": function(a, b) {\n\n      parse(a, b);\n\n      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n      if (P[\"n\"] === 0 && this[\"n\"] === 0) {\n        return new Fraction;\n      }\n      return new Fraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n    },\n\n    /**\n     * Calculates the ceil of a rational number\n     *\n     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n     **/\n    \"ceil\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.ceil(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Calculates the floor of a rational number\n     *\n     * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n     **/\n    \"floor\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.floor(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Rounds a rational numbers\n     *\n     * Ex: new Fraction('4.(3)').round() => (4 / 1)\n     **/\n    \"round\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.round(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Gets the inverse of the fraction, means numerator and denumerator are exchanged\n     *\n     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n     **/\n    \"inverse\": function() {\n\n      return new Fraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n    },\n\n    /**\n     * Calculates the fraction to some integer exponent\n     *\n     * Ex: new Fraction(-1,2).pow(-3) => -8\n     */\n    \"pow\": function(m) {\n\n      if (m < 0) {\n        return new Fraction(Math.pow(this['s'] * this[\"d\"], -m), Math.pow(this[\"n\"], -m));\n      } else {\n        return new Fraction(Math.pow(this['s'] * this[\"n\"], m), Math.pow(this[\"d\"], m));\n      }\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"equals\": function(a, b) {\n\n      parse(a, b);\n      return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"]; // Same as compare() === 0\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"compare\": function(a, b) {\n\n      parse(a, b);\n      var t = (this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"]);\n      return (0 < t) - (t < 0);\n    },\n\n    \"simplify\": function(eps) {\n\n      // First naive implementation, needs improvement\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return this;\n      }\n\n      var cont = this['abs']()['toContinued']();\n\n      eps = eps || 0.001;\n\n      function rec(a) {\n        if (a.length === 1)\n          return new Fraction(a[0]);\n        return rec(a.slice(1))['inverse']()['add'](a[0]);\n      }\n\n      for (var i = 0; i < cont.length; i++) {\n        var tmp = rec(cont.slice(0, i + 1));\n        if (tmp['sub'](this['abs']())['abs']().valueOf() < eps) {\n          return tmp['mul'](this['s']);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Check if two rational numbers are divisible\n     *\n     * Ex: new Fraction(19.6).divisible(1.5);\n     */\n    \"divisible\": function(a, b) {\n\n      parse(a, b);\n      return !(!(P[\"n\"] * this[\"d\"]) || ((this[\"n\"] * P[\"d\"]) % (P[\"n\"] * this[\"d\"])));\n    },\n\n    /**\n     * Returns a decimal representation of the fraction\n     *\n     * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n     **/\n    'valueOf': function() {\n\n      return this[\"s\"] * this[\"n\"] / this[\"d\"];\n    },\n\n    /**\n     * Returns a string-fraction representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toFraction() => \"4 1/3\"\n     **/\n    'toFraction': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str += '-';\n      }\n\n      if (d === 1) {\n        str += n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str += whole;\n          str += \" \";\n          n %= d;\n        }\n\n        str += n;\n        str += '/';\n        str += d;\n      }\n      return str;\n    },\n\n    /**\n     * Returns a latex representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n     **/\n    'toLatex': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str += '-';\n      }\n\n      if (d === 1) {\n        str += n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str += whole;\n          n %= d;\n        }\n\n        str += \"\\\\frac{\";\n        str += n;\n        str += '}{';\n        str += d;\n        str += '}';\n      }\n      return str;\n    },\n\n    /**\n     * Returns an array of continued fraction elements\n     *\n     * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n     */\n    'toContinued': function() {\n\n      var t;\n      var a = this['n'];\n      var b = this['d'];\n      var res = [];\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return res;\n      }\n\n      do {\n        res.push(Math.floor(a / b));\n        t = a % b;\n        a = b;\n        b = t;\n      } while (a !== 1);\n\n      return res;\n    },\n\n    /**\n     * Creates a string representation of a fraction with all digits\n     *\n     * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n     **/\n    'toString': function(dec) {\n\n      var g;\n      var N = this[\"n\"];\n      var D = this[\"d\"];\n\n      if (isNaN(N) || isNaN(D)) {\n        return \"NaN\";\n      }\n\n      if (!Fraction['REDUCE']) {\n        g = gcd(N, D);\n        N /= g;\n        D /= g;\n      }\n\n      dec = dec || 15; // 15 = decimal places when no repitation\n\n      var cycLen = cycleLen(N, D); // Cycle length\n      var cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n      var str = this['s'] === -1 ? \"-\" : \"\";\n\n      str += N / D | 0;\n\n      N %= D;\n      N *= 10;\n\n      if (N)\n        str += \".\";\n\n      if (cycLen) {\n\n        for (var i = cycOff; i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n        str += \"(\";\n        for (var i = cycLen; i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n        str += \")\";\n      } else {\n        for (var i = dec; N && i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n      }\n      return str;\n    }\n  };\n\n  if (typeof define === \"function\" && define[\"amd\"]) {\n    define([], function() {\n      return Fraction;\n    });\n  } else if (typeof exports === \"object\") {\n    Object.defineProperty(exports, \"__esModule\", {'value': true});\n    Fraction['default'] = Fraction;\n    Fraction['Fraction'] = Fraction;\n    module['exports'] = Fraction;\n  } else {\n    root['Fraction'] = Fraction;\n  }\n\n})(this);\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var hyAm = moment.defineLocale('hy-am', {\n        months : {\n            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),\n            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')\n        },\n        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),\n        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),\n        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY թ.',\n            LLL : 'D MMMM YYYY թ., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'\n        },\n        calendar : {\n            sameDay: '[այսօր] LT',\n            nextDay: '[վաղը] LT',\n            lastDay: '[երեկ] LT',\n            nextWeek: function () {\n                return 'dddd [օրը ժամը] LT';\n            },\n            lastWeek: function () {\n                return '[անցած] dddd [օրը ժամը] LT';\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s հետո',\n            past : '%s առաջ',\n            s : 'մի քանի վայրկյան',\n            ss : '%d վայրկյան',\n            m : 'րոպե',\n            mm : '%d րոպե',\n            h : 'ժամ',\n            hh : '%d ժամ',\n            d : 'օր',\n            dd : '%d օր',\n            M : 'ամիս',\n            MM : '%d ամիս',\n            y : 'տարի',\n            yy : '%d տարի'\n        },\n        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,\n        isPM: function (input) {\n            return /^(ցերեկվա|երեկոյան)$/.test(input);\n        },\n        meridiem : function (hour) {\n            if (hour < 4) {\n                return 'գիշերվա';\n            } else if (hour < 12) {\n                return 'առավոտվա';\n            } else if (hour < 17) {\n                return 'ցերեկվա';\n            } else {\n                return 'երեկոյան';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}|\\d{1,2}-(ին|րդ)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'DDD':\n                case 'w':\n                case 'W':\n                case 'DDDo':\n                    if (number === 1) {\n                        return number + '-ին';\n                    }\n                    return number + '-րդ';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return hyAm;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ca = moment.defineLocale('ca', {\n        months : {\n            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n            format: 'de gener_de febrer_de març_d\\'abril_de maig_de juny_de juliol_d\\'agost_de setembre_d\\'octubre_de novembre_de desembre'.split('_'),\n            isFormat: /D[oD]?(\\s)+MMMM/\n        },\n        monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),\n        weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM [de] YYYY',\n            ll : 'D MMM YYYY',\n            LLL : 'D MMMM [de] YYYY [a les] H:mm',\n            lll : 'D MMM YYYY, H:mm',\n            LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',\n            llll : 'ddd D MMM YYYY, H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextDay : function () {\n                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastDay : function () {\n                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'd\\'aquí %s',\n            past : 'fa %s',\n            s : 'uns segons',\n            ss : '%d segons',\n            m : 'un minut',\n            mm : '%d minuts',\n            h : 'una hora',\n            hh : '%d hores',\n            d : 'un dia',\n            dd : '%d dies',\n            M : 'un mes',\n            MM : '%d mesos',\n            y : 'un any',\n            yy : '%d anys'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n        ordinal : function (number, period) {\n            var output = (number === 1) ? 'r' :\n                (number === 2) ? 'n' :\n                (number === 3) ? 'r' :\n                (number === 4) ? 't' : 'è';\n            if (period === 'w' || period === 'W') {\n                output = 'a';\n            }\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ca;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var frCa = moment.defineLocale('fr-ca', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        }\n    });\n\n    return frCa;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\n    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n    var monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    var nlBe = moment.defineLocale('nl-be', {\n        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n\n        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'over %s',\n            past : '%s geleden',\n            s : 'een paar seconden',\n            ss : '%d seconden',\n            m : 'één minuut',\n            mm : '%d minuten',\n            h : 'één uur',\n            hh : '%d uur',\n            d : 'één dag',\n            dd : '%d dagen',\n            M : 'één maand',\n            MM : '%d maanden',\n            y : 'één jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nlBe;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    var hi = moment.defineLocale('hi', {\n        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm बजे',\n            LTS : 'A h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm बजे',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[कल] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[कल] LT',\n            lastWeek : '[पिछले] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s में',\n            past : '%s पहले',\n            s : 'कुछ ही क्षण',\n            ss : '%d सेकंड',\n            m : 'एक मिनट',\n            mm : '%d मिनट',\n            h : 'एक घंटा',\n            hh : '%d घंटे',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महीने',\n            MM : '%d महीने',\n            y : 'एक वर्ष',\n            yy : '%d वर्ष'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n        meridiemParse: /रात|सुबह|दोपहर|शाम/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'रात') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सुबह') {\n                return hour;\n            } else if (meridiem === 'दोपहर') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'शाम') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात';\n            } else if (hour < 10) {\n                return 'सुबह';\n            } else if (hour < 17) {\n                return 'दोपहर';\n            } else if (hour < 20) {\n                return 'शाम';\n            } else {\n                return 'रात';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return hi;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n            '1': '૧',\n            '2': '૨',\n            '3': '૩',\n            '4': '૪',\n            '5': '૫',\n            '6': '૬',\n            '7': '૭',\n            '8': '૮',\n            '9': '૯',\n            '0': '૦'\n        },\n        numberMap = {\n            '૧': '1',\n            '૨': '2',\n            '૩': '3',\n            '૪': '4',\n            '૫': '5',\n            '૬': '6',\n            '૭': '7',\n            '૮': '8',\n            '૯': '9',\n            '૦': '0'\n        };\n\n    var gu = moment.defineLocale('gu', {\n        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),\n        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),\n        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),\n        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm વાગ્યે',\n            LTS: 'A h:mm:ss વાગ્યે',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'\n        },\n        calendar: {\n            sameDay: '[આજ] LT',\n            nextDay: '[કાલે] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[ગઇકાલે] LT',\n            lastWeek: '[પાછલા] dddd, LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%s મા',\n            past: '%s પેહલા',\n            s: 'અમુક પળો',\n            ss: '%d સેકંડ',\n            m: 'એક મિનિટ',\n            mm: '%d મિનિટ',\n            h: 'એક કલાક',\n            hh: '%d કલાક',\n            d: 'એક દિવસ',\n            dd: '%d દિવસ',\n            M: 'એક મહિનો',\n            MM: '%d મહિનો',\n            y: 'એક વર્ષ',\n            yy: '%d વર્ષ'\n        },\n        preparse: function (string) {\n            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.\n        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'રાત') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'સવાર') {\n                return hour;\n            } else if (meridiem === 'બપોર') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'સાંજ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'રાત';\n            } else if (hour < 10) {\n                return 'સવાર';\n            } else if (hour < 17) {\n                return 'બપોર';\n            } else if (hour < 20) {\n                return 'સાંજ';\n            } else {\n                return 'રાત';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6 // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return gu;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enIe = moment.defineLocale('en-ie', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enIe;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '១',\n        '2': '២',\n        '3': '៣',\n        '4': '៤',\n        '5': '៥',\n        '6': '៦',\n        '7': '៧',\n        '8': '៨',\n        '9': '៩',\n        '0': '០'\n    }, numberMap = {\n        '១': '1',\n        '២': '2',\n        '៣': '3',\n        '៤': '4',\n        '៥': '5',\n        '៦': '6',\n        '៧': '7',\n        '៨': '8',\n        '៩': '9',\n        '០': '0'\n    };\n\n    var km = moment.defineLocale('km', {\n        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n            '_'\n        ),\n        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n            '_'\n        ),\n        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ព្រឹក|ល្ងាច/,\n        isPM: function (input) {\n            return input === 'ល្ងាច';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ព្រឹក';\n            } else {\n                return 'ល្ងាច';\n            }\n        },\n        calendar: {\n            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',\n            nextDay: '[ស្អែក ម៉ោង] LT',\n            nextWeek: 'dddd [ម៉ោង] LT',\n            lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%sទៀត',\n            past: '%sមុន',\n            s: 'ប៉ុន្មានវិនាទី',\n            ss: '%d វិនាទី',\n            m: 'មួយនាទី',\n            mm: '%d នាទី',\n            h: 'មួយម៉ោង',\n            hh: '%d ម៉ោង',\n            d: 'មួយថ្ងៃ',\n            dd: '%d ថ្ងៃ',\n            M: 'មួយខែ',\n            MM: '%d ខែ',\n            y: 'មួយឆ្នាំ',\n            yy: '%d ឆ្នាំ'\n        },\n        dayOfMonthOrdinalParse : /ទី\\d{1,2}/,\n        ordinal : 'ទី%d',\n        preparse: function (string) {\n            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return km;\n\n})));\n","/*\r\n * Natural Sort algorithm for Javascript - Version 0.7 - Released under MIT license\r\n * Author: Jim Palmer (based on chunking idea from Dave Koelle)\r\n */\r\n/*jshint unused:false */\r\nmodule.exports = function naturalSort (a, b) {\r\n\t\"use strict\";\r\n\tvar re = /(^([+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?$|^0x[0-9a-f]+$|\\d+)/gi,\r\n\t\tsre = /(^[ ]*|[ ]*$)/g,\r\n\t\tdre = /(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,\r\n\t\thre = /^0x[0-9a-f]+$/i,\r\n\t\tore = /^0/,\r\n\t\ti = function(s) { return naturalSort.insensitive && ('' + s).toLowerCase() || '' + s; },\r\n\t\t// convert all to strings strip whitespace\r\n\t\tx = i(a).replace(sre, '') || '',\r\n\t\ty = i(b).replace(sre, '') || '',\r\n\t\t// chunk/tokenize\r\n\t\txN = x.replace(re, '\\0$1\\0').replace(/\\0$/,'').replace(/^\\0/,'').split('\\0'),\r\n\t\tyN = y.replace(re, '\\0$1\\0').replace(/\\0$/,'').replace(/^\\0/,'').split('\\0'),\r\n\t\t// numeric, hex or date detection\r\n\t\txD = parseInt(x.match(hre), 16) || (xN.length !== 1 && x.match(dre) && Date.parse(x)),\r\n\t\tyD = parseInt(y.match(hre), 16) || xD && y.match(dre) && Date.parse(y) || null,\r\n\t\toFxNcL, oFyNcL;\r\n\t// first try and sort Hex codes or Dates\r\n\tif (yD) {\r\n\t\tif ( xD < yD ) { return -1; }\r\n\t\telse if ( xD > yD ) { return 1; }\r\n\t}\r\n\t// natural sorting through split numeric strings and default strings\r\n\tfor(var cLoc=0, numS=Math.max(xN.length, yN.length); cLoc < numS; cLoc++) {\r\n\t\t// find floats not starting with '0', string or 0 if not defined (Clint Priest)\r\n\t\toFxNcL = !(xN[cLoc] || '').match(ore) && parseFloat(xN[cLoc]) || xN[cLoc] || 0;\r\n\t\toFyNcL = !(yN[cLoc] || '').match(ore) && parseFloat(yN[cLoc]) || yN[cLoc] || 0;\r\n\t\t// handle numeric vs string comparison - number < string - (Kyle Adams)\r\n\t\tif (isNaN(oFxNcL) !== isNaN(oFyNcL)) { return (isNaN(oFxNcL)) ? 1 : -1; }\r\n\t\t// rely on string comparison if different types - i.e. '02' < 2 != '02' < '2'\r\n\t\telse if (typeof oFxNcL !== typeof oFyNcL) {\r\n\t\t\toFxNcL += '';\r\n\t\t\toFyNcL += '';\r\n\t\t}\r\n\t\tif (oFxNcL < oFyNcL) { return -1; }\r\n\t\tif (oFxNcL > oFyNcL) { return 1; }\r\n\t}\r\n\treturn 0;\r\n};\r\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ms = moment.defineLocale('ms', {\n        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Esok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kelmarin pukul] LT',\n            lastWeek : 'dddd [lepas pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lepas',\n            s : 'beberapa saat',\n            ss : '%d saat',\n            m : 'seminit',\n            mm : '%d minit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return ms;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n            'ss': [number + 'sekundi', number + 'sekundit'],\n            'm' : ['ühe minuti', 'üks minut'],\n            'mm': [number + ' minuti', number + ' minutit'],\n            'h' : ['ühe tunni', 'tund aega', 'üks tund'],\n            'hh': [number + ' tunni', number + ' tundi'],\n            'd' : ['ühe päeva', 'üks päev'],\n            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],\n            'MM': [number + ' kuu', number + ' kuud'],\n            'y' : ['ühe aasta', 'aasta', 'üks aasta'],\n            'yy': [number + ' aasta', number + ' aastat']\n        };\n        if (withoutSuffix) {\n            return format[key][2] ? format[key][2] : format[key][1];\n        }\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    var et = moment.defineLocale('et', {\n        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),\n        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),\n        longDateFormat : {\n            LT   : 'H:mm',\n            LTS : 'H:mm:ss',\n            L    : 'DD.MM.YYYY',\n            LL   : 'D. MMMM YYYY',\n            LLL  : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[Täna,] LT',\n            nextDay  : '[Homme,] LT',\n            nextWeek : '[Järgmine] dddd LT',\n            lastDay  : '[Eile,] LT',\n            lastWeek : '[Eelmine] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s pärast',\n            past   : '%s tagasi',\n            s      : processRelativeTime,\n            ss     : processRelativeTime,\n            m      : processRelativeTime,\n            mm     : processRelativeTime,\n            h      : processRelativeTime,\n            hh     : processRelativeTime,\n            d      : processRelativeTime,\n            dd     : '%d päeva',\n            M      : processRelativeTime,\n            MM     : processRelativeTime,\n            y      : processRelativeTime,\n            yy     : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return et;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    /*jshint -W100*/\n    var si = moment.defineLocale('si', {\n        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),\n        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),\n        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),\n        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),\n        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'a h:mm',\n            LTS : 'a h:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY MMMM D',\n            LLL : 'YYYY MMMM D, a h:mm',\n            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'\n        },\n        calendar : {\n            sameDay : '[අද] LT[ට]',\n            nextDay : '[හෙට] LT[ට]',\n            nextWeek : 'dddd LT[ට]',\n            lastDay : '[ඊයේ] LT[ට]',\n            lastWeek : '[පසුගිය] dddd LT[ට]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%sකින්',\n            past : '%sකට පෙර',\n            s : 'තත්පර කිහිපය',\n            ss : 'තත්පර %d',\n            m : 'මිනිත්තුව',\n            mm : 'මිනිත්තු %d',\n            h : 'පැය',\n            hh : 'පැය %d',\n            d : 'දිනය',\n            dd : 'දින %d',\n            M : 'මාසය',\n            MM : 'මාස %d',\n            y : 'වසර',\n            yy : 'වසර %d'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} වැනි/,\n        ordinal : function (number) {\n            return number + ' වැනි';\n        },\n        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,\n        isPM : function (input) {\n            return input === 'ප.ව.' || input === 'පස් වරු';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'ප.ව.' : 'පස් වරු';\n            } else {\n                return isLower ? 'පෙ.ව.' : 'පෙර වරු';\n            }\n        }\n    });\n\n    return si;\n\n})));\n","/**\n * @license Complex.js v2.0.11 11/02/2016\n *\n * Copyright (c) 2016, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n/**\n *\n * This class allows the manipulation of complex numbers.\n * You can pass a complex number in different formats. Either as object, double, string or two integer parameters.\n *\n * Object form\n * { re: <real>, im: <imaginary> }\n * { arg: <angle>, abs: <radius> }\n * { phi: <angle>, r: <radius> }\n *\n * Array / Vector form\n * [ real, imaginary ]\n *\n * Double form\n * 99.3 - Single double value\n *\n * String form\n * '23.1337' - Simple real number\n * '15+3i' - a simple complex number\n * '3-i' - a simple complex number\n *\n * Example:\n *\n * var c = new Complex('99.3+8i');\n * c.mul({r: 3, i: 9}).div(4.9).sub(3, 2);\n *\n */\n\n(function(root) {\n\n  'use strict';\n\n  var cosh = function(x) {\n    return (Math.exp(x) + Math.exp(-x)) * 0.5;\n  };\n\n  var sinh = function(x) {\n    return (Math.exp(x) - Math.exp(-x)) * 0.5;\n  };\n\n  /**\n   * Calculates cos(x) - 1 using Taylor series if x is small.\n   *\n   * @param {number} x\n   * @returns {number} cos(x) - 1\n   */\n\n  var cosm1 = function(x) {\n    var limit = Math.PI/4;\n    if (x < -limit || x > limit) {\n      return (Math.cos(x) - 1.0);\n    }\n\n    var xx = x * x;\n    return xx *\n      (-0.5 + xx *\n        (1/24 + xx *\n          (-1/720 + xx *\n            (1/40320 + xx *\n              (-1/3628800 + xx *\n                (1/4790014600 + xx *\n                  (-1/87178291200 + xx *\n                    (1/20922789888000)\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n  };\n\n  var hypot = function(x, y) {\n\n    var a = Math.abs(x);\n    var b = Math.abs(y);\n\n    if (a < 3000 && b < 3000) {\n      return Math.sqrt(a * a + b * b);\n    }\n\n    if (a < b) {\n      a = b;\n      b = x / y;\n    } else {\n      b = y / x;\n    }\n    return a * Math.sqrt(1 + b * b);\n  };\n\n  var parser_exit = function() {\n    throw SyntaxError('Invalid Param');\n  };\n\n  /**\n   * Calculates log(sqrt(a^2+b^2)) in a way to avoid overflows\n   *\n   * @param {number} a\n   * @param {number} b\n   * @returns {number}\n   */\n  function logHypot(a, b) {\n\n    var _a = Math.abs(a);\n    var _b = Math.abs(b);\n\n    if (a === 0) {\n      return Math.log(_b);\n    }\n\n    if (b === 0) {\n      return Math.log(_a);\n    }\n\n    if (_a < 3000 && _b < 3000) {\n      return Math.log(a * a + b * b) * 0.5;\n    }\n\n    /* I got 4 ideas to compute this property without overflow:\n     *\n     * Testing 1000000 times with random samples for a,b ∈ [1, 1000000000] against a big decimal library to get an error estimate\n     *\n     * 1. Only eliminate the square root: (OVERALL ERROR: 3.9122483030951116e-11)\n\n     Math.log(a * a + b * b) / 2\n\n     *\n     *\n     * 2. Try to use the non-overflowing pythagoras: (OVERALL ERROR: 8.889760039210159e-10)\n\n     var fn = function(a, b) {\n     a = Math.abs(a);\n     b = Math.abs(b);\n     var t = Math.min(a, b);\n     a = Math.max(a, b);\n     t = t / a;\n\n     return Math.log(a) + Math.log(1 + t * t) / 2;\n     };\n\n     * 3. Abuse the identity cos(atan(y/x) = x / sqrt(x^2+y^2): (OVERALL ERROR: 3.4780178737037204e-10)\n\n     Math.log(a / Math.cos(Math.atan2(b, a)))\n\n     * 4. Use 3. and apply log rules: (OVERALL ERROR: 1.2014087502620896e-9)\n\n     Math.log(a) - Math.log(Math.cos(Math.atan2(b, a)))\n\n     */\n\n    return Math.log(a / Math.cos(Math.atan2(b, a)));\n  }\n\n  var parse = function(a, b) {\n\n    var z = {'re': 0, 'im': 0};\n\n    if (a === undefined || a === null) {\n      z['re'] =\n              z['im'] = 0;\n    } else if (b !== undefined) {\n      z['re'] = a;\n      z['im'] = b;\n    } else\n      switch (typeof a) {\n\n        case 'object':\n\n          if ('im' in a && 're' in a) {\n            z['re'] = a['re'];\n            z['im'] = a['im'];\n          } else if ('abs' in a && 'arg' in a) {\n            if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {\n              return Complex['INFINITY'];\n            }\n            z['re'] = a['abs'] * Math.cos(a['arg']);\n            z['im'] = a['abs'] * Math.sin(a['arg']);\n          } else if ('r' in a && 'phi' in a) {\n            if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {\n              return Complex['INFINITY'];\n            }\n            z['re'] = a['r'] * Math.cos(a['phi']);\n            z['im'] = a['r'] * Math.sin(a['phi']);\n          } else if (a.length === 2) { // Quick array check\n            z['re'] = a[0];\n            z['im'] = a[1];\n          } else {\n            parser_exit();\n          }\n          break;\n\n        case 'string':\n\n          z['im'] = /* void */\n                  z['re'] = 0;\n\n          var tokens = a.match(/\\d+\\.?\\d*e[+-]?\\d+|\\d+\\.?\\d*|\\.\\d+|./g);\n          var plus = 1;\n          var minus = 0;\n\n          if (tokens === null) {\n            parser_exit();\n          }\n\n          for (var i = 0; i < tokens.length; i++) {\n\n            var c = tokens[i];\n\n            if (c === ' ' || c === '\\t' || c === '\\n') {\n              /* void */\n            } else if (c === '+') {\n              plus++;\n            } else if (c === '-') {\n              minus++;\n            } else if (c === 'i' || c === 'I') {\n\n              if (plus + minus === 0) {\n                parser_exit();\n              }\n\n              if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);\n                i++;\n              } else {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');\n              }\n              plus = minus = 0;\n\n            } else {\n\n              if (plus + minus === 0 || isNaN(c)) {\n                parser_exit();\n              }\n\n              if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + c);\n                i++;\n              } else {\n                z['re'] += parseFloat((minus % 2 ? '-' : '') + c);\n              }\n              plus = minus = 0;\n            }\n          }\n\n          // Still something on the stack\n          if (plus + minus > 0) {\n            parser_exit();\n          }\n          break;\n\n        case 'number':\n          z['im'] = 0;\n          z['re'] = a;\n          break;\n\n        default:\n          parser_exit();\n      }\n\n    if (isNaN(z['re']) || isNaN(z['im'])) {\n      // If a calculation is NaN, we treat it as NaN and don't throw\n      //parser_exit();\n    }\n\n    return z;\n  };\n\n  /**\n   * @constructor\n   * @returns {Complex}\n   */\n  function Complex(a, b) {\n\n    if (!(this instanceof Complex)) {\n      return new Complex(a, b);\n    }\n\n    var z = parse(a, b);\n\n    this['re'] = z['re'];\n    this['im'] = z['im'];\n  }\n\n  Complex.prototype = {\n\n    're': 0,\n    'im': 0,\n\n    /**\n     * Calculates the sign of a complex number, which is a normalized complex\n     *\n     * @returns {Complex}\n     */\n    'sign': function() {\n\n      var abs = this['abs']();\n\n      return new Complex(\n              this['re'] / abs,\n              this['im'] / abs);\n    },\n\n    /**\n     * Adds two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'add': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity + Infinity = NaN\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      }\n\n      // Infinity + z = Infinity { where z != Infinity }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(\n              this['re'] + z['re'],\n              this['im'] + z['im']);\n    },\n\n    /**\n     * Subtracts two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'sub': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity - Infinity = NaN\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      }\n\n      // Infinity - z = Infinity { where z != Infinity }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(\n              this['re'] - z['re'],\n              this['im'] - z['im']);\n    },\n\n    /**\n     * Multiplies two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'mul': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity * 0 = NaN\n      if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {\n        return Complex['NAN'];\n      }\n\n      // Infinity * z = Infinity { where z != 0 }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      // Short circuit for real values\n      if (z['im'] === 0 && this['im'] === 0) {\n        return new Complex(this['re'] * z['re'], 0);\n      }\n\n      return new Complex(\n              this['re'] * z['re'] - this['im'] * z['im'],\n              this['re'] * z['im'] + this['im'] * z['re']);\n    },\n\n    /**\n     * Divides two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'div': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // 0 / 0 = NaN and Infinity / Infinity = NaN\n      if ((this['isZero']() && z['isZero']()) || (this['isInfinite']() && z['isInfinite']())) {\n        return Complex['NAN'];\n      }\n\n      // Infinity / 0 = Infinity\n      if (this['isInfinite']() || z['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      // 0 / Infinity = 0\n      if (this['isZero']() || z['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      a = this['re'];\n      b = this['im'];\n\n      var c = z['re'];\n      var d = z['im'];\n      var t, x;\n\n      if (0 === d) {\n        // Divisor is real\n        return new Complex(a / c, b / c);\n      }\n\n      if (Math.abs(c) < Math.abs(d)) {\n\n        x = c / d;\n        t = c * x + d;\n\n        return new Complex(\n                (a * x + b) / t,\n                (b * x - a) / t);\n\n      } else {\n\n        x = d / c;\n        t = d * x + c;\n\n        return new Complex(\n                (a + b * x) / t,\n                (b - a * x) / t);\n      }\n    },\n\n    /**\n     * Calculate the power of two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'pow': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      a = this['re'];\n      b = this['im'];\n\n      if (z['isZero']()) {\n        return Complex['ONE'];\n      }\n\n      // If the exponent is real\n      if (z['im'] === 0) {\n\n        if (b === 0 && a >= 0) {\n\n          return new Complex(Math.pow(a, z['re']), 0);\n\n        } else if (a === 0) { // If base is fully imaginary\n\n          switch ((z['re'] % 4 + 4) % 4) {\n            case 0:\n              return new Complex(Math.pow(b, z['re']), 0);\n            case 1:\n              return new Complex(0, Math.pow(b, z['re']));\n            case 2:\n              return new Complex(-Math.pow(b, z['re']), 0);\n            case 3:\n              return new Complex(0, -Math.pow(b, z['re']));\n          }\n        }\n      }\n\n      /* I couldn't find a good formula, so here is a derivation and optimization\n       *\n       * z_1^z_2 = (a + bi)^(c + di)\n       *         = exp((c + di) * log(a + bi)\n       *         = pow(a^2 + b^2, (c + di) / 2) * exp(i(c + di)atan2(b, a))\n       * =>...\n       * Re = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * cos(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       * Im = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * sin(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       *\n       * =>...\n       * Re = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * cos(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       * Im = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * sin(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       *\n       * =>\n       * Re = exp(c * logsq2 - d * arg(z_1)) * cos(d * logsq2 + c * arg(z_1))\n       * Im = exp(c * logsq2 - d * arg(z_1)) * sin(d * logsq2 + c * arg(z_1))\n       *\n       */\n\n      if (a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0) {\n        return Complex['ZERO'];\n      }\n\n      var arg = Math.atan2(b, a);\n      var loh = logHypot(a, b);\n\n      a = Math.exp(z['re'] * loh - z['im'] * arg);\n      b = z['im'] * loh + z['re'] * arg;\n      return new Complex(\n              a * Math.cos(b),\n              a * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex square root\n     *\n     * @returns {Complex}\n     */\n    'sqrt': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n      var r = this['abs']();\n\n      var re, im;\n\n      if (a >= 0) {\n\n        if (b === 0) {\n          return new Complex(Math.sqrt(a), 0);\n        }\n\n        re = 0.5 * Math.sqrt(2.0 * (r + a));\n      } else {\n        re = Math.abs(b) / Math.sqrt(2 * (r - a));\n      }\n\n      if (a <= 0) {\n        im = 0.5 * Math.sqrt(2.0 * (r - a));\n      } else {\n        im = Math.abs(b) / Math.sqrt(2 * (r + a));\n      }\n\n      return new Complex(re, b < 0 ? -im : im);\n    },\n\n    /**\n     * Calculate the complex exponent\n     *\n     * @returns {Complex}\n     */\n    'exp': function() {\n\n      var tmp = Math.exp(this['re']);\n\n      if (this['im'] === 0) {\n        //return new Complex(tmp, 0);\n      }\n      return new Complex(\n              tmp * Math.cos(this['im']),\n              tmp * Math.sin(this['im']));\n    },\n\n    /**\n     * Calculate the complex exponent and subtracts one.\n     *\n     * This may be more accurate than `Complex(x).exp().sub(1)` if\n     * `x` is small.\n     *\n     * @returns {Complex}\n     */\n    'expm1': function() {\n\n      /**\n       * exp(a + i*b) - 1\n       = exp(a) * (cos(b) + j*sin(b)) - 1\n       = expm1(a)*cos(b) + cosm1(b) + j*exp(a)*sin(b)\n       */\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              Math.expm1(a) * Math.cos(b) + cosm1(b),\n              Math.exp(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the natural log\n     *\n     * @returns {Complex}\n     */\n    'log': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0 && a > 0) {\n        //return new Complex(Math.log(a), 0);\n      }\n\n      return new Complex(\n              logHypot(a, b),\n              Math.atan2(b, a));\n    },\n\n    /**\n     * Calculate the magnitude of the complex number\n     *\n     * @returns {number}\n     */\n    'abs': function() {\n\n      return hypot(this['re'], this['im']);\n    },\n\n    /**\n     * Calculate the angle of the complex number\n     *\n     * @returns {number}\n     */\n    'arg': function() {\n\n      return Math.atan2(this['im'], this['re']);\n    },\n\n    /**\n     * Calculate the sine of the complex number\n     *\n     * @returns {Complex}\n     */\n    'sin': function() {\n\n      // sin(c) = (e^b - e^(-b)) / (2i)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              Math.sin(a) * cosh(b),\n              Math.cos(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the cosine\n     *\n     * @returns {Complex}\n     */\n    'cos': function() {\n\n      // cos(z) = (e^b + e^(-b)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              Math.cos(a) * cosh(b),\n              -Math.sin(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the tangent\n     *\n     * @returns {Complex}\n     */\n    'tan': function() {\n\n      // tan(c) = (e^(ci) - e^(-ci)) / (i(e^(ci) + e^(-ci)))\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) + cosh(b);\n\n      return new Complex(\n              Math.sin(a) / d,\n              sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cotangent\n     *\n     * @returns {Complex}\n     */\n    'cot': function() {\n\n      // cot(c) = i(e^(ci) + e^(-ci)) / (e^(ci) - e^(-ci))\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) - cosh(b);\n\n      return new Complex(\n              -Math.sin(a) / d,\n              sinh(b) / d);\n    },\n\n    /**\n     * Calculate the secant\n     *\n     * @returns {Complex}\n     */\n    'sec': function() {\n\n      // sec(c) = 2 / (e^(ci) + e^(-ci))\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);\n\n      return new Complex(\n              Math.cos(a) * cosh(b) / d,\n              Math.sin(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cosecans\n     *\n     * @returns {Complex}\n     */\n    'csc': function() {\n\n      // csc(c) = 2i / (e^(ci) - e^(-ci))\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);\n\n      return new Complex(\n              Math.sin(a) * cosh(b) / d,\n              -Math.cos(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the complex arcus sinus\n     *\n     * @returns {Complex}\n     */\n    'asin': function() {\n\n      // asin(c) = -i * log(ci + sqrt(1 - c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var t1 = new Complex(\n              b * b - a * a + 1,\n              -2 * a * b)['sqrt']();\n\n      var t2 = new Complex(\n              t1['re'] - b,\n              t1['im'] + a)['log']();\n\n      return new Complex(t2['im'], -t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cosinus\n     *\n     * @returns {Complex}\n     */\n    'acos': function() {\n\n      // acos(c) = i * log(c - i * sqrt(1 - c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var t1 = new Complex(\n              b * b - a * a + 1,\n              -2 * a * b)['sqrt']();\n\n      var t2 = new Complex(\n              t1['re'] - b,\n              t1['im'] + a)['log']();\n\n      return new Complex(Math.PI / 2 - t2['im'], t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus tangent\n     *\n     * @returns {Complex}\n     */\n    'atan': function() {\n\n      // atan(c) = i / 2 log((i + x) / (i - x))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0) {\n\n        if (b === 1) {\n          return new Complex(0, Infinity);\n        }\n\n        if (b === -1) {\n          return new Complex(0, -Infinity);\n        }\n      }\n\n      var d = a * a + (1.0 - b) * (1.0 - b);\n\n      var t1 = new Complex(\n              (1 - b * b - a * a) / d,\n              -2 * a / d).log();\n\n      return new Complex(-0.5 * t1['im'], 0.5 * t1['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cotangent\n     *\n     * @returns {Complex}\n     */\n    'acot': function() {\n\n      // acot(c) = i / 2 log((c - i) / (c + i))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n        return new Complex(Math.atan2(1, a), 0);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).atan()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).atan();\n    },\n\n    /**\n     * Calculate the complex arcus secant\n     *\n     * @returns {Complex}\n     */\n    'asec': function() {\n\n      // asec(c) = -i * log(1 / c + sqrt(1 - i / c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).acos()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).acos();\n    },\n\n    /**\n     * Calculate the complex arcus cosecans\n     *\n     * @returns {Complex}\n     */\n    'acsc': function() {\n\n      // acsc(c) = -i * log(i / c + sqrt(1 - 1 / c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(Math.PI / 2, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).asin()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).asin();\n    },\n\n    /**\n     * Calculate the complex sinh\n     *\n     * @returns {Complex}\n     */\n    'sinh': function() {\n\n      // sinh(c) = (e^c - e^-c) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              sinh(a) * Math.cos(b),\n              cosh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex cosh\n     *\n     * @returns {Complex}\n     */\n    'cosh': function() {\n\n      // cosh(c) = (e^c + e^-c) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              cosh(a) * Math.cos(b),\n              sinh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex tanh\n     *\n     * @returns {Complex}\n     */\n    'tanh': function() {\n\n      // tanh(c) = (e^c - e^-c) / (e^c + e^-c)\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) + Math.cos(b);\n\n      return new Complex(\n              sinh(a) / d,\n              Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'coth': function() {\n\n      // coth(c) = (e^c + e^-c) / (e^c - e^-c)\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) - Math.cos(b);\n\n      return new Complex(\n              sinh(a) / d,\n              -Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'csch': function() {\n\n      // csch(c) = 2 / (e^c - e^-c)\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) - cosh(2 * a);\n\n      return new Complex(\n              -2 * sinh(a) * Math.cos(b) / d,\n              2 * cosh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex sech\n     *\n     * @returns {Complex}\n     */\n    'sech': function() {\n\n      // sech(c) = 2 / (e^c + e^-c)\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) + cosh(2 * a);\n\n      return new Complex(\n              2 * cosh(a) * Math.cos(b) / d,\n              -2 * sinh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex asinh\n     *\n     * @returns {Complex}\n     */\n    'asinh': function() {\n\n      // asinh(c) = log(c + sqrt(c^2 + 1))\n\n      var tmp = this['im'];\n      this['im'] = -this['re'];\n      this['re'] = tmp;\n      var res = this['asin']();\n\n      this['re'] = -this['im'];\n      this['im'] = tmp;\n      tmp = res['re'];\n\n      res['re'] = -res['im'];\n      res['im'] = tmp;\n      return res;\n    },\n\n    /**\n     * Calculate the complex asinh\n     *\n     * @returns {Complex}\n     */\n    'acosh': function() {\n\n      // acosh(c) = log(c + sqrt(c^2 - 1))\n\n      var res = this['acos']();\n      if (res['im'] <= 0) {\n        var tmp = res['re'];\n        res['re'] = -res['im'];\n        res['im'] = tmp;\n      } else {\n        var tmp = res['im'];\n        res['im'] = -res['re'];\n        res['re'] = tmp;\n      }\n      return res;\n    },\n\n    /**\n     * Calculate the complex atanh\n     *\n     * @returns {Complex}\n     */\n    'atanh': function() {\n\n      // atanh(c) = log((1+c) / (1-c)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var noIM = a > 1 && b === 0;\n      var oneMinus = 1 - a;\n      var onePlus = 1 + a;\n      var d = oneMinus * oneMinus + b * b;\n\n      var x = (d !== 0)\n              ? new Complex(\n                      (onePlus * oneMinus - b * b) / d,\n                      (b * oneMinus + onePlus * b) / d)\n              : new Complex(\n                      (a !== -1) ? (a / 0) : 0,\n                      (b !== 0) ? (b / 0) : 0);\n\n      var temp = x['re'];\n      x['re'] = logHypot(x['re'], x['im']) / 2;\n      x['im'] = Math.atan2(x['im'], temp) / 2;\n      if (noIM) {\n        x['im'] = -x['im'];\n      }\n      return x;\n    },\n\n    /**\n     * Calculate the complex acoth\n     *\n     * @returns {Complex}\n     */\n    'acoth': function() {\n\n      // acoth(c) = log((c+1) / (c-1)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Math.PI / 2);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).atanh()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).atanh();\n    },\n\n    /**\n     * Calculate the complex acsch\n     *\n     * @returns {Complex}\n     */\n    'acsch': function() {\n\n      // acsch(c) = log((1+sqrt(1+c^2))/c)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n\n        return new Complex(\n                (a !== 0)\n                ? Math.log(a + Math.sqrt(a * a + 1))\n                : Infinity, 0);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).asinh()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).asinh();\n    },\n\n    /**\n     * Calculate the complex asech\n     *\n     * @returns {Complex}\n     */\n    'asech': function() {\n\n      // asech(c) = log((1+sqrt(1-c^2))/c)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).acosh()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).acosh();\n    },\n\n    /**\n     * Calculate the complex inverse 1/z\n     *\n     * @returns {Complex}\n     */\n    'inverse': function() {\n\n      // 1 / 0 = Infinity and 1 / Infinity = 0\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      if (this['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var d = a * a + b * b;\n\n      return new Complex(a / d, -b / d);\n    },\n\n    /**\n     * Returns the complex conjugate\n     *\n     * @returns {Complex}\n     */\n    'conjugate': function() {\n\n      return new Complex(this['re'], -this['im']);\n    },\n\n    /**\n     * Gets the negated complex number\n     *\n     * @returns {Complex}\n     */\n    'neg': function() {\n\n      return new Complex(-this['re'], -this['im']);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'ceil': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n              Math.ceil(this['re'] * places) / places,\n              Math.ceil(this['im'] * places) / places);\n    },\n\n    /**\n     * Floors the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'floor': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n              Math.floor(this['re'] * places) / places,\n              Math.floor(this['im'] * places) / places);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'round': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n              Math.round(this['re'] * places) / places,\n              Math.round(this['im'] * places) / places);\n    },\n\n    /**\n     * Compares two complex numbers\n     *\n     * **Note:** new Complex(Infinity).equals(Infinity) === false\n     *\n     * @returns {boolean}\n     */\n    'equals': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&\n              Math.abs(z['im'] - this['im']) <= Complex['EPSILON'];\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * @returns {Complex}\n     */\n    'clone': function() {\n\n      return new Complex(this['re'], this['im']);\n    },\n\n    /**\n     * Gets a string of the actual complex number\n     *\n     * @returns {string}\n     */\n    'toString': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n      var ret = '';\n\n      if (this['isNaN']()) {\n        return 'NaN';\n      }\n\n      if (this['isZero']()) {\n        return '0';\n      }\n\n      if (this['isInfinite']()) {\n        return 'Infinity';\n      }\n\n      if (a !== 0) {\n        ret += a;\n      }\n\n      if (b !== 0) {\n\n        if (a !== 0) {\n          ret += b < 0 ? ' - ' : ' + ';\n        } else if (b < 0) {\n          ret += '-';\n        }\n\n        b = Math.abs(b);\n\n        if (1 !== b) {\n          ret += b;\n        }\n        ret += 'i';\n      }\n\n      if (!ret)\n        return '0';\n\n      return ret;\n    },\n\n    /**\n     * Returns the actual number as a vector\n     *\n     * @returns {Array}\n     */\n    'toVector': function() {\n\n      return [this['re'], this['im']];\n    },\n\n    /**\n     * Returns the actual real value of the current object\n     *\n     * @returns {number|null}\n     */\n    'valueOf': function() {\n\n      if (this['im'] === 0) {\n        return this['re'];\n      }\n      return null;\n    },\n\n    /**\n     * Determines whether a complex number is not on the Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isNaN': function() {\n      return isNaN(this['re']) || isNaN(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the zero pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isZero': function() {\n      return (\n              (this['re'] === 0 || this['re'] === -0) &&\n              (this['im'] === 0 || this['im'] === -0)\n              );\n    },\n\n    /**\n     * Determines whether a complex number is not at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isFinite': function() {\n      return isFinite(this['re']) && isFinite(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isInfinite': function() {\n      return !(this['isNaN']() || this['isFinite']());\n    }\n  };\n\n  Complex['ZERO'] = new Complex(0, 0);\n  Complex['ONE'] = new Complex(1, 0);\n  Complex['I'] = new Complex(0, 1);\n  Complex['PI'] = new Complex(Math.PI, 0);\n  Complex['E'] = new Complex(Math.E, 0);\n  Complex['INFINITY'] = new Complex(Infinity, Infinity);\n  Complex['NAN'] = new Complex(NaN, NaN);\n  Complex['EPSILON'] = 1e-16;\n\n  if (typeof define === 'function' && define['amd']) {\n    define([], function() {\n      return Complex;\n    });\n  } else if (typeof exports === 'object') {\n    Object.defineProperty(exports, \"__esModule\", {'value': true});\n    Complex['default'] = Complex;\n    Complex['Complex'] = Complex;\n    module['exports'] = Complex;\n  } else {\n    root['Complex'] = Complex;\n  }\n\n})(this);\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var pt = moment.defineLocale('pt', {\n        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY HH:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : 'há %s',\n            s : 'segundos',\n            ss : '%d segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return pt;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '੧',\n        '2': '੨',\n        '3': '੩',\n        '4': '੪',\n        '5': '੫',\n        '6': '੬',\n        '7': '੭',\n        '8': '੮',\n        '9': '੯',\n        '0': '੦'\n    },\n    numberMap = {\n        '੧': '1',\n        '੨': '2',\n        '੩': '3',\n        '੪': '4',\n        '੫': '5',\n        '੬': '6',\n        '੭': '7',\n        '੮': '8',\n        '੯': '9',\n        '੦': '0'\n    };\n\n    var paIn = moment.defineLocale('pa-in', {\n        // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.\n        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),\n        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm ਵਜੇ',\n            LTS : 'A h:mm:ss ਵਜੇ',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'\n        },\n        calendar : {\n            sameDay : '[ਅਜ] LT',\n            nextDay : '[ਕਲ] LT',\n            nextWeek : '[ਅਗਲਾ] dddd, LT',\n            lastDay : '[ਕਲ] LT',\n            lastWeek : '[ਪਿਛਲੇ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ਵਿੱਚ',\n            past : '%s ਪਿਛਲੇ',\n            s : 'ਕੁਝ ਸਕਿੰਟ',\n            ss : '%d ਸਕਿੰਟ',\n            m : 'ਇਕ ਮਿੰਟ',\n            mm : '%d ਮਿੰਟ',\n            h : 'ਇੱਕ ਘੰਟਾ',\n            hh : '%d ਘੰਟੇ',\n            d : 'ਇੱਕ ਦਿਨ',\n            dd : '%d ਦਿਨ',\n            M : 'ਇੱਕ ਮਹੀਨਾ',\n            MM : '%d ਮਹੀਨੇ',\n            y : 'ਇੱਕ ਸਾਲ',\n            yy : '%d ਸਾਲ'\n        },\n        preparse: function (string) {\n            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.\n        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ਰਾਤ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ਸਵੇਰ') {\n                return hour;\n            } else if (meridiem === 'ਦੁਪਹਿਰ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ਸ਼ਾਮ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ਰਾਤ';\n            } else if (hour < 10) {\n                return 'ਸਵੇਰ';\n            } else if (hour < 17) {\n                return 'ਦੁਪਹਿਰ';\n            } else if (hour < 20) {\n                return 'ਸ਼ਾਮ';\n            } else {\n                return 'ਰਾਤ';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return paIn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'\n    ];\n\n    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];\n\n    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];\n\n    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];\n\n    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];\n\n    var gd = moment.defineLocale('gd', {\n        months : months,\n        monthsShort : monthsShort,\n        monthsParseExact : true,\n        weekdays : weekdays,\n        weekdaysShort : weekdaysShort,\n        weekdaysMin : weekdaysMin,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[An-diugh aig] LT',\n            nextDay : '[A-màireach aig] LT',\n            nextWeek : 'dddd [aig] LT',\n            lastDay : '[An-dè aig] LT',\n            lastWeek : 'dddd [seo chaidh] [aig] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ann an %s',\n            past : 'bho chionn %s',\n            s : 'beagan diogan',\n            ss : '%d diogan',\n            m : 'mionaid',\n            mm : '%d mionaidean',\n            h : 'uair',\n            hh : '%d uairean',\n            d : 'latha',\n            dd : '%d latha',\n            M : 'mìos',\n            MM : '%d mìosan',\n            y : 'bliadhna',\n            yy : '%d bliadhna'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(d|na|mh)/,\n        ordinal : function (number) {\n            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return gd;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\n    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n    var monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    var nl = moment.defineLocale('nl', {\n        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n\n        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'over %s',\n            past : '%s geleden',\n            s : 'een paar seconden',\n            ss : '%d seconden',\n            m : 'één minuut',\n            mm : '%d minuten',\n            h : 'één uur',\n            hh : '%d uur',\n            d : 'één dag',\n            dd : '%d dagen',\n            M : 'één maand',\n            MM : '%d maanden',\n            y : 'één jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var xPseudo = moment.defineLocale('x-pseudo', {\n        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),\n        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),\n        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),\n        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[T~ódá~ý át] LT',\n            nextDay : '[T~ómó~rró~w át] LT',\n            nextWeek : 'dddd [át] LT',\n            lastDay : '[Ý~ést~érdá~ý át] LT',\n            lastWeek : '[L~ást] dddd [át] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'í~ñ %s',\n            past : '%s á~gó',\n            s : 'á ~féw ~sécó~ñds',\n            ss : '%d s~écóñ~ds',\n            m : 'á ~míñ~úté',\n            mm : '%d m~íñú~tés',\n            h : 'á~ñ hó~úr',\n            hh : '%d h~óúrs',\n            d : 'á ~dáý',\n            dd : '%d d~áýs',\n            M : 'á ~móñ~th',\n            MM : '%d m~óñt~hs',\n            y : 'á ~ýéár',\n            yy : '%d ý~éárs'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return xPseudo;\n\n})));\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var se = moment.defineLocale('se', {\n        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),\n        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),\n        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),\n        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),\n        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'MMMM D. [b.] YYYY',\n            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',\n            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[otne ti] LT',\n            nextDay: '[ihttin ti] LT',\n            nextWeek: 'dddd [ti] LT',\n            lastDay: '[ikte ti] LT',\n            lastWeek: '[ovddit] dddd [ti] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s geažes',\n            past : 'maŋit %s',\n            s : 'moadde sekunddat',\n            ss: '%d sekunddat',\n            m : 'okta minuhta',\n            mm : '%d minuhtat',\n            h : 'okta diimmu',\n            hh : '%d diimmut',\n            d : 'okta beaivi',\n            dd : '%d beaivvit',\n            M : 'okta mánnu',\n            MM : '%d mánut',\n            y : 'okta jahki',\n            yy : '%d jagit'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return se;\n\n})));\n"],"sourceRoot":""}